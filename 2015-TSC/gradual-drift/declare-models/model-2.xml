<?xml version="1.0" encoding="UTF-8"?><model><assignment language="ConDec" name="new model"><activitydefinitions><activity id="1" name="Register-complete"/><activity id="2" name="Create questionnaire-complete"/><activity id="3" name="Decide low/high-complete"/><activity id="4" name="Send questionnaire-complete"/><activity id="5" name="Low claim split-complete"/><activity id="6" name="Receive response-complete"/><activity id="7" name="Low Insurance Check-complete"/><activity id="8" name="Low Medical History Check-complete"/><activity id="9" name="Low claim join-complete"/><activity id="10" name="Prepare Notification-complete"/><activity id="11" name="By Phone-complete"/><activity id="12" name="Notification sent-complete"/><activity id="13" name="Archive-complete"/><activity id="14" name="Skip response-complete"/><activity id="15" name="By Post-complete"/><activity id="16" name="High Insurance Check-complete"/><activity id="17" name="Contact Hospital-complete"/><activity id="18" name="High Medical History Check-complete"/><activity id="19" name="High claim join-complete"/><activity id="20" name="By Email-complete"/></activitydefinitions><constraintdefinitions><constraint id="1" mandatory="true"><condition></condition><name>init</name><template><description>Each instance has to start with execution of &lt;b&gt;Register-complete&lt;/b&gt;.</description><display>init</display><name>init</name><text>( ( "A.started" \/ "A.cancelled" ) W  "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because the first executed task 
in this instance was not &lt;b&gt;Register-complete&lt;/b&gt;.  &lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either:
&lt;ul&gt;
&lt;li&gt;none of the tasks in this instance were executed yet, or&lt;/li&gt;
&lt;li&gt;the first executed task is &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="2" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="3" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="4" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="5" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="6" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="7" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="8" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="9" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="10" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="11" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="12" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="13" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="14" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="15" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="16" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="17" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="18" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="19" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="20" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="21" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="22" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="23" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="24" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="25" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="26" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="27" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="28" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="29" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="30" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="31" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="32" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="33" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="34" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="35" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="36" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="37" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="38" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="39" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="40" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="41" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="42" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="43" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="44" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="45" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="46" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="47" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="48" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="49" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="50" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="51" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="52" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="53" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="54" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="55" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="56" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="57" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="58" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="59" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="60" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="61" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="62" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="63" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="64" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="65" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="66" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="67" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="68" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="69" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="70" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="71" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="72" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="73" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="74" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="75" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="76" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="77" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="78" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="79" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="80" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="81" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="82" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="83" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="84" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="85" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="86" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="87" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="88" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="89" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="90" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="91" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="92" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="93" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="94" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="95" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="96" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="97" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="98" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="99" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="100" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="101" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="102" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="103" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="104" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="105" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="106" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="107" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="108" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="109" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="110" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="111" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="112" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="113" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="114" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="115" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="116" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="117" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="118" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="119" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="120" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="121" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="122" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="123" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="124" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="125" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="126" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="127" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="128" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="129" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="130" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="131" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="132" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="133" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="134" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="135" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="136" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="137" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="138" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="139" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="140" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="141" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="142" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="143" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="144" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="145" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="146" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="147" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="148" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="149" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="150" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="151" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="152" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="153" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="154" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="155" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="156" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="157" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="158" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="159" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="160" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="161" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="162" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="163" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="164" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="165" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="166" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Register-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="167" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Create questionnaire-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="168" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Decide low/high-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="169" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="170" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="171" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Notification sent-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Notification sent-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="172" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Archive-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Archive-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Archive-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="173" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Create questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Create questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="174" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Decide low/high-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Decide low/high-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="175" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="176" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim split-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Low claim split-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim split-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="177" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Receive response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Receive response-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Receive response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="178" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="179" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="180" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="181" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="182" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="183" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="184" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="185" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Skip response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Skip response-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Skip response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="186" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="187" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="188" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="189" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="190" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="191" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="192" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="193" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim split-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low claim split-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim split-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="194" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Receive response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Receive response-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Receive response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="195" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="196" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="197" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="198" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="199" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="200" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="201" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="202" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Skip response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Skip response-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Skip response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="203" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="204" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="205" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="206" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="207" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="208" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="209" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="210" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim split-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Low claim split-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim split-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="211" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Receive response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Receive response-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Receive response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="212" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="213" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="214" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="215" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="216" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="217" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="218" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="219" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Skip response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Skip response-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Skip response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="220" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="221" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="222" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="223" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="224" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="225" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="226" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Receive response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Receive response-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Receive response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="227" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="228" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="229" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="230" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="231" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="232" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="233" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="234" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Skip response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Skip response-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Skip response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="235" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="236" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="237" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="238" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="239" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="240" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="241" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="242" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="243" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="244" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="245" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="246" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="247" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="248" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="249" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="250" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Notification sent-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Notification sent-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="251" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High Insurance Check-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;High Insurance Check-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="252" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High Insurance Check-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;High Insurance Check-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="253" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High Insurance Check-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;High Insurance Check-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="254" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Contact Hospital-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Contact Hospital-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="255" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High Medical History Check-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;High Medical History Check-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="256" mandatory="true"><condition></condition><name>chain response</name><template><description>After A the  next one has to be B.</description><display>chain response</display><name>chain response</name><text>[] ( ( "A"  -&gt; X( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="257" mandatory="true"><condition></condition><name>chain response</name><template><description>After A the  next one has to be B.</description><display>chain response</display><name>chain response</name><text>[] ( ( "A"  -&gt; X( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="258" mandatory="true"><condition></condition><name>chain response</name><template><description>After A the  next one has to be B.</description><display>chain response</display><name>chain response</name><text>[] ( ( "A"  -&gt; X( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="259" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim split-complete&lt;/b&gt; or &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="260" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim split-complete&lt;/b&gt; or &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="261" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim split-complete&lt;/b&gt; or &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="262" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim split-complete&lt;/b&gt; or &lt;b&gt;High claim join-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="263" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Receive response-complete&lt;/b&gt; or &lt;b&gt;Skip response-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="264" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; or &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="265" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; or &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="266" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; or &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="267" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; or &lt;b&gt;High claim join-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="268" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; or &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="269" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; or &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="270" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; or &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="271" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; or &lt;b&gt;High claim join-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="272" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim join-complete&lt;/b&gt; or &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="273" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim join-complete&lt;/b&gt; or &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="274" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim join-complete&lt;/b&gt; or &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="275" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim join-complete&lt;/b&gt; or &lt;b&gt;High claim join-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="276" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="277" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="278" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="279" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="280" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="281" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="282" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="283" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="284" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="285" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="286" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="287" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="288" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="289" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="290" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="291" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="292" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="293" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="294" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="295" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="296" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="297" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="298" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="299" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="300" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="301" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="302" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="303" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="304" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="305" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="306" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="307" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="308" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="309" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="310" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="311" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="312" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="313" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="314" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="315" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="316" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="317" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="318" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="319" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="320" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="321" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="322" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="323" mandatory="true"><condition></condition><name>chain succession</name><template><description>A and B can happen only next to each other.</description><display>chain succession</display><name>chain succession</name><text>[](  ( "A" = X( "B" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="324" mandatory="true"><condition></condition><name>chain precedence</name><template><description>B can be executed only directly after A.</description><display>chain precedence</display><name>chain precedence</name><text>[]( ( X( "B" ) -&gt; "A") )/\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="325" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.
and
2. &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Create questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="326" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Decide low/high-complete&lt;/b&gt;.
and
2. &lt;b&gt;Decide low/high-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Decide low/high-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="327" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.
and
2. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="328" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.
and
2. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="329" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="330" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="331" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Create questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.
and
2. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="332" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Create questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.
and
2. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="333" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Create questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="334" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Create questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="335" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Decide low/high-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.
and
2. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="336" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Decide low/high-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.
and
2. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="337" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Decide low/high-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="338" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Decide low/high-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="339" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Send questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.
and
2. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="340" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Send questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="341" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Send questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="342" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low claim split-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="343" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low claim split-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="344" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low claim split-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low claim join-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="345" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low claim join-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="346" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low claim join-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="347" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Prepare Notification-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="348" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Prepare Notification-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="349" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Notification sent-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Notification sent-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Notification sent-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="350" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;High Insurance Check-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.
and
2. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High Insurance Check-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;High Insurance Check-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="351" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;High Insurance Check-complete&lt;/b&gt; there has to be at least one &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.
and
2. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High Insurance Check-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;High Insurance Check-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="352" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;High Insurance Check-complete&lt;/b&gt; there has to be at least one &lt;b&gt;High claim join-complete&lt;/b&gt;.
and
2. &lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High Insurance Check-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;High Insurance Check-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="353" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Contact Hospital-complete&lt;/b&gt; there has to be at least one &lt;b&gt;High claim join-complete&lt;/b&gt;.
and
2. &lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Contact Hospital-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Contact Hospital-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="354" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;High Medical History Check-complete&lt;/b&gt; there has to be at least one &lt;b&gt;High claim join-complete&lt;/b&gt;.
and
2. &lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High Medical History Check-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;High Medical History Check-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="355" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="356" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="357" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="358" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="359" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="360" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="361" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="362" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="363" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="364" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="365" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="366" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="367" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="368" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="369" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="370" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="371" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="372" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="373" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="374" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="375" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="376" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="377" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="378" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="379" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="380" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="381" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="382" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="383" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="384" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="385" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="386" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="387" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="388" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="389" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="390" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="391" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="392" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="393" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="394" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="395" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="396" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="397" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="398" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="399" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="400" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="401" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="402" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="403" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="404" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="405" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="406" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="407" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="408" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="409" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="410" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="411" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="412" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="413" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="414" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="415" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="416" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="417" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="418" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="419" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="420" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="421" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="422" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="423" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="424" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="425" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="426" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="427" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="428" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="429" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="430" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="431" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="432" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="433" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="434" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="435" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="436" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="437" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="438" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="439" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Decide low/high-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="440" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="441" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="442" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="443" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="444" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="445" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="446" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="447" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="448" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; is executed, activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="449" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="450" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="451" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="452" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="453" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="454" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="455" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="456" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="457" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low claim join-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="458" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="459" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="460" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="461" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Receive response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Receive response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="462" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Receive response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Receive response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="463" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Receive response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Receive response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="464" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low claim join-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="465" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="466" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="467" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="468" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low claim join-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="469" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="470" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="471" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="472" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim join-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim join-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="473" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim join-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim join-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="474" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim join-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim join-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="475" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="476" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="477" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Skip response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Skip response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="478" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="479" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Contact Hospital-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="480" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="481" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High claim join-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High claim join-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High claim join-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High claim join-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="482" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Phone-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Phone-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Phone-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="483" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Phone-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Phone-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Phone-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="484" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Notification sent-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Notification sent-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="485" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Skip response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Skip response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="486" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Post-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Post-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Post-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Post-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Post-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="487" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="488" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Contact Hospital-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="489" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="490" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High claim join-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High claim join-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High claim join-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High claim join-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="491" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Email-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Email-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Email-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="492" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Skip response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Skip response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="493" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Post-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Post-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Post-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Post-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Post-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="494" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="495" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Contact Hospital-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="496" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="497" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High claim join-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High claim join-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High claim join-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High claim join-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="498" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Email-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Email-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Email-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="499" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="500" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="501" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;High claim join-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;High claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;High claim join-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;High claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;High claim join-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="502" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Contact Hospital-complete&lt;/b&gt; is executed, activity &lt;b&gt;High claim join-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;High claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, and task &lt;b&gt;High claim join-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;High claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;High claim join-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="503" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;High claim join-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;High claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;High claim join-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;High claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;High claim join-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="504" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="505" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="506" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="507" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="508" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="509" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="510" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="511" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="512" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="513" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="514" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="515" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="516" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="517" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="518" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="519" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="520" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="521" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="522" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="523" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="524" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="525" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="526" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="527" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="528" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="529" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="530" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="531" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="532" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="533" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="534" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="535" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="536" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="537" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="538" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="539" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="540" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="541" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="542" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="543" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="544" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="545" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="546" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="547" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="548" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="549" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="550" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="551" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="552" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="553" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="554" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="555" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="556" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="557" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="558" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="559" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="560" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="561" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="562" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="563" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="564" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="565" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="566" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="567" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="568" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="569" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="570" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="571" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="572" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="573" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="574" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="575" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="576" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="577" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="578" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="579" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="580" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="581" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="582" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="583" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="584" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="585" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="586" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="587" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="588" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="589" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="590" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="591" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="592" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="593" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="594" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="595" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="596" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="597" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="598" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="599" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="600" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="601" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="602" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="603" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="604" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="605" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="606" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="607" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="608" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="609" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="610" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="611" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="612" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="613" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="614" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="615" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="616" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="617" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="618" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="619" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="620" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="621" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="622" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="623" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="624" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="625" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="626" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="627" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="628" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="629" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="630" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="631" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="632" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="633" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="634" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="635" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="636" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="637" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="638" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="639" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="640" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="641" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="642" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="643" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="644" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="645" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="646" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="647" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="648" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="649" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="650" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="651" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="652" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="653" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="654" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="655" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="656" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="657" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="658" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="659" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="660" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="661" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="662" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="663" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="664" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="665" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="666" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="667" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="668" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="669" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="670" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="671" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="672" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="673" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="674" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="675" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="676" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="677" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="678" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="679" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="680" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="681" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="682" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="683" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="684" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="685" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="686" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="687" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="688" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="689" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="690" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="691" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="692" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="693" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="694" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="695" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="696" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="697" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="698" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="699" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="700" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="701" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="702" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="703" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="704" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="705" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="706" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="707" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="708" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="709" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="710" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="711" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="712" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="713" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="714" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="715" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="716" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="717" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="718" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="719" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="720" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="721" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="722" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="723" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="724" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="725" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="726" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="727" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="728" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="729" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="730" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="731" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="732" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="733" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="734" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="735" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="736" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="737" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="738" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="739" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="740" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="741" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="742" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="743" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="744" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="745" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="746" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="747" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="748" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="749" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="750" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="751" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="752" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="753" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="754" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="755" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="756" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="757" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="758" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="759" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="760" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="761" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="762" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="763" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="764" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="765" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="766" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="767" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="768" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="769" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="770" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="771" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="772" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="773" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="774" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="775" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="776" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="777" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="778" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="779" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="780" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="781" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="782" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="783" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="784" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="785" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="786" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="787" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="788" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="789" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="790" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="791" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="792" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="793" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="794" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="795" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="796" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="797" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="798" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="799" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="800" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="801" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="802" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="803" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="804" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="805" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="806" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="807" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="808" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="809" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="810" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="811" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="812" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="813" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="814" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="815" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="816" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="817" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="818" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="819" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="820" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="821" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="822" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="823" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="824" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="825" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="826" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="827" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="828" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="829" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="830" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="831" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="832" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="833" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="834" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="835" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="836" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="837" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="838" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="839" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="840" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="841" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="842" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="843" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="844" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="845" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="846" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="847" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="848" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="849" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="850" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="851" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="852" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="853" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="854" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="855" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="856" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="857" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="858" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="859" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="860" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="861" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="862" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="863" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="864" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="865" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="866" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="867" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="868" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="869" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="870" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="871" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="872" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="873" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="874" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="875" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="876" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="877" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="878" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="879" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="880" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="881" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="882" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="883" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="884" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="885" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="886" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="887" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="888" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="889" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="890" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="891" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="892" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="893" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="894" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="895" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="896" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="897" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="898" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="899" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="900" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="901" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="902" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="903" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="904" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="905" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="906" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="907" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="908" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="909" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="910" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="911" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="912" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="913" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="914" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="915" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="916" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="917" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="918" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="919" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="920" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="921" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="922" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED">VIOLATED undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint></constraintdefinitions><graphical><activities><cell height="30.0" id="1" width="130.0" x="2911.0092630110944" y="0.0"/><cell height="30.0" id="2" width="190.0" x="2538.2929445538757" y="169.68148574323658"/><cell height="30.0" id="3" width="165.0" x="2268.7774156938776" y="350.60820496327676"/><cell height="30.0" id="4" width="180.0" x="1697.919801207538" y="676.4169591463362"/><cell height="30.0" id="5" width="165.0" x="387.845375316867" y="1472.6015878197486"/><cell height="30.0" id="6" width="170.0" x="0.0" y="1351.6001465211607"/><cell height="30.0" id="7" width="185.0" x="67.74481062371198" y="1410.0526744734673"/><cell height="30.0" id="8" width="215.0" x="872.4279095967794" y="1209.228417051917"/><cell height="30.0" id="9" width="160.0" x="1042.4309756875282" y="1294.630685232587"/><cell height="30.0" id="10" width="190.0" x="1809.4416728047108" y="1124.1978449529909"/><cell height="30.0" id="11" width="130.0" x="2348.0550465577167" y="653.7849466559722"/><cell height="30.0" id="12" width="175.0" x="2199.1630474855547" y="1277.0406063690332"/><cell height="30.0" id="13" width="125.0" x="2561.9137448129095" y="1411.6585764652464"/><cell height="30.0" id="14" width="155.0" x="789.7802397117888" y="1107.3281369337883"/><cell height="30.0" id="15" width="125.0" x="1697.0351386685174" y="1253.9329368368385"/><cell height="30.0" id="16" width="190.0" x="2560.0630947358454" y="2141.971990397117"/><cell height="30.0" id="17" width="170.0" x="2660.015890059838" y="2342.4615044214233"/><cell height="30.0" id="18" width="220.0" x="2521.5326497176834" y="1542.5818765558738"/><cell height="30.0" id="19" width="165.0" x="2495.3763398547403" y="1831.3194251522239"/><cell height="30.0" id="20" width="130.0" x="2492.820469289332" y="1231.2928667894082"/></activities><constraints><cell height="1.0" id="2" width="1.0" x="2809.968186019365" y="105.88714278529028"/><cell height="1.0" id="3" width="1.0" x="2843.865291437857" y="98.95637076522416"/><cell height="1.0" id="4" width="1.0" x="2499.702350630923" y="146.6810181142901"/><cell height="1.0" id="5" width="1.0" x="2741.4292347103574" y="107.31070811293097"/><cell height="1.0" id="6" width="1.0" x="2260.166918367109" y="189.03772390105007"/><cell height="1.0" id="7" width="1.0" x="2330.4800413502235" y="177.41372384395038"/><cell height="1.0" id="8" width="1.0" x="4766.725191749662" y="501.1899149006318"/><cell height="1.0" id="9" width="1.0" x="1218.1222723501608" y="290.1202968550958"/><cell height="1.0" id="10" width="1.0" x="1324.8897620794753" y="337.26113488043137"/><cell height="1.0" id="11" width="1.0" x="4756.307267485701" y="501.1899149006318"/><cell height="1.0" id="12" width="1.0" x="4795.13670309935" y="501.1899149006318"/><cell height="1.0" id="13" width="1.0" x="4885.33970744351" y="501.1899149006318"/><cell height="1.0" id="14" width="1.0" x="4874.757033191805" y="501.1899149006318"/><cell height="1.0" id="15" width="1.0" x="4922.490736823333" y="501.1899149006318"/><cell height="1.0" id="16" width="1.0" x="3560.1543815976033" y="501.18991490063206"/><cell height="1.0" id="17" width="1.0" x="3551.2889881576048" y="501.18991490063206"/><cell height="1.0" id="18" width="1.0" x="3845.8669169303585" y="501.18991490063195"/><cell height="1.0" id="19" width="1.0" x="3829.063590498246" y="501.18991490063195"/><cell height="1.0" id="20" width="1.0" x="4726.95900324532" y="501.1899149006318"/><cell height="1.0" id="21" width="1.0" x="3166.9626099136967" y="501.18991490063206"/><cell height="1.0" id="22" width="1.0" x="4048.7505959229456" y="504.44531106874655"/><cell height="1.0" id="23" width="1.0" x="4091.7428705791654" y="506.11349945677915"/><cell height="1.0" id="24" width="1.0" x="3884.738855620751" y="501.9007576757047"/><cell height="1.0" id="25" width="1.0" x="4028.8073587058007" y="501.18991490063195"/><cell height="1.0" id="26" width="1.0" x="3689.660395032874" y="501.18991490063206"/><cell height="1.0" id="27" width="1.0" x="2505.7983028622316" y="299.39021080958366"/><cell height="1.0" id="28" width="1.0" x="2487.52986937555" y="299.3167353056662"/><cell height="1.0" id="29" width="1.0" x="4811.12900306511" y="501.1899149006318"/><cell height="1.0" id="30" width="1.0" x="4734.214399413434" y="501.1899149006318"/><cell height="1.0" id="31" width="1.0" x="1214.0887749398394" y="560.7825912454326"/><cell height="1.0" id="32" width="1.0" x="1040.512967574753" y="493.27138043936077"/><cell height="1.0" id="33" width="1.0" x="1112.2032987052562" y="553.2591094306819"/><cell height="1.0" id="34" width="1.0" x="1624.793839693778" y="504.7869783794526"/><cell height="1.0" id="35" width="1.0" x="1611.4889748298517" y="636.3858772785087"/><cell height="1.0" id="36" width="1.0" x="2036.6464213686552" y="566.2640564977811"/><cell height="1.0" id="37" width="1.0" x="2240.993783961867" y="606.0815278160735"/><cell height="1.0" id="38" width="1.0" x="4855.247373645854" y="501.1899149006318"/><cell height="1.0" id="39" width="1.0" x="4782.182940127084" y="501.1899149006318"/><cell height="1.0" id="40" width="1.0" x="4771.690392119549" y="501.1899149006318"/><cell height="1.0" id="41" width="1.0" x="3620.0132885014796" y="501.18991490063206"/><cell height="1.0" id="42" width="1.0" x="3612.904209408348" y="501.18991490063206"/><cell height="1.0" id="43" width="1.0" x="1463.6575355256794" y="517.3860280261592"/><cell height="1.0" id="44" width="1.0" x="1679.8566161385143" y="621.2831215092349"/><cell height="1.0" id="45" width="1.0" x="3839.54102548375" y="501.18991490063195"/><cell height="1.0" id="46" width="1.0" x="3928.7870593309467" y="501.18991490063195"/><cell height="1.0" id="47" width="1.0" x="3657.3865181489837" y="498.8880021947095"/><cell height="1.0" id="48" width="1.0" x="3745.223425146685" y="492.3434488016677"/><cell height="1.0" id="49" width="1.0" x="3560.688530980549" y="501.18991490063206"/><cell height="1.0" id="50" width="1.0" x="2094.0708481485285" y="518.5216623738349"/><cell height="1.0" id="51" width="1.0" x="2116.0019078036394" y="500.60566713231873"/><cell height="1.0" id="52" width="1.0" x="1120.0386811350375" y="730.5061054275335"/><cell height="1.0" id="53" width="1.0" x="940.6463399966834" y="660.154208281477"/><cell height="1.0" id="54" width="1.0" x="1036.7518062834843" y="701.3236455053477"/><cell height="1.0" id="55" width="1.0" x="1502.9520162097012" y="735.3375122353443"/><cell height="1.0" id="56" width="1.0" x="1589.58752142072" y="714.3240365060781"/><cell height="1.0" id="57" width="1.0" x="2111.262918886135" y="742.3471479575544"/><cell height="1.0" id="58" width="1.0" x="2082.1767373988782" y="773.8852387884915"/><cell height="1.0" id="59" width="1.0" x="2367.854089240937" y="497.6560993113165"/><cell height="1.0" id="60" width="1.0" x="3512.4767293204845" y="501.1899149006318"/><cell height="1.0" id="61" width="1.0" x="3529.868127448727" y="501.1899149006318"/><cell height="1.0" id="62" width="1.0" x="4842.418536605801" y="501.1899149006318"/><cell height="1.0" id="63" width="1.0" x="4863.89416794221" y="501.1899149006318"/><cell height="1.0" id="64" width="1.0" x="1409.4628109375763" y="699.5115719573938"/><cell height="1.0" id="65" width="1.0" x="1893.2767624352994" y="784.7620500356625"/><cell height="1.0" id="66" width="1.0" x="3746.1027756825342" y="500.09509662076584"/><cell height="1.0" id="67" width="1.0" x="3759.751932873785" y="500.1742728273867"/><cell height="1.0" id="68" width="1.0" x="3695.4114841699416" y="501.1899149006318"/><cell height="1.0" id="69" width="1.0" x="3473.418723477307" y="501.6540416956859"/><cell height="1.0" id="70" width="1.0" x="2370.1911934654972" y="992.2515410350702"/><cell height="1.0" id="71" width="1.0" x="852.051530165154" y="1150.0195871770436"/><cell height="1.0" id="72" width="1.0" x="729.916152977188" y="922.4124487117149"/><cell height="1.0" id="73" width="1.0" x="777.9551297013764" y="1030.8393115377844"/><cell height="1.0" id="74" width="1.0" x="1301.5527686874373" y="941.70394446042"/><cell height="1.0" id="75" width="1.0" x="1455.7389993249078" y="978.308481842186"/><cell height="1.0" id="76" width="1.0" x="1845.012958801787" y="1007.1175565459225"/><cell height="1.0" id="77" width="1.0" x="1873.363004383408" y="1026.4010719129965"/><cell height="1.0" id="78" width="1.0" x="2105.820206013258" y="691.3737086459838"/><cell height="1.0" id="79" width="1.0" x="2039.4517533238202" y="1142.7984973561415"/><cell height="1.0" id="80" width="1.0" x="2081.7152442766514" y="1142.9624131431788"/><cell height="1.0" id="81" width="1.0" x="3566.418350470474" y="501.1899149006318"/><cell height="1.0" id="82" width="1.0" x="3555.282826845153" y="501.1899149006318"/><cell height="1.0" id="83" width="1.0" x="1369.5723149960884" y="885.8969170993803"/><cell height="1.0" id="84" width="1.0" x="1761.6366753499317" y="1014.8508759309889"/><cell height="1.0" id="85" width="1.0" x="3860.7465427036827" y="501.1899149006318"/><cell height="1.0" id="86" width="1.0" x="4582.2120032453195" y="501.1899149006318"/><cell height="1.0" id="87" width="1.0" x="3589.3063522101743" y="501.1899149006318"/><cell height="1.0" id="88" width="1.0" x="3679.972752909983" y="501.1899149006318"/><cell height="1.0" id="89" width="1.0" x="3433.225517446369" y="501.1899149006318"/><cell height="1.0" id="90" width="1.0" x="259.0053193218031" y="1512.8722955657272"/><cell height="1.0" id="91" width="1.0" x="326.5525734773605" y="1431.8961753680262"/><cell height="1.0" id="92" width="1.0" x="618.3939736877728" y="1413.6433924543414"/><cell height="1.0" id="93" width="1.0" x="554.0641785902766" y="1433.4429284463606"/><cell height="1.0" id="94" width="1.0" x="791.0602121513098" y="1413.354197463472"/><cell height="1.0" id="95" width="1.0" x="877.1268613531741" y="1385.6413576252412"/><cell height="1.0" id="96" width="1.0" x="1078.1523778940382" y="1494.0091182274455"/><cell height="1.0" id="97" width="1.0" x="1225.9947067308485" y="1561.536954036339"/><cell height="1.0" id="98" width="1.0" x="3422.5436022759923" y="501.1899149006318"/><cell height="1.0" id="99" width="1.0" x="485.06044670573465" y="1770.7259844549098"/><cell height="1.0" id="100" width="1.0" x="3304.5105879177736" y="501.1899149006318"/><cell height="1.0" id="101" width="1.0" x="3325.905472549012" y="501.1899149006318"/><cell height="1.0" id="102" width="1.0" x="671.6653610892225" y="1300.2363381266102"/><cell height="1.0" id="103" width="1.0" x="652.6247802647653" y="1298.2221739590245"/><cell height="1.0" id="104" width="1.0" x="490.9730338407138" y="1746.222298073963"/><cell height="1.0" id="105" width="1.0" x="610.7005135653832" y="1354.3421053058223"/><cell height="1.0" id="106" width="1.0" x="933.2372723364751" y="1258.8467659038188"/><cell height="1.0" id="107" width="1.0" x="1137.43059381828" y="1536.3343051808106"/><cell height="1.0" id="108" width="1.0" x="3345.5380781205977" y="501.1899149006318"/><cell height="1.0" id="109" width="1.0" x="1032.9749073453618" y="1282.5204587616468"/><cell height="1.0" id="110" width="1.0" x="1034.8212229739563" y="1276.6203046484918"/><cell height="1.0" id="111" width="1.0" x="1385.350229012311" y="1193.4710224283615"/><cell height="1.0" id="112" width="1.0" x="3436.446776241908" y="501.1899149006318"/><cell height="1.0" id="113" width="1.0" x="3439.79782552803" y="501.1899149006318"/><cell height="1.0" id="114" width="1.0" x="1471.1761072534553" y="1245.0371807872436"/><cell height="1.0" id="115" width="1.0" x="3381.6070157425997" y="501.1899149006318"/><cell height="1.0" id="116" width="1.0" x="3462.7989583183075" y="501.1899149006318"/><cell height="1.0" id="117" width="1.0" x="2097.445103108448" y="949.8907338928889"/><cell height="1.0" id="118" width="1.0" x="3355.241976792003" y="501.1899149006318"/><cell height="1.0" id="119" width="1.0" x="3428.23440230788" y="501.1899149006318"/><cell height="1.0" id="120" width="1.0" x="3592.4747400856086" y="501.1899149006318"/><cell height="1.0" id="121" width="1.0" x="3534.591504235198" y="501.1899149006318"/><cell height="1.0" id="122" width="1.0" x="1416.870035130984" y="1103.3724618630472"/><cell height="1.0" id="123" width="1.0" x="3362.690214238461" y="501.1899149006318"/><cell height="1.0" id="124" width="1.0" x="2084.338278374761" y="1845.4142141266182"/><cell height="1.0" id="125" width="1.0" x="2099.131650913757" y="2005.5286294860202"/><cell height="1.0" id="126" width="1.0" x="3648.096353204344" y="501.1899149006318"/><cell height="1.0" id="127" width="1.0" x="2110.845637835156" y="1681.6642171532287"/><cell height="1.0" id="128" width="1.0" x="2199.853490254918" y="1195.1016506838323"/><cell height="1.0" id="129" width="1.0" x="3445.604817890137" y="501.1899149006318"/><cell height="1.0" id="130" width="1.0" x="3606.7012368414125" y="501.1899149006318"/><cell height="1.0" id="131" width="1.0" x="2372.8792080622825" y="1439.0026501697987"/><cell height="1.0" id="132" width="1.0" x="2382.374164205207" y="1417.9651834996532"/><cell height="1.0" id="133" width="1.0" x="1571.4590516468334" y="1327.3930924294448"/><cell height="1.0" id="134" width="1.0" x="1899.819373248316" y="1282.3130469612686"/><cell height="1.0" id="135" width="1.0" x="2376.5912215353806" y="1954.8034497806739"/><cell height="1.0" id="136" width="1.0" x="2319.037821879841" y="2094.988305787275"/><cell height="1.0" id="137" width="1.0" x="2388.3175310125034" y="1550.054571273705"/><cell height="1.0" id="138" width="1.0" x="2367.3599551212205" y="1734.6400010005768"/><cell height="1.0" id="139" width="1.0" x="2349.932774794146" y="1313.8030340374364"/><cell height="1.0" id="140" width="1.0" x="1456.2550172971885" y="1750.4717133675522"/><cell height="1.0" id="141" width="1.0" x="2017.097555164696" y="1528.7186844292091"/><cell height="1.0" id="142" width="1.0" x="2733.940517373175" y="1939.6821154286663"/><cell height="1.0" id="143" width="1.0" x="2831.425738650268" y="2020.7128231127429"/><cell height="1.0" id="144" width="1.0" x="2607.2973732606456" y="1521.113009071263"/><cell height="1.0" id="145" width="1.0" x="2496.9293035905407" y="1785.509938498432"/><cell height="1.0" id="146" width="1.0" x="2556.8896682158193" y="1372.230156542713"/><cell height="1.0" id="147" width="1.0" x="2710.7512921126295" y="2317.684794521303"/><cell height="1.0" id="148" width="1.0" x="2675.057004782773" y="2302.130257274544"/><cell height="1.0" id="149" width="1.0" x="2708.3777997303096" y="1950.0547483193839"/><cell height="1.0" id="150" width="1.0" x="2653.8878866183327" y="1891.4423705644606"/><cell height="1.0" id="151" width="1.0" x="2620.890097353939" y="2104.7987924484974"/><cell height="1.0" id="152" width="1.0" x="2541.419640092166" y="2046.296506062497"/><cell height="1.0" id="153" width="1.0" x="2809.4624839936714" y="2072.5664553348392"/><cell height="1.0" id="154" width="1.0" x="2791.0873141395405" y="2120.661361564826"/><cell height="1.0" id="155" width="1.0" x="2743.751523005476" y="2275.974557442397"/><cell height="1.0" id="156" width="1.0" x="2753.792248182992" y="2224.792574551408"/><cell height="1.0" id="157" width="1.0" x="2531.192292511946" y="1788.0711601139021"/><cell height="1.0" id="158" width="1.0" x="2573.1954500527827" y="1765.593105500027"/><cell height="1.0" id="173" width="1.0" x="2828.960118997514" y="115.8924874059881"/><cell height="1.0" id="174" width="1.0" x="2638.864598781927" y="140.12879356119498"/><cell height="1.0" id="175" width="1.0" x="2224.2909064486753" y="196.63356132751318"/><cell height="1.0" id="176" width="1.0" x="1347.8146447503495" y="338.0724466279846"/><cell height="1.0" id="177" width="1.0" x="1223.3293857078268" y="299.48383136436735"/><cell height="1.0" id="178" width="1.0" x="1274.3766644308926" y="324.5721406035636"/><cell height="1.0" id="179" width="1.0" x="3774.479942223509" y="501.1899149006318"/><cell height="1.0" id="180" width="1.0" x="3811.3679439632097" y="501.1899149006318"/><cell height="1.0" id="181" width="1.0" x="3822.2050324178135" y="501.1899149006318"/><cell height="1.0" id="182" width="1.0" x="3942.943257748648" y="501.1899149006318"/><cell height="1.0" id="183" width="1.0" x="3934.935983999427" y="501.1899149006318"/><cell height="1.0" id="184" width="1.0" x="4010.8310017607737" y="501.1899149006318"/><cell height="1.0" id="185" width="1.0" x="1591.22975142538" y="320.3132731998503"/><cell height="1.0" id="186" width="1.0" x="3214.2433393905176" y="501.18991490063195"/><cell height="1.0" id="187" width="1.0" x="4077.852616752111" y="506.72830798883683"/><cell height="1.0" id="188" width="1.0" x="4096.468557963661" y="508.09909893374584"/><cell height="1.0" id="189" width="1.0" x="3876.1878897833553" y="501.18991490063195"/><cell height="1.0" id="190" width="1.0" x="4020.24913800909" y="504.90604116892746"/><cell height="1.0" id="191" width="1.0" x="3711.877774374089" y="506.36926838421135"/><cell height="1.0" id="192" width="1.0" x="2073.769381749058" y="469.7244101270865"/><cell height="1.0" id="193" width="1.0" x="1222.3763533261908" y="563.7641909895164"/><cell height="1.0" id="194" width="1.0" x="1023.3320029381008" y="553.8957343284691"/><cell height="1.0" id="195" width="1.0" x="1159.9197961936086" y="557.4397979480409"/><cell height="1.0" id="196" width="1.0" x="1652.0667137117982" y="539.7546199721212"/><cell height="1.0" id="197" width="1.0" x="1628.029697832267" y="635.798895280916"/><cell height="1.0" id="198" width="1.0" x="2023.3788649758185" y="570.0115807123559"/><cell height="1.0" id="199" width="1.0" x="2551.72970415044" y="491.7888730905854"/><cell height="1.0" id="200" width="1.0" x="3543.8085100001304" y="501.1899149006318"/><cell height="1.0" id="201" width="1.0" x="3797.637983871738" y="501.1899149006318"/><cell height="1.0" id="202" width="1.0" x="1572.368721802758" y="501.1899149006322"/><cell height="1.0" id="203" width="1.0" x="1703.247324480057" y="616.6893081046995"/><cell height="1.0" id="204" width="1.0" x="3865.5782789496348" y="502.17491659578616"/><cell height="1.0" id="205" width="1.0" x="3994.210485696663" y="517.1064744801843"/><cell height="1.0" id="206" width="1.0" x="3804.50819994451" y="501.1899149006318"/><cell height="1.0" id="207" width="1.0" x="3898.647192098123" y="501.1899149006318"/><cell height="1.0" id="208" width="1.0" x="3791.003813712789" y="501.1899149006318"/><cell height="1.0" id="209" width="1.0" x="2060.5758899344014" y="527.2322585703163"/><cell height="1.0" id="210" width="1.0" x="1135.1429226955497" y="733.8102525271058"/><cell height="1.0" id="211" width="1.0" x="1020.2279847895416" y="670.2582523990188"/><cell height="1.0" id="212" width="1.0" x="1038.8325113164974" y="723.5565240015915"/><cell height="1.0" id="213" width="1.0" x="1485.3328458763845" y="737.9811875331927"/><cell height="1.0" id="214" width="1.0" x="1606.773471140911" y="712.9442649726627"/><cell height="1.0" id="215" width="1.0" x="2107.4875768824263" y="765.1922556089007"/><cell height="1.0" id="216" width="1.0" x="2377.627112210801" y="515.1199152701796"/><cell height="1.0" id="217" width="1.0" x="2301.921399671761" y="819.2544711867599"/><cell height="1.0" id="218" width="1.0" x="3521.851421548908" y="501.1899149006318"/><cell height="1.0" id="219" width="1.0" x="1454.0633661121562" y="651.7899542767143"/><cell height="1.0" id="220" width="1.0" x="1919.2132846489144" y="881.9758973022253"/><cell height="1.0" id="221" width="1.0" x="3734.3366877693898" y="499.70029955745395"/><cell height="1.0" id="222" width="1.0" x="3832.686877276378" y="505.7776515295265"/><cell height="1.0" id="223" width="1.0" x="3538.118833307141" y="501.1899149006318"/><cell height="1.0" id="224" width="1.0" x="3729.45962564337" y="501.1899149006318"/><cell height="1.0" id="225" width="1.0" x="3546.6277326480704" y="501.1899149006318"/><cell height="1.0" id="226" width="1.0" x="749.3210999975353" y="902.8244175905107"/><cell height="1.0" id="227" width="1.0" x="731.4400769639713" y="985.0389410431812"/><cell height="1.0" id="228" width="1.0" x="1341.1578506166315" y="930.3930477916897"/><cell height="1.0" id="229" width="1.0" x="1450.7445572139763" y="1063.209801217182"/><cell height="1.0" id="230" width="1.0" x="1846.6122374822526" y="1035.1080111070657"/><cell height="1.0" id="231" width="1.0" x="2081.830443039954" y="708.0102375278294"/><cell height="1.0" id="232" width="1.0" x="2056.7793992873185" y="1135.1001702220485"/><cell height="1.0" id="233" width="1.0" x="3373.7003781281846" y="501.1899149006318"/><cell height="1.0" id="234" width="1.0" x="1146.7575891965646" y="971.1932745664399"/><cell height="1.0" id="235" width="1.0" x="1776.5850862203786" y="1091.9017751220083"/><cell height="1.0" id="236" width="1.0" x="1953.065886873179" y="1977.2475048593358"/><cell height="1.0" id="237" width="1.0" x="3454.983466833405" y="501.1899149006318"/><cell height="1.0" id="238" width="1.0" x="1658.1511973145307" y="1657.2164379664384"/><cell height="1.0" id="239" width="1.0" x="2161.8064031711874" y="1090.7011898928392"/><cell height="1.0" id="240" width="1.0" x="224.4431420933991" y="1451.753092613287"/><cell height="1.0" id="241" width="1.0" x="710.4347029925302" y="1558.4412298918007"/><cell height="1.0" id="242" width="1.0" x="682.4850833106209" y="1433.501279733171"/><cell height="1.0" id="243" width="1.0" x="613.0648025579525" y="1389.6280692070445"/><cell height="1.0" id="244" width="1.0" x="1045.2626517764204" y="1279.1772402281763"/><cell height="1.0" id="245" width="1.0" x="2111.7494342392188" y="876.6777521132461"/><cell height="1.0" id="246" width="1.0" x="2041.0431224048814" y="1214.8245043770635"/><cell height="1.0" id="247" width="1.0" x="2082.0964861933626" y="1500.0521088940898"/><cell height="1.0" id="248" width="1.0" x="1809.2850296889728" y="1207.023632805911"/><cell height="1.0" id="249" width="1.0" x="2235.598454234683" y="1226.424778437202"/><cell height="1.0" id="250" width="1.0" x="2441.4964151924537" y="1392.3626498697847"/><cell height="1.0" id="251" width="1.0" x="2639.2987556215567" y="2391.5926842868266"/><cell height="1.0" id="252" width="1.0" x="2696.6441674272805" y="1932.4451840881406"/><cell height="1.0" id="253" width="1.0" x="2564.692808273875" y="2061.4450268865894"/><cell height="1.0" id="254" width="1.0" x="2759.1373337649115" y="2211.6313836355544"/><cell height="1.0" id="255" width="1.0" x="2581.1536563132227" y="1753.9807813215796"/><cell height="1.0" id="256" width="1.0" x="1525.2575521566891" y="1244.320107562895"/><cell height="1.0" id="257" width="1.0" x="2084.5061945386983" y="1679.9337335425175"/><cell height="1.0" id="258" width="1.0" x="2462.6795067141943" y="1381.1373522448403"/><cell height="1.0" id="259" width="1.0" x="1405.376496670176" y="2021.6886233613923"/><cell height="1.0" id="260" width="1.0" x="1498.878934740091" y="2360.707356890238"/><cell height="1.0" id="261" width="1.0" x="1424.2560841703755" y="1870.048426391855"/><cell height="1.0" id="262" width="1.0" x="3251.9443800918143" y="501.1899149006318"/><cell height="1.0" id="263" width="1.0" x="439.4494584261551" y="1176.2706014663834"/><cell height="1.0" id="264" width="1.0" x="791.2844538925923" y="2379.9313164783125"/><cell height="1.0" id="265" width="1.0" x="852.5340963244893" y="2575.7677053784873"/><cell height="1.0" id="266" width="1.0" x="3205.5862648852412" y="501.1899149006318"/><cell height="1.0" id="267" width="1.0" x="3231.115610406576" y="501.1899149006318"/><cell height="1.0" id="268" width="1.0" x="1612.7270413811834" y="1993.4156031421371"/><cell height="1.0" id="269" width="1.0" x="1619.4183774224239" y="2193.432863045168"/><cell height="1.0" id="270" width="1.0" x="3256.71284724712" y="501.1899149006318"/><cell height="1.0" id="271" width="1.0" x="3242.195899276838" y="501.1899149006318"/><cell height="1.0" id="272" width="1.0" x="1741.318893047902" y="2005.5877673353725"/><cell height="1.0" id="273" width="1.0" x="1832.798660798766" y="2142.7747381924178"/><cell height="1.0" id="274" width="1.0" x="1678.2638949433606" y="1709.8127576729908"/><cell height="1.0" id="275" width="1.0" x="1657.543148702029" y="1789.5895706172917"/><cell height="1.0" id="276" width="1.0" x="2783.239597597383" y="96.07118345850989"/><cell height="1.0" id="277" width="1.0" x="2532.6494294996282" y="142.92751834943084"/><cell height="1.0" id="278" width="1.0" x="2095.913328553905" y="222.47111137493454"/><cell height="1.0" id="279" width="1.0" x="3469.531133808152" y="501.1899149006318"/><cell height="1.0" id="280" width="1.0" x="3640.4228037763955" y="501.1899149006318"/><cell height="1.0" id="281" width="1.0" x="3949.073657394189" y="501.1899149006318"/><cell height="1.0" id="282" width="1.0" x="2013.0304224259485" y="490.3827661070243"/><cell height="1.0" id="283" width="1.0" x="3480.4037386528844" y="501.1899149006318"/><cell height="1.0" id="284" width="1.0" x="3486.284674657756" y="501.1899149006318"/><cell height="1.0" id="285" width="1.0" x="3702.5064846768596" y="501.1899149006318"/><cell height="1.0" id="286" width="1.0" x="1992.718630884404" y="579.6201531647208"/><cell height="1.0" id="287" width="1.0" x="2137.8765665997767" y="757.1552808492634"/><cell height="1.0" id="288" width="1.0" x="2294.4653047005677" y="792.9320909803137"/><cell height="1.0" id="289" width="1.0" x="3393.053128816185" y="501.1899149006318"/><cell height="1.0" id="290" width="1.0" x="1786.8894787661254" y="1029.1563737597514"/><cell height="1.0" id="291" width="1.0" x="2271.713354865395" y="501.1899149006318"/><cell height="1.0" id="292" width="1.0" x="2533.7034644563164" y="501.1899149006318"/><cell height="1.0" id="293" width="1.0" x="292.27279186104414" y="1548.705045550371"/><cell height="1.0" id="294" width="1.0" x="715.3343434661531" y="1390.6620462728179"/><cell height="1.0" id="295" width="1.0" x="655.3617497636258" y="1431.0744239827661"/><cell height="1.0" id="296" width="1.0" x="531.6461769228572" y="1355.2013071215847"/><cell height="1.0" id="297" width="1.0" x="1093.8873010984744" y="1290.5175016566461"/><cell height="1.0" id="298" width="1.0" x="2118.183506333838" y="1219.465206292858"/><cell height="1.0" id="299" width="1.0" x="2094.3833798401392" y="1493.3874022331165"/><cell height="1.0" id="300" width="1.0" x="2410.132695505999" y="1399.8098413615965"/><cell height="1.0" id="301" width="1.0" x="2851.942449300441" y="2402.1244305088985"/><cell height="1.0" id="302" width="1.0" x="2646.186123131364" y="1909.0785197167788"/><cell height="1.0" id="303" width="1.0" x="2648.875798337073" y="2143.6694669524254"/><cell height="1.0" id="304" width="1.0" x="2763.8542142939564" y="2196.885004151659"/><cell height="1.0" id="305" width="1.0" x="2543.3777782923803" y="1778.9830633055387"/><cell height="1.0" id="306" width="1.0" x="773.7590485667763" y="2293.1301246320622"/><cell height="1.0" id="307" width="1.0" x="812.3540295842413" y="2462.456949266383"/><cell height="1.0" id="308" width="1.0" x="1703.4966140262857" y="1948.389573538979"/><cell height="1.0" id="309" width="1.0" x="1422.7292758413735" y="1906.7371387522173"/><cell height="1.0" id="310" width="1.0" x="455.0778225758067" y="1220.2138199025912"/><cell height="1.0" id="311" width="1.0" x="1639.4914030362172" y="1790.3455803272313"/><cell height="1.0" id="312" width="1.0" x="1591.6511684798575" y="2016.8704130161036"/><cell height="1.0" id="313" width="1.0" x="1566.1624029590778" y="2214.048643144173"/><cell height="1.0" id="314" width="1.0" x="1608.629495615865" y="2294.7100579392827"/><cell height="1.0" id="315" width="1.0" x="1439.15767642389" y="1936.99557430787"/><cell height="1.0" id="316" width="1.0" x="3004.7141400001306" y="501.1899149006318"/><cell height="1.0" id="317" width="1.0" x="1764.369459307644" y="2133.6904280497274"/><cell height="1.0" id="318" width="1.0" x="858.0673146094107" y="2605.888499840509"/><cell height="1.0" id="319" width="1.0" x="784.0439400248168" y="2356.844195066604"/><cell height="1.0" id="320" width="1.0" x="2910.072291390223" y="501.1899149006318"/><cell height="1.0" id="321" width="1.0" x="1463.2388835437291" y="2075.8099935364726"/><cell height="1.0" id="322" width="1.0" x="1661.9409493542248" y="1718.482984462217"/><cell height="1.0" id="323" width="1.0" x="2404.5283805288227" y="1407.8965700119309"/><cell height="1.0" id="324" width="1.0" x="2394.5569694657283" y="1413.2861961151477"/><cell height="1.0" id="325" width="1.0" x="2837.248888465519" y="85.483251498225"/><cell height="1.0" id="326" width="1.0" x="2646.7932321270296" y="129.30670805528808"/><cell height="1.0" id="327" width="1.0" x="2147.5731079597504" y="213.57381708609267"/><cell height="1.0" id="328" width="1.0" x="3450.2849771292017" y="501.1899149006318"/><cell height="1.0" id="329" width="1.0" x="3652.1607345597386" y="501.1899149006318"/><cell height="1.0" id="330" width="1.0" x="3902.9252319133466" y="501.1899149006318"/><cell height="1.0" id="331" width="1.0" x="2160.7703507554597" y="441.3745193611925"/><cell height="1.0" id="332" width="1.0" x="3075.3559627518357" y="501.1899149006318"/><cell height="1.0" id="333" width="1.0" x="3398.1365516483593" y="501.1899149006318"/><cell height="1.0" id="334" width="1.0" x="3633.3727745149904" y="501.1899149006318"/><cell height="1.0" id="335" width="1.0" x="2024.2006556658764" y="540.1031602970597"/><cell height="1.0" id="336" width="1.0" x="2942.393516557903" y="501.1899149006318"/><cell height="1.0" id="337" width="1.0" x="2313.2737908631616" y="858.9207957925141"/><cell height="1.0" id="338" width="1.0" x="3335.319747598942" y="501.1899149006318"/><cell height="1.0" id="339" width="1.0" x="1888.91459709316" y="1004.2036182110851"/><cell height="1.0" id="340" width="1.0" x="2256.131662578906" y="501.1899149006318"/><cell height="1.0" id="341" width="1.0" x="2508.7351389531395" y="501.1899149006318"/><cell height="1.0" id="342" width="1.0" x="279.0726928270792" y="1443.588870714104"/><cell height="1.0" id="343" width="1.0" x="580.6040704888115" y="1427.7406384101291"/><cell height="1.0" id="344" width="1.0" x="639.5752337004167" y="1437.3177219964027"/><cell height="1.0" id="345" width="1.0" x="631.0303404461497" y="1381.3353700994944"/><cell height="1.0" id="346" width="1.0" x="1048.9201844666923" y="1275.0979489783986"/><cell height="1.0" id="347" width="1.0" x="2040.458637303488" y="1240.3579600898433"/><cell height="1.0" id="348" width="1.0" x="2161.573182458058" y="1460.1179034717768"/><cell height="1.0" id="349" width="1.0" x="2366.503693283476" y="1441.0212469002597"/><cell height="1.0" id="350" width="1.0" x="2722.343244705275" y="2323.337700599394"/><cell height="1.0" id="351" width="1.0" x="2662.837521195251" y="1859.6538643271044"/><cell height="1.0" id="352" width="1.0" x="2581.9745798165395" y="2072.319102500062"/><cell height="1.0" id="353" width="1.0" x="2735.3067667087093" y="2274.222650639366"/><cell height="1.0" id="354" width="1.0" x="2521.342136919618" y="1792.7462937828973"/><cell height="1.0" id="355" width="1.0" x="2848.882047514359" y="138.3235754123632"/><cell height="1.0" id="356" width="1.0" x="2551.227356848928" y="142.46980472463116"/><cell height="1.0" id="357" width="1.0" x="2157.499845197305" y="211.4763971525058"/><cell height="1.0" id="358" width="1.0" x="1367.017591726015" y="340.6187232467318"/><cell height="1.0" id="359" width="1.0" x="1209.9569048232001" y="327.49618705758417"/><cell height="1.0" id="360" width="1.0" x="1316.0944723187995" y="333.57916936443803"/><cell height="1.0" id="361" width="1.0" x="1609.267241908335" y="320.50740080849255"/><cell height="1.0" id="362" width="1.0" x="1662.0464567761096" y="325.9483250469763"/><cell height="1.0" id="363" width="1.0" x="3129.3427477941796" y="501.1899149006318"/><cell height="1.0" id="364" width="1.0" x="3784.136965786814" y="501.1899149006318"/><cell height="1.0" id="365" width="1.0" x="3666.623479942005" y="501.1899149006318"/><cell height="1.0" id="366" width="1.0" x="3907.4419297799413" y="501.1899149006318"/><cell height="1.0" id="367" width="1.0" x="1566.040140077148" y="312.4529319021329"/><cell height="1.0" id="368" width="1.0" x="3059.5057791393933" y="501.1899149006318"/><cell height="1.0" id="369" width="1.0" x="4055.8416121497467" y="502.327244428048"/><cell height="1.0" id="370" width="1.0" x="4123.602438317394" y="504.143398362824"/><cell height="1.0" id="371" width="1.0" x="3992.63095971343" y="501.1899149006318"/><cell height="1.0" id="372" width="1.0" x="3976.8311691552412" y="501.1899149006318"/><cell height="1.0" id="373" width="1.0" x="3958.594326172232" y="501.1899149006318"/><cell height="1.0" id="374" width="1.0" x="2054.305552880971" y="516.5933710090193"/><cell height="1.0" id="375" width="1.0" x="1215.130605885224" y="553.7717973163653"/><cell height="1.0" id="376" width="1.0" x="1036.879666615837" y="506.23550591429284"/><cell height="1.0" id="377" width="1.0" x="1166.0138626763878" y="560.9086278849616"/><cell height="1.0" id="378" width="1.0" x="1612.5760226970237" y="529.6947443355696"/><cell height="1.0" id="379" width="1.0" x="1613.1809132304413" y="614.3804417181288"/><cell height="1.0" id="380" width="1.0" x="3104.8853082731703" y="501.1899149006318"/><cell height="1.0" id="381" width="1.0" x="2494.8281669308935" y="491.11062860534423"/><cell height="1.0" id="382" width="1.0" x="3221.2885889103345" y="501.1899149006318"/><cell height="1.0" id="383" width="1.0" x="3583.003859004004" y="501.1899149006318"/><cell height="1.0" id="384" width="1.0" x="1535.7895302926115" y="505.42061102360174"/><cell height="1.0" id="385" width="1.0" x="2917.688778120598" y="501.1899149006318"/><cell height="1.0" id="386" width="1.0" x="3833.930033512056" y="501.1899149006318"/><cell height="1.0" id="387" width="1.0" x="4103.365654917777" y="501.1899149006318"/><cell height="1.0" id="388" width="1.0" x="3410.6272294752553" y="501.1899149006318"/><cell height="1.0" id="389" width="1.0" x="3350.490369162427" y="501.1899149006318"/><cell height="1.0" id="390" width="1.0" x="3491.577472195688" y="501.1899149006318"/><cell height="1.0" id="391" width="1.0" x="2058.0818023768998" y="558.4715010494674"/><cell height="1.0" id="392" width="1.0" x="1113.989440795409" y="718.439295905107"/><cell height="1.0" id="393" width="1.0" x="917.035815638202" y="658.125940583549"/><cell height="1.0" id="394" width="1.0" x="1032.5443370841679" y="710.1475076415911"/><cell height="1.0" id="395" width="1.0" x="1502.3970972443653" y="742.5754610576953"/><cell height="1.0" id="396" width="1.0" x="1616.7782753230038" y="713.9686360950001"/><cell height="1.0" id="397" width="1.0" x="2878.3707920918623" y="501.1899149006318"/><cell height="1.0" id="398" width="1.0" x="2412.2630047368" y="548.9151699663418"/><cell height="1.0" id="399" width="1.0" x="3034.969289089911" y="501.1899149006318"/><cell height="1.0" id="400" width="1.0" x="3179.1098594752557" y="501.1899149006318"/><cell height="1.0" id="401" width="1.0" x="1434.1508847168475" y="655.7519252049276"/><cell height="1.0" id="402" width="1.0" x="2763.416217917774" y="501.1899149006318"/><cell height="1.0" id="403" width="1.0" x="3777.4817078030624" y="501.1899149006318"/><cell height="1.0" id="404" width="1.0" x="3881.0249860819713" y="500.5026973910413"/><cell height="1.0" id="405" width="1.0" x="3156.97330049966" y="501.1899149006318"/><cell height="1.0" id="406" width="1.0" x="3329.0271140532195" y="501.1899149006318"/><cell height="1.0" id="407" width="1.0" x="3186.709176747202" y="501.1899149006318"/><cell height="1.0" id="408" width="1.0" x="708.8086716493048" y="962.7435453243684"/><cell height="1.0" id="409" width="1.0" x="791.5439559444244" y="973.4578465786412"/><cell height="1.0" id="410" width="1.0" x="1315.9553967951683" y="1002.350675151496"/><cell height="1.0" id="411" width="1.0" x="1513.836329193181" y="1075.6361537143832"/><cell height="1.0" id="412" width="1.0" x="1898.0530687169016" y="995.8432800690093"/><cell height="1.0" id="413" width="1.0" x="2345.5141707640705" y="501.1899149006318"/><cell height="1.0" id="414" width="1.0" x="2225.0698216336727" y="501.1899149006318"/><cell height="1.0" id="415" width="1.0" x="2551.1251709185008" y="501.1899149006318"/><cell height="1.0" id="416" width="1.0" x="1260.7023697682164" y="897.4667556106074"/><cell height="1.0" id="417" width="1.0" x="1749.2456480621743" y="1046.4850453436"/><cell height="1.0" id="418" width="1.0" x="3310.8814883280374" y="501.1899149006318"/><cell height="1.0" id="419" width="1.0" x="2995.171873750022" y="501.1899149006318"/><cell height="1.0" id="420" width="1.0" x="2980.302249310125" y="501.1899149006318"/><cell height="1.0" id="421" width="1.0" x="2381.0754264187585" y="501.1899149006318"/><cell height="1.0" id="422" width="1.0" x="256.90321189770515" y="1445.003084276477"/><cell height="1.0" id="423" width="1.0" x="528.8538178648104" y="1445.2543505225667"/><cell height="1.0" id="424" width="1.0" x="695.8290043835005" y="1425.7600958796709"/><cell height="1.0" id="425" width="1.0" x="511.93780067398313" y="1373.3997362700886"/><cell height="1.0" id="426" width="1.0" x="1028.0942173009532" y="1276.0662903174793"/><cell height="1.0" id="427" width="1.0" x="2105.882562824641" y="901.4022781562292"/><cell height="1.0" id="428" width="1.0" x="2088.915797436714" y="1219.4293829372393"/><cell height="1.0" id="429" width="1.0" x="2135.9977806013453" y="1472.8204898404442"/><cell height="1.0" id="430" width="1.0" x="1797.5543641745053" y="1194.9853210599342"/><cell height="1.0" id="431" width="1.0" x="2240.6788591112036" y="1212.8688585205334"/><cell height="1.0" id="432" width="1.0" x="2435.3721694873616" y="1379.9675965428605"/><cell height="1.0" id="433" width="1.0" x="2688.445317716965" y="2307.12015296546"/><cell height="1.0" id="434" width="1.0" x="2727.1572168029325" y="1944.2736031452325"/><cell height="1.0" id="435" width="1.0" x="2647.2307220928055" y="2114.427637901215"/><cell height="1.0" id="436" width="1.0" x="2778.3313964896747" y="2156.678466682818"/><cell height="1.0" id="437" width="1.0" x="2601.2890564656495" y="1745.8454706527027"/><cell height="1.0" id="438" width="1.0" x="2838.69143548402" y="131.4833578333649"/><cell height="1.0" id="439" width="1.0" x="2490.293504383502" y="147.86982750593808"/><cell height="1.0" id="440" width="1.0" x="2294.4834673681034" y="182.39054586256378"/><cell height="1.0" id="441" width="1.0" x="3094.7097490730343" y="501.1899149006318"/><cell height="1.0" id="442" width="1.0" x="3599.0430634597137" y="501.1899149006318"/><cell height="1.0" id="443" width="1.0" x="3851.088075160285" y="501.1899149006318"/><cell height="1.0" id="444" width="1.0" x="2031.660507145829" y="486.0634324990647"/><cell height="1.0" id="445" width="1.0" x="3135.7565696746265" y="501.1899149006318"/><cell height="1.0" id="446" width="1.0" x="2960.1022159369413" y="501.1899149006318"/><cell height="1.0" id="447" width="1.0" x="3193.4160873054234" y="501.1899149006318"/><cell height="1.0" id="448" width="1.0" x="2033.455423010808" y="541.6541719665221"/><cell height="1.0" id="449" width="1.0" x="2660.0626675973713" y="501.1899149006318"/><cell height="1.0" id="450" width="1.0" x="2836.3404480703466" y="501.1899149006318"/><cell height="1.0" id="451" width="1.0" x="3198.4751557616196" y="501.1899149006318"/><cell height="1.0" id="452" width="1.0" x="1840.6174655691166" y="943.566099558167"/><cell height="1.0" id="453" width="1.0" x="2211.995438293776" y="501.1899149006318"/><cell height="1.0" id="454" width="1.0" x="2521.8776067474087" y="501.1899149006318"/><cell height="1.0" id="455" width="1.0" x="214.54785595660536" y="1455.0882906325705"/><cell height="1.0" id="456" width="1.0" x="574.9924164366685" y="1412.4333131770425"/><cell height="1.0" id="457" width="1.0" x="757.2519086681095" y="1440.947103842836"/><cell height="1.0" id="458" width="1.0" x="1069.3809069464405" y="1405.0277028961455"/><cell height="1.0" id="459" width="1.0" x="1283.8196895436242" y="1638.728730847542"/><cell height="1.0" id="460" width="1.0" x="1379.4882284444857" y="1843.8733900407108"/><cell height="1.0" id="461" width="1.0" x="944.307200504112" y="1176.4838342766186"/><cell height="1.0" id="462" width="1.0" x="602.8518879615726" y="1986.258704626922"/><cell height="1.0" id="463" width="1.0" x="700.1935924474585" y="2171.9912130343446"/><cell height="1.0" id="464" width="1.0" x="642.3151532331991" y="1373.4540345579424"/><cell height="1.0" id="465" width="1.0" x="970.6082029708356" y="1189.8924708166614"/><cell height="1.0" id="466" width="1.0" x="1143.9464596795312" y="1525.6523675247242"/><cell height="1.0" id="467" width="1.0" x="709.5014138748287" y="2114.3845844138664"/><cell height="1.0" id="468" width="1.0" x="1057.7343517819354" y="1274.6422489404918"/><cell height="1.0" id="469" width="1.0" x="1474.0296830550553" y="1171.3986322770252"/><cell height="1.0" id="470" width="1.0" x="1501.0532892965682" y="1379.7600145969466"/><cell height="1.0" id="471" width="1.0" x="1787.484270859518" y="1573.7741094214355"/><cell height="1.0" id="472" width="1.0" x="1369.9541475631" y="1255.2519832790513"/><cell height="1.0" id="473" width="1.0" x="1495.5163688377763" y="1453.11350355133"/><cell height="1.0" id="474" width="1.0" x="1684.7105055461952" y="1643.9362970728598"/><cell height="1.0" id="475" width="1.0" x="2024.985907397834" y="1243.7457435340386"/><cell height="1.0" id="476" width="1.0" x="2128.339702808042" y="1478.4089938597328"/><cell height="1.0" id="477" width="1.0" x="1233.1677697875964" y="1082.8543252745192"/><cell height="1.0" id="478" width="1.0" x="2081.856016100808" y="1806.2217601025534"/><cell height="1.0" id="479" width="1.0" x="2024.0516236887252" y="1980.1143640571142"/><cell height="1.0" id="480" width="1.0" x="2088.4821051728286" y="1565.0673229011782"/><cell height="1.0" id="481" width="1.0" x="2121.3191642878264" y="1655.1617818259297"/><cell height="1.0" id="482" width="1.0" x="2333.825554067936" y="1021.9265312757384"/><cell height="1.0" id="483" width="1.0" x="2554.5411942498504" y="1171.9781392134385"/><cell height="1.0" id="484" width="1.0" x="2449.2757559660654" y="1358.6392829590975"/><cell height="1.0" id="485" width="1.0" x="1553.3153847529893" y="1335.249235308158"/><cell height="1.0" id="486" width="1.0" x="1912.0673309410197" y="1298.1157080767052"/><cell height="1.0" id="487" width="1.0" x="2325.356796399583" y="1941.7972611675473"/><cell height="1.0" id="488" width="1.0" x="2302.367985234652" y="2090.1818955085014"/><cell height="1.0" id="489" width="1.0" x="2406.9734445426225" y="1530.5563316214264"/><cell height="1.0" id="490" width="1.0" x="2359.1112621817374" y="1733.9972243646037"/><cell height="1.0" id="491" width="1.0" x="2370.3558375700436" y="1306.0982493646725"/><cell height="1.0" id="492" width="1.0" x="1463.6089124953899" y="1737.111377272032"/><cell height="1.0" id="493" width="1.0" x="2019.771185724313" y="1521.084736795828"/><cell height="1.0" id="494" width="1.0" x="2741.395457412677" y="1930.0956078664453"/><cell height="1.0" id="495" width="1.0" x="2826.840657742999" y="2025.840077944189"/><cell height="1.0" id="496" width="1.0" x="2623.96147517766" y="1513.8090704138765"/><cell height="1.0" id="497" width="1.0" x="2485.4150309611996" y="1777.4406783341956"/><cell height="1.0" id="498" width="1.0" x="2591.51101264924" y="1342.408241105304"/><cell height="1.0" id="499" width="1.0" x="2698.7265322325115" y="2311.256218911968"/><cell height="1.0" id="500" width="1.0" x="2718.4769884914945" y="1941.8021559432693"/><cell height="1.0" id="501" width="1.0" x="2649.7891876433273" y="2102.83158279485"/><cell height="1.0" id="502" width="1.0" x="2737.1551349702518" y="2293.925676466085"/><cell height="1.0" id="503" width="1.0" x="2564.879436977176" y="1756.228810290286"/><cell height="1.0" id="504" width="1.0" x="2844.3267668737035" y="173.1580266371002"/><cell height="1.0" id="505" width="1.0" x="2622.7475363851686" y="133.509866891081"/><cell height="1.0" id="506" width="1.0" x="2368.8287473604137" y="171.81442208697854"/><cell height="1.0" id="507" width="1.0" x="1369.5510279693635" y="348.41295012220246"/><cell height="1.0" id="508" width="1.0" x="1223.19171200536" y="276.65427882360683"/><cell height="1.0" id="509" width="1.0" x="1303.9392703891199" y="332.3662023683122"/><cell height="1.0" id="510" width="1.0" x="1633.5412081795657" y="320.66858832144686"/><cell height="1.0" id="511" width="1.0" x="1655.064223761898" y="324.25910172250633"/><cell height="1.0" id="512" width="1.0" x="3067.5736520548044" y="501.1899149006318"/><cell height="1.0" id="513" width="1.0" x="3385.8317320108554" y="501.1899149006318"/><cell height="1.0" id="514" width="1.0" x="3417.324510274608" y="501.1899149006318"/><cell height="1.0" id="515" width="1.0" x="3715.7328791277196" y="505.8033163519135"/><cell height="1.0" id="516" width="1.0" x="1601.0073879637882" y="318.4982192627687"/><cell height="1.0" id="517" width="1.0" x="1650.46964873545" y="325.1801165651251"/><cell height="1.0" id="518" width="1.0" x="4037.292021359467" y="504.69878712043385"/><cell height="1.0" id="519" width="1.0" x="4108.129564722315" y="503.04764193252447"/><cell height="1.0" id="520" width="1.0" x="3965.455959235797" y="503.1412912411977"/><cell height="1.0" id="521" width="1.0" x="3984.414316790518" y="501.7508509228778"/><cell height="1.0" id="522" width="1.0" x="3672.429694054323" y="504.16277861554113"/><cell height="1.0" id="523" width="1.0" x="2501.8959204184885" y="279.5123372203799"/><cell height="1.0" id="524" width="1.0" x="2121.394375147779" y="447.00661051313375"/><cell height="1.0" id="525" width="1.0" x="1223.4027023477715" y="578.2716665134902"/><cell height="1.0" id="526" width="1.0" x="1028.3383062933344" y="526.2316664308901"/><cell height="1.0" id="527" width="1.0" x="1121.3844328441357" y="556.8442819007719"/><cell height="1.0" id="528" width="1.0" x="1606.8970651505526" y="546.6369026024081"/><cell height="1.0" id="529" width="1.0" x="1615.2856794503825" y="623.169893461445"/><cell height="1.0" id="530" width="1.0" x="2102.311152505596" y="524.47645851704"/><cell height="1.0" id="531" width="1.0" x="2478.8454591342966" y="488.88036142305305"/><cell height="1.0" id="532" width="1.0" x="3172.2019879457366" y="501.1899149006318"/><cell height="1.0" id="533" width="1.0" x="3572.52366166419" y="501.1899149006318"/><cell height="1.0" id="534" width="1.0" x="1601.9238888632108" y="503.6919930271159"/><cell height="1.0" id="535" width="1.0" x="1719.1498561028627" y="616.6198021141731"/><cell height="1.0" id="536" width="1.0" x="3823.5036759468994" y="505.69861116120404"/><cell height="1.0" id="537" width="1.0" x="3922.4909750180436" y="500.75948478450863"/><cell height="1.0" id="538" width="1.0" x="3722.9051431017047" y="505.71832879047304"/><cell height="1.0" id="539" width="1.0" x="3739.5231157765247" y="493.9944706728954"/><cell height="1.0" id="540" width="1.0" x="3265.554601520884" y="498.8743691923959"/><cell height="1.0" id="541" width="1.0" x="2073.239998399414" y="554.7553747811719"/><cell height="1.0" id="542" width="1.0" x="1121.715178681902" y="720.7771245593566"/><cell height="1.0" id="543" width="1.0" x="1075.0929660701547" y="664.2241096259827"/><cell height="1.0" id="544" width="1.0" x="1031.9902919996498" y="737.6088555380281"/><cell height="1.0" id="545" width="1.0" x="1481.3838049015646" y="723.2009996265833"/><cell height="1.0" id="546" width="1.0" x="1630.9875974451818" y="715.3610115163898"/><cell height="1.0" id="547" width="1.0" x="2606.111102549012" y="501.1899149006318"/><cell height="1.0" id="548" width="1.0" x="2358.6416983289673" y="492.11195610982"/><cell height="1.0" id="549" width="1.0" x="3044.518870456827" y="501.1899149006318"/><cell height="1.0" id="550" width="1.0" x="3236.707897102599" y="501.1899149006318"/><cell height="1.0" id="551" width="1.0" x="1419.4502089953605" y="657.1370179044054"/><cell height="1.0" id="552" width="1.0" x="1882.6275020495916" y="919.8230468676252"/><cell height="1.0" id="553" width="1.0" x="2931.513152604489" y="1610.4332579071006"/><cell height="1.0" id="554" width="1.0" x="2981.2893580012374" y="1618.0673362369316"/><cell height="1.0" id="555" width="1.0" x="3113.157493545531" y="500.80055841320893"/><cell height="1.0" id="556" width="1.0" x="2163.9352305163547" y="1642.9580865152238"/><cell height="1.0" id="557" width="1.0" x="2508.570727498045" y="790.8792982385023"/><cell height="1.0" id="558" width="1.0" x="920.3495925768681" y="998.3846173373659"/><cell height="1.0" id="559" width="1.0" x="725.7601255963343" y="946.4312183308082"/><cell height="1.0" id="560" width="1.0" x="893.8891986033531" y="1001.4105645647492"/><cell height="1.0" id="561" width="1.0" x="1274.1112985282919" y="1002.4161926081631"/><cell height="1.0" id="562" width="1.0" x="1494.708064988542" y="1077.9407300150303"/><cell height="1.0" id="563" width="1.0" x="1849.0557215605456" y="1074.139003110059"/><cell height="1.0" id="564" width="1.0" x="2302.5547478524218" y="501.1899149006318"/><cell height="1.0" id="565" width="1.0" x="2284.504160593358" y="501.1899149006318"/><cell height="1.0" id="566" width="1.0" x="2186.3901283724026" y="1139.492005331134"/><cell height="1.0" id="567" width="1.0" x="1180.1940496473844" y="921.4723431168634"/><cell height="1.0" id="568" width="1.0" x="1753.8008960199759" y="1042.4001061863148"/><cell height="1.0" id="569" width="1.0" x="1629.1335637715924" y="1793.42124104807"/><cell height="1.0" id="570" width="1.0" x="1974.9296209935824" y="1978.9673353300705"/><cell height="1.0" id="571" width="1.0" x="2219.760037984724" y="1551.2950801958493"/><cell height="1.0" id="572" width="1.0" x="1944.0662991777135" y="1675.6810010790232"/><cell height="1.0" id="573" width="1.0" x="2170.5450049135525" y="1062.2816672616366"/><cell height="1.0" id="574" width="1.0" x="1034.2820793509593" y="1454.9040531014284"/><cell height="1.0" id="575" width="1.0" x="1199.4933374413365" y="1615.6697841096518"/><cell height="1.0" id="576" width="1.0" x="1397.1607405940904" y="1822.8370161903097"/><cell height="1.0" id="577" width="1.0" x="1486.7292660341743" y="2114.537810316764"/><cell height="1.0" id="578" width="1.0" x="1511.9469230267014" y="2319.968192248589"/><cell height="1.0" id="579" width="1.0" x="1396.4770641305477" y="1886.5667504917046"/><cell height="1.0" id="580" width="1.0" x="1402.1462003544405" y="2005.272769080012"/><cell height="1.0" id="581" width="1.0" x="995.2366869626364" y="1147.863205590027"/><cell height="1.0" id="582" width="1.0" x="640.0412965794245" y="2050.4380230112183"/><cell height="1.0" id="583" width="1.0" x="713.2224414531383" y="2202.8084558580413"/><cell height="1.0" id="584" width="1.0" x="382.22826310299706" y="1261.3382022875646"/><cell height="1.0" id="585" width="1.0" x="979.2328842486028" y="1182.6973139262595"/><cell height="1.0" id="586" width="1.0" x="617.581067593657" y="1951.659918650608"/><cell height="1.0" id="587" width="1.0" x="707.8422267309268" y="2090.0113133989175"/><cell height="1.0" id="588" width="1.0" x="811.2937646175313" y="2452.3221918313"/><cell height="1.0" id="589" width="1.0" x="842.2963416359607" y="2526.4848475896783"/><cell height="1.0" id="590" width="1.0" x="762.8854978831985" y="2251.604901431082"/><cell height="1.0" id="591" width="1.0" x="772.9639917252891" y="2321.562408574227"/><cell height="1.0" id="592" width="1.0" x="1424.1313871269847" y="1180.547832829399"/><cell height="1.0" id="593" width="1.0" x="1502.9515092246877" y="1387.4372374785485"/><cell height="1.0" id="594" width="1.0" x="1751.841810251184" y="1585.3152882360946"/><cell height="1.0" id="595" width="1.0" x="1593.1183067257225" y="1999.760992835423"/><cell height="1.0" id="596" width="1.0" x="1582.9995956030039" y="2200.0514947174993"/><cell height="1.0" id="597" width="1.0" x="1743.2169575698701" y="1620.4328982144027"/><cell height="1.0" id="598" width="1.0" x="1807.8430049974245" y="1668.6097998799953"/><cell height="1.0" id="599" width="1.0" x="1532.1362229910717" y="1226.767835105501"/><cell height="1.0" id="600" width="1.0" x="1581.5844106907566" y="1430.862271264567"/><cell height="1.0" id="601" width="1.0" x="1673.7101150113833" y="1623.3609393699492"/><cell height="1.0" id="602" width="1.0" x="1722.7467673105987" y="1945.2885723901004"/><cell height="1.0" id="603" width="1.0" x="1761.7582006794823" y="2183.1619931926325"/><cell height="1.0" id="604" width="1.0" x="1695.8028274598685" y="1702.4078788234824"/><cell height="1.0" id="605" width="1.0" x="1674.4894069251209" y="1783.006099413699"/><cell height="1.0" id="606" width="1.0" x="2125.438043673482" y="908.268116303009"/><cell height="1.0" id="607" width="1.0" x="2020.459041324601" y="1273.3435611069165"/><cell height="1.0" id="608" width="1.0" x="2077.0492915214213" y="1504.3473079746761"/><cell height="1.0" id="609" width="1.0" x="1542.8223230642811" y="1120.008062964349"/><cell height="1.0" id="610" width="1.0" x="1823.9990954923019" y="1203.181425417319"/><cell height="1.0" id="611" width="1.0" x="2125.51961189055" y="1829.137579886641"/><cell height="1.0" id="612" width="1.0" x="2035.4756391333897" y="1977.8564922288188"/><cell height="1.0" id="613" width="1.0" x="2096.5548005549813" y="1556.6169965415243"/><cell height="1.0" id="614" width="1.0" x="2118.8099213914975" y="1663.5502866600152"/><cell height="1.0" id="615" width="1.0" x="2243.351068607874" y="1245.2828868388995"/><cell height="1.0" id="616" width="1.0" x="2314.960121659907" y="1060.1114747224588"/><cell height="1.0" id="617" width="1.0" x="2567.353369635956" y="1165.5001042950062"/><cell height="1.0" id="618" width="1.0" x="2485.4078539907096" y="1380.3464405221791"/><cell height="1.0" id="619" width="1.0" x="1538.674456772261" y="1340.7042050191578"/><cell height="1.0" id="620" width="1.0" x="1901.9529707786671" y="1300.8490838519926"/><cell height="1.0" id="621" width="1.0" x="2384.2390515992247" y="1951.4053602401884"/><cell height="1.0" id="622" width="1.0" x="2265.806173814326" y="2083.5776641711445"/><cell height="1.0" id="623" width="1.0" x="2406.0224760867823" y="1543.8664713413561"/><cell height="1.0" id="624" width="1.0" x="2377.4966839217095" y="1737.735079370613"/><cell height="1.0" id="625" width="1.0" x="2372.516705637601" y="1286.9005843058885"/><cell height="1.0" id="626" width="1.0" x="1465.1932220115932" y="1744.6600020882893"/><cell height="1.0" id="627" width="1.0" x="2014.8351182364568" y="1533.1386764725928"/><cell height="1.0" id="628" width="1.0" x="2747.9850969253844" y="1927.7368019117828"/><cell height="1.0" id="629" width="1.0" x="2834.366601264427" y="2015.9075226310367"/><cell height="1.0" id="630" width="1.0" x="2601.4402264809196" y="1529.167773414412"/><cell height="1.0" id="631" width="1.0" x="2471.85531684212" y="1772.40387204228"/><cell height="1.0" id="632" width="1.0" x="2577.1613840410114" y="1330.796419181068"/><cell height="1.0" id="633" width="1.0" x="2843.8659146445852" y="154.88679548642028"/><cell height="1.0" id="634" width="1.0" x="2392.9247420825604" y="170.9351341503738"/><cell height="1.0" id="635" width="1.0" x="2203.635760148169" y="201.4371581267875"/><cell height="1.0" id="636" width="1.0" x="3151.0658123547396" y="501.1899149006318"/><cell height="1.0" id="637" width="1.0" x="3405.087667291599" y="501.1899149006318"/><cell height="1.0" id="638" width="1.0" x="3818.4137952517526" y="501.1899149006318"/><cell height="1.0" id="639" width="1.0" x="2496.25990509513" y="321.1644214602702"/><cell height="1.0" id="640" width="1.0" x="2068.9021215458374" y="506.4997965614387"/><cell height="1.0" id="641" width="1.0" x="3028.109590581951" y="501.1899149006318"/><cell height="1.0" id="642" width="1.0" x="3142.571938944383" y="501.1899149006318"/><cell height="1.0" id="643" width="1.0" x="3506.005690147334" y="501.1899149006318"/><cell height="1.0" id="644" width="1.0" x="2001.5326005357679" y="566.4302680048824"/><cell height="1.0" id="645" width="1.0" x="2775.4443835471975" y="501.1899149006318"/><cell height="1.0" id="646" width="1.0" x="2787.106114608346" y="501.1899149006318"/><cell height="1.0" id="647" width="1.0" x="3019.9513222712753" y="501.1899149006318"/><cell height="1.0" id="648" width="1.0" x="1881.294988972153" y="997.4682075211142"/><cell height="1.0" id="649" width="1.0" x="2244.4654715113534" y="501.1899149006318"/><cell height="1.0" id="650" width="1.0" x="2494.3029147774846" y="501.1899149006318"/><cell height="1.0" id="651" width="1.0" x="207.80125127008085" y="1441.9038959377367"/><cell height="1.0" id="652" width="1.0" x="665.3007601104688" y="1403.288551989881"/><cell height="1.0" id="653" width="1.0" x="812.7490006207155" y="1393.215714960437"/><cell height="1.0" id="654" width="1.0" x="769.8553750415497" y="1286.7734321824064"/><cell height="1.0" id="655" width="1.0" x="662.0724032707957" y="1366.1041220424497"/><cell height="1.0" id="656" width="1.0" x="1042.934462512881" y="1267.55365320292"/><cell height="1.0" id="657" width="1.0" x="2028.1816958337563" y="1257.3867294392694"/><cell height="1.0" id="658" width="1.0" x="2115.785587126818" y="1481.3508934345573"/><cell height="1.0" id="659" width="1.0" x="2383.1246506750745" y="1426.9855300181275"/><cell height="1.0" id="660" width="1.0" x="2655.512319240062" y="2292.261212749528"/><cell height="1.0" id="661" width="1.0" x="2678.3793079581324" y="1896.398555071825"/><cell height="1.0" id="662" width="1.0" x="2638.0710315000147" y="2127.3094074572336"/><cell height="1.0" id="663" width="1.0" x="2803.5641747921763" y="2078.609617237381"/><cell height="1.0" id="664" width="1.0" x="2771.47679127499" y="2169.4121582214634"/><cell height="1.0" id="665" width="1.0" x="2555.777889558388" y="1765.5718072004386"/><cell height="1.0" id="666" width="1.0" x="2819.5394148851788" y="87.63613836657709"/><cell height="1.0" id="667" width="1.0" x="2590.9635423876657" y="139.55101857394175"/><cell height="1.0" id="668" width="1.0" x="2307.3911191023926" y="182.26937168723697"/><cell height="1.0" id="669" width="1.0" x="2971.4750063875003" y="501.1899149006318"/><cell height="1.0" id="670" width="1.0" x="3368.131438740047" y="501.1899149006318"/><cell height="1.0" id="671" width="1.0" x="3768.2595212414794" y="501.1899149006318"/><cell height="1.0" id="672" width="1.0" x="2249.487972975753" y="381.6052211448436"/><cell height="1.0" id="673" width="1.0" x="2796.2309856221796" y="501.1899149006318"/><cell height="1.0" id="674" width="1.0" x="3119.7790357514637" y="501.1899149006318"/><cell height="1.0" id="675" width="1.0" x="3497.977432426333" y="501.1899149006318"/><cell height="1.0" id="676" width="1.0" x="2043.1688245794744" y="531.7157005183644"/><cell height="1.0" id="677" width="1.0" x="2647.8697797153122" y="501.1899149006318"/><cell height="1.0" id="678" width="1.0" x="2707.817025734117" y="501.1899149006318"/><cell height="1.0" id="679" width="1.0" x="2720.0246825734444" y="501.1899149006318"/><cell height="1.0" id="680" width="1.0" x="1870.6430844942213" y="978.8863788780693"/><cell height="1.0" id="681" width="1.0" x="2187.1200302506436" y="501.1899149006318"/><cell height="1.0" id="682" width="1.0" x="2481.72024052578" y="501.1899149006318"/><cell height="1.0" id="683" width="1.0" x="237.69649344653038" y="1479.3037853925148"/><cell height="1.0" id="684" width="1.0" x="646.0751278496917" y="1407.255837460339"/><cell height="1.0" id="685" width="1.0" x="725.5475785453208" y="1571.0145569991007"/><cell height="1.0" id="686" width="1.0" x="1082.4039368283613" y="1419.2303103917423"/><cell height="1.0" id="687" width="1.0" x="1237.3297666697702" y="1575.1343860798747"/><cell height="1.0" id="688" width="1.0" x="1401.36306161658" y="1830.2084429804047"/><cell height="1.0" id="689" width="1.0" x="1005.0154602477933" y="1136.2775855526331"/><cell height="1.0" id="690" width="1.0" x="605.5615264730069" y="1972.3054121312616"/><cell height="1.0" id="691" width="1.0" x="697.7259688305224" y="2245.0457263892717"/><cell height="1.0" id="692" width="1.0" x="557.3565028000472" y="1344.4147093528377"/><cell height="1.0" id="693" width="1.0" x="916.294037625092" y="1213.7070579653284"/><cell height="1.0" id="694" width="1.0" x="638.8639052268962" y="1917.118457600766"/><cell height="1.0" id="695" width="1.0" x="724.9831087595477" y="2158.763915962281"/><cell height="1.0" id="696" width="1.0" x="1032.5779149685263" y="1268.4525018266797"/><cell height="1.0" id="697" width="1.0" x="1359.8910879426567" y="1201.2570681175532"/><cell height="1.0" id="698" width="1.0" x="1542.4402866104647" y="1359.7804239631603"/><cell height="1.0" id="699" width="1.0" x="1732.1562687792562" y="1593.582721596501"/><cell height="1.0" id="700" width="1.0" x="1504.6613233962835" y="1243.2231377957728"/><cell height="1.0" id="701" width="1.0" x="1589.903915887894" y="1414.7289588189042"/><cell height="1.0" id="702" width="1.0" x="1689.156483865181" y="1616.2516397789027"/><cell height="1.0" id="703" width="1.0" x="2033.36105699446" y="1269.757277877122"/><cell height="1.0" id="704" width="1.0" x="2152.9520171581917" y="1465.6856472684374"/><cell height="1.0" id="705" width="1.0" x="1286.4827683271967" y="1058.2699057601228"/><cell height="1.0" id="706" width="1.0" x="2084.779165696711" y="1831.5465809414236"/><cell height="1.0" id="707" width="1.0" x="2110.7516012244932" y="2004.7311296074797"/><cell height="1.0" id="708" width="1.0" x="2094.509696939642" y="1561.319894274066"/><cell height="1.0" id="709" width="1.0" x="2087.7705608877623" y="1707.6128209361946"/><cell height="1.0" id="710" width="1.0" x="2309.704543289601" y="1018.3875634585736"/><cell height="1.0" id="711" width="1.0" x="2569.076962561825" y="1140.0305131816674"/><cell height="1.0" id="712" width="1.0" x="2378.744316848416" y="1432.1883720294675"/><cell height="1.0" id="713" width="1.0" x="1527.207463671289" y="1349.7316536412961"/><cell height="1.0" id="714" width="1.0" x="1932.351676903174" y="1289.963860375304"/><cell height="1.0" id="715" width="1.0" x="2360.761077679829" y="1949.944760090232"/><cell height="1.0" id="716" width="1.0" x="2290.234624788849" y="2088.291053343493"/><cell height="1.0" id="717" width="1.0" x="2371.950699217978" y="1553.8319885358133"/><cell height="1.0" id="718" width="1.0" x="2399.271497100815" y="1740.9791490388561"/><cell height="1.0" id="719" width="1.0" x="2363.8475220282135" y="1296.9028093834856"/><cell height="1.0" id="720" width="1.0" x="1468.2641389054636" y="1733.0015609767697"/><cell height="1.0" id="721" width="1.0" x="2033.5800399364277" y="1515.329962528496"/><cell height="1.0" id="722" width="1.0" x="2765.937948484477" y="1901.5142262561992"/><cell height="1.0" id="723" width="1.0" x="2821.3618613709345" y="2036.7471445728302"/><cell height="1.0" id="724" width="1.0" x="2615.404309495203" y="1512.5404986828312"/><cell height="1.0" id="725" width="1.0" x="2505.771917644023" y="1784.5937249899514"/><cell height="1.0" id="726" width="1.0" x="2544.7450954321916" y="1385.4777743058235"/><cell height="1.0" id="727" width="1.0" x="2730.197964203663" y="2310.8319451216316"/><cell height="1.0" id="728" width="1.0" x="2671.590378788901" y="1880.2655525601995"/><cell height="1.0" id="729" width="1.0" x="2522.7202437881624" y="2038.0326051690065"/><cell height="1.0" id="730" width="1.0" x="2749.3315786178828" y="2234.444465908688"/><cell height="1.0" id="731" width="1.0" x="2580.2485805581737" y="1789.9990318556638"/><cell height="1.0" id="732" width="1.0" x="2818.505424266132" y="130.53013686363886"/><cell height="1.0" id="733" width="1.0" x="2574.5305778616225" y="139.97839978623892"/><cell height="1.0" id="734" width="1.0" x="2338.948886830361" y="179.15168674493538"/><cell height="1.0" id="735" width="1.0" x="1359.2327435381974" y="339.29633340591107"/><cell height="1.0" id="736" width="1.0" x="1218.5876617050176" y="314.2466395994816"/><cell height="1.0" id="737" width="1.0" x="1293.9293722932646" y="328.4528364700557"/><cell height="1.0" id="738" width="1.0" x="1617.4512986414209" y="321.1665216150571"/><cell height="1.0" id="739" width="1.0" x="1639.8996315408192" y="326.6331957931179"/><cell height="1.0" id="740" width="1.0" x="2988.5266849566924" y="501.1899149006318"/><cell height="1.0" id="741" width="1.0" x="3283.5388630015195" y="501.1899149006318"/><cell height="1.0" id="742" width="1.0" x="3288.965889697855" y="501.1899149006318"/><cell height="1.0" id="743" width="1.0" x="3721.7220541539805" y="501.1899149006318"/><cell height="1.0" id="744" width="1.0" x="1581.8421478644084" y="316.01616019358966"/><cell height="1.0" id="745" width="1.0" x="2899.4281518487173" y="501.1899149006318"/><cell height="1.0" id="746" width="1.0" x="4062.838157739116" y="501.1899149006318"/><cell height="1.0" id="747" width="1.0" x="4242.68200324532" y="501.1899149006318"/><cell height="1.0" id="748" width="1.0" x="3855.6694516942944" y="501.1899149006318"/><cell height="1.0" id="749" width="1.0" x="3912.792538579912" y="501.1899149006318"/><cell height="1.0" id="750" width="1.0" x="3578.5120767293606" y="501.1899149006318"/><cell height="1.0" id="751" width="1.0" x="2021.6667137441136" y="490.29659332736924"/><cell height="1.0" id="752" width="1.0" x="1230.7982393136188" y="567.5227852931179"/><cell height="1.0" id="753" width="1.0" x="1038.7301473939983" y="531.0589724252783"/><cell height="1.0" id="754" width="1.0" x="1116.0896826863066" y="540.860933878126"/><cell height="1.0" id="755" width="1.0" x="1641.7030779238235" y="538.938652699006"/><cell height="1.0" id="756" width="1.0" x="1605.006662385419" y="613.6465726412466"/><cell height="1.0" id="757" width="1.0" x="2739.8013263677035" y="501.1899149006318"/><cell height="1.0" id="758" width="1.0" x="2808.021162926483" y="501.1899149006318"/><cell height="1.0" id="759" width="1.0" x="2925.8080988696993" y="501.1899149006318"/><cell height="1.0" id="760" width="1.0" x="3341.6260845757483" y="501.1899149006318"/><cell height="1.0" id="761" width="1.0" x="1590.8334121435084" y="501.18991490063195"/><cell height="1.0" id="762" width="1.0" x="2933.329714281294" y="501.1899149006318"/><cell height="1.0" id="763" width="1.0" x="3625.3557509193743" y="501.1899149006318"/><cell height="1.0" id="764" width="1.0" x="3891.7728499186746" y="501.1899149006318"/><cell height="1.0" id="765" width="1.0" x="3295.3247554588656" y="501.1899149006318"/><cell height="1.0" id="766" width="1.0" x="3321.8717762079673" y="501.1899149006318"/><cell height="1.0" id="767" width="1.0" x="3086.00186200735" y="501.1899149006318"/><cell height="1.0" id="768" width="1.0" x="2006.2814826438462" y="577.3209349069768"/><cell height="1.0" id="769" width="1.0" x="1147.9531015862722" y="735.7929834520744"/><cell height="1.0" id="770" width="1.0" x="1005.7617960546295" y="655.2146715970001"/><cell height="1.0" id="771" width="1.0" x="1046.7771515632098" y="712.1325667274236"/><cell height="1.0" id="772" width="1.0" x="1474.6514691297407" y="736.6113464016817"/><cell height="1.0" id="773" width="1.0" x="1575.531600646225" y="716.5030919980632"/><cell height="1.0" id="774" width="1.0" x="2596.080265285775" y="501.1899149006318"/><cell height="1.0" id="775" width="1.0" x="2392.628344142487" y="506.86412008309003"/><cell height="1.0" id="776" width="1.0" x="2823.4898896566347" y="501.1899149006318"/><cell height="1.0" id="777" width="1.0" x="2862.5474095220534" y="501.1899149006318"/><cell height="1.0" id="778" width="1.0" x="1452.6872869281467" y="660.0640335508049"/><cell height="1.0" id="779" width="1.0" x="2630.151621935147" y="501.1899149006318"/><cell height="1.0" id="780" width="1.0" x="3517.899350141524" y="501.1899149006318"/><cell height="1.0" id="781" width="1.0" x="3524.9676069715847" y="501.1899149006318"/><cell height="1.0" id="782" width="1.0" x="2948.613102195688" y="501.1899149006318"/><cell height="1.0" id="783" width="1.0" x="3314.6508183775895" y="501.1899149006318"/><cell height="1.0" id="784" width="1.0" x="2846.676217446369" y="501.1899149006318"/><cell height="1.0" id="785" width="1.0" x="765.9759211047189" y="957.5037708998218"/><cell height="1.0" id="786" width="1.0" x="788.1433751015059" y="1032.272693022343"/><cell height="1.0" id="787" width="1.0" x="1437.1870653922515" y="955.0782231521111"/><cell height="1.0" id="788" width="1.0" x="1445.7704399309719" y="1095.6577926899558"/><cell height="1.0" id="789" width="1.0" x="1845.8581643386299" y="980.5316618110169"/><cell height="1.0" id="790" width="1.0" x="2196.8583990836382" y="501.1899149006318"/><cell height="1.0" id="791" width="1.0" x="2448.9676560725234" y="501.1899149006318"/><cell height="1.0" id="792" width="1.0" x="2466.0436352609" y="501.1899149006318"/><cell height="1.0" id="793" width="1.0" x="1167.9835189343635" y="917.6812548205999"/><cell height="1.0" id="794" width="1.0" x="1768.4434084293146" y="1094.1134493823704"/><cell height="1.0" id="795" width="1.0" x="3271.601968990079" y="501.1899149006318"/><cell height="1.0" id="796" width="1.0" x="2678.9285534475907" y="501.1899149006318"/><cell height="1.0" id="797" width="1.0" x="3050.0001361833465" y="501.1899149006318"/><cell height="1.0" id="798" width="1.0" x="2566.128822088065" y="501.1899149006318"/><cell height="1.0" id="799" width="1.0" x="279.30057609542985" y="1530.8463946698764"/><cell height="1.0" id="800" width="1.0" x="552.6144370348071" y="1866.0816274744407"/><cell height="1.0" id="801" width="1.0" x="573.2663388125205" y="1399.8366594516008"/><cell height="1.0" id="802" width="1.0" x="770.1179423554994" y="1530.1647105512866"/><cell height="1.0" id="803" width="1.0" x="1106.204510692989" y="1461.5929165952496"/><cell height="1.0" id="804" width="1.0" x="1095.1048342395925" y="1040.2396857588064"/><cell height="1.0" id="805" width="1.0" x="1190.595309733326" y="1603.8160953301656"/><cell height="1.0" id="806" width="1.0" x="1413.3060405606934" y="1813.1063970911632"/><cell height="1.0" id="807" width="1.0" x="629.6283320597911" y="1330.0769850881059"/><cell height="1.0" id="808" width="1.0" x="1074.8441036988525" y="1536.080958786962"/><cell height="1.0" id="809" width="1.0" x="1441.8294489934947" y="2049.6367750206687"/><cell height="1.0" id="810" width="1.0" x="1523.4696513485258" y="2180.828380705157"/><cell height="1.0" id="811" width="1.0" x="1574.3650728029252" y="2312.1890722951794"/><cell height="1.0" id="812" width="1.0" x="1546.3926258161152" y="2318.0716445705334"/><cell height="1.0" id="813" width="1.0" x="1426.2256777893956" y="1874.8311906523345"/><cell height="1.0" id="814" width="1.0" x="1428.1779027163836" y="1918.1477253820653"/><cell height="1.0" id="815" width="1.0" x="1424.8106545499766" y="1964.4179137253504"/><cell height="1.0" id="816" width="1.0" x="1416.2582550671204" y="1994.364910163505"/><cell height="1.0" id="817" width="1.0" x="1394.128987782703" y="1690.976260511962"/><cell height="1.0" id="818" width="1.0" x="598.3409651059717" y="1265.3091782446893"/><cell height="1.0" id="819" width="1.0" x="954.3948361116644" y="1165.722470564298"/><cell height="1.0" id="820" width="1.0" x="995.6448010950747" y="925.346614168566"/><cell height="1.0" id="821" width="1.0" x="620.5350662887589" y="1961.8372892409766"/><cell height="1.0" id="822" width="1.0" x="714.7675253913602" y="2225.7103263550407"/><cell height="1.0" id="823" width="1.0" x="495.24479401543374" y="1242.6570488185644"/><cell height="1.0" id="824" width="1.0" x="430.56766399015487" y="1238.3980364123909"/><cell height="1.0" id="825" width="1.0" x="567.1925009234658" y="1862.2147786404712"/><cell height="1.0" id="826" width="1.0" x="825.7791234806386" y="2505.965307938175"/><cell height="1.0" id="827" width="1.0" x="772.7564099043368" y="2364.817507868883"/><cell height="1.0" id="828" width="1.0" x="657.7864865541869" y="2080.7853543212077"/><cell height="1.0" id="829" width="1.0" x="584.6526901183347" y="1369.0611262469479"/><cell height="1.0" id="830" width="1.0" x="923.2035972599776" y="1207.4469779943477"/><cell height="1.0" id="831" width="1.0" x="1166.3461179461008" y="1002.8718240877861"/><cell height="1.0" id="832" width="1.0" x="612.0157746645797" y="1939.1788578246085"/><cell height="1.0" id="833" width="1.0" x="726.3121172178295" y="2150.299930615775"/><cell height="1.0" id="834" width="1.0" x="584.0295213651972" y="1843.5836369080282"/><cell height="1.0" id="835" width="1.0" x="823.9161994766332" y="2487.279083315055"/><cell height="1.0" id="836" width="1.0" x="809.5419109315231" y="2432.6503888542893"/><cell height="1.0" id="837" width="1.0" x="845.1899646096465" y="2545.933550187673"/><cell height="1.0" id="838" width="1.0" x="846.5317338242505" y="2555.2487900258834"/><cell height="1.0" id="839" width="1.0" x="724.6828310304732" y="2175.9808170848537"/><cell height="1.0" id="840" width="1.0" x="747.3767352209645" y="2218.939351451019"/><cell height="1.0" id="841" width="1.0" x="775.2423522581248" y="2331.3887403054396"/><cell height="1.0" id="842" width="1.0" x="781.5620964102685" y="2312.523681285829"/><cell height="1.0" id="843" width="1.0" x="696.7974679796912" y="2056.3953045501357"/><cell height="1.0" id="844" width="1.0" x="1036.748827398368" y="1287.0711391190316"/><cell height="1.0" id="845" width="1.0" x="1406.7052727601817" y="1187.9639184751118"/><cell height="1.0" id="846" width="1.0" x="1682.591697945636" y="950.4737409749075"/><cell height="1.0" id="847" width="1.0" x="1524.891205537497" y="1373.7303921281678"/><cell height="1.0" id="848" width="1.0" x="1721.7063819300913" y="1603.075580145026"/><cell height="1.0" id="849" width="1.0" x="1348.2499435676325" y="1296.9450800208288"/><cell height="1.0" id="850" width="1.0" x="1592.479938416353" y="2027.728212604625"/><cell height="1.0" id="851" width="1.0" x="1590.005937934622" y="2006.785826014846"/><cell height="1.0" id="852" width="1.0" x="1619.2087978465302" y="2171.8475709264458"/><cell height="1.0" id="853" width="1.0" x="1564.9909419550295" y="2226.162294902368"/><cell height="1.0" id="854" width="1.0" x="2586.152872590232" y="501.1899149006318"/><cell height="1.0" id="855" width="1.0" x="2576.8001219022317" y="501.1899149006318"/><cell height="1.0" id="856" width="1.0" x="1758.5352263022357" y="1636.079211653557"/><cell height="1.0" id="857" width="1.0" x="1780.4368045444867" y="1672.140802501068"/><cell height="1.0" id="858" width="1.0" x="1783.86898731581" y="1530.4976168124103"/><cell height="1.0" id="859" width="1.0" x="1506.9182174292673" y="1227.5905322241872"/><cell height="1.0" id="860" width="1.0" x="1794.8278625106273" y="955.5896379547398"/><cell height="1.0" id="861" width="1.0" x="1596.871274708815" y="1424.0451964222316"/><cell height="1.0" id="862" width="1.0" x="1693.256477813167" y="1612.591523062793"/><cell height="1.0" id="863" width="1.0" x="1042.682981896764" y="1295.0157396761244"/><cell height="1.0" id="864" width="1.0" x="1361.3544901721973" y="1351.4375689400242"/><cell height="1.0" id="865" width="1.0" x="1679.4220732475394" y="1857.7934486085232"/><cell height="1.0" id="866" width="1.0" x="1725.1170290461132" y="1929.109600694023"/><cell height="1.0" id="867" width="1.0" x="1764.4401868845423" y="2144.3990784364905"/><cell height="1.0" id="868" width="1.0" x="1743.7132740369698" y="2146.38329824831"/><cell height="1.0" id="869" width="1.0" x="1695.7874315974911" y="1657.2370277387245"/><cell height="1.0" id="870" width="1.0" x="1665.2521559363004" y="1671.505268393431"/><cell height="1.0" id="871" width="1.0" x="1696.1868707834794" y="1753.3187171341406"/><cell height="1.0" id="872" width="1.0" x="1676.6985295063134" y="1757.7530258135007"/><cell height="1.0" id="873" width="1.0" x="1728.2723209256085" y="1557.7585777794457"/><cell height="1.0" id="874" width="1.0" x="2729.9254299323075" y="501.1899149006318"/><cell height="1.0" id="875" width="1.0" x="2026.5309125791555" y="1219.1816087349962"/><cell height="1.0" id="876" width="1.0" x="2105.8183662207" y="1486.1858357181893"/><cell height="1.0" id="877" width="1.0" x="1271.0451571056572" y="1070.6485164151577"/><cell height="1.0" id="878" width="1.0" x="1798.7964074766671" y="1207.810623721421"/><cell height="1.0" id="879" width="1.0" x="2080.7525363384057" y="1856.406876061534"/><cell height="1.0" id="880" width="1.0" x="2004.4932084700656" y="1985.501415126417"/><cell height="1.0" id="881" width="1.0" x="2749.6206404742143" y="501.1899149006318"/><cell height="1.0" id="882" width="1.0" x="2113.7098510609694" y="1672.2590303241939"/><cell height="1.0" id="883" width="1.0" x="2214.7599355687275" y="1181.7556863231587"/><cell height="1.0" id="884" width="1.0" x="2690.07235814503" y="501.1899149006318"/><cell height="1.0" id="885" width="1.0" x="3012.782016248389" y="501.1899149006318"/><cell height="1.0" id="886" width="1.0" x="1541.505671362613" y="832.8644516342205"/><cell height="1.0" id="887" width="1.0" x="2867.6468554072135" y="1714.027678948852"/><cell height="1.0" id="888" width="1.0" x="2935.7991780638804" y="1712.2579259285123"/><cell height="1.0" id="889" width="1.0" x="2887.3871497153123" y="501.1899149006318"/><cell height="1.0" id="890" width="1.0" x="3276.293732947727" y="501.1899149006318"/><cell height="1.0" id="891" width="1.0" x="2423.7178787702223" y="1394.6382867095676"/><cell height="1.0" id="892" width="1.0" x="1587.8738729081215" y="1319.953834210263"/><cell height="1.0" id="893" width="1.0" x="1912.1560112102084" y="1275.7731747360301"/><cell height="1.0" id="894" width="1.0" x="2343.0668877447515" y="1944.3181890070687"/><cell height="1.0" id="895" width="1.0" x="2322.9113690404747" y="2068.897410205368"/><cell height="1.0" id="896" width="1.0" x="2394.3905612297613" y="1545.7564742858176"/><cell height="1.0" id="897" width="1.0" x="2390.003295716294" y="1740.1296008276777"/><cell height="1.0" id="898" width="1.0" x="2417.7250413210713" y="1264.201063217196"/><cell height="1.0" id="899" width="1.0" x="1444.6502445164047" y="1759.4999084517046"/><cell height="1.0" id="900" width="1.0" x="2039.087772058581" y="1510.035106177472"/><cell height="1.0" id="901" width="1.0" x="2772.380499796887" y="1900.4393332234176"/><cell height="1.0" id="902" width="1.0" x="2843.9328460290044" y="1990.7049528904986"/><cell height="1.0" id="903" width="1.0" x="2592.62831789868" y="1534.3199758277353"/><cell height="1.0" id="904" width="1.0" x="2463.425447476024" y="1770.7097864275215"/><cell height="1.0" id="905" width="1.0" x="2573.140384280371" y="1372.2062445441604"/><cell height="1.0" id="906" width="1.0" x="1179.7757833312362" y="1122.3315880085906"/><cell height="1.0" id="907" width="1.0" x="1577.0889154926306" y="2032.4663768483583"/><cell height="1.0" id="908" width="1.0" x="1437.9253511622544" y="1789.30027756825"/><cell height="1.0" id="909" width="1.0" x="1840.5707065413599" y="1502.3351413744847"/><cell height="1.0" id="910" width="1.0" x="2034.3430676224011" y="1907.3577352423385"/><cell height="1.0" id="911" width="1.0" x="1979.5456777465022" y="2124.6518619382905"/><cell height="1.0" id="912" width="1.0" x="2065.5524999235377" y="1591.7991823668544"/><cell height="1.0" id="913" width="1.0" x="1948.478823371526" y="1695.70835896237"/><cell height="1.0" id="914" width="1.0" x="2732.1317711507218" y="2333.266952620258"/><cell height="1.0" id="915" width="1.0" x="2687.903426669293" y="1916.0036499534751"/><cell height="1.0" id="916" width="1.0" x="2598.221877748439" y="2083.9547788404852"/><cell height="1.0" id="917" width="1.0" x="2397.0483139554344" y="1943.3318074537929"/><cell height="1.0" id="918" width="1.0" x="2727.302386929391" y="2270.027327630862"/><cell height="1.0" id="919" width="1.0" x="2872.734736829752" y="1888.955263190058"/><cell height="1.0" id="920" width="1.0" x="2589.632086704427" y="1769.9281153585252"/><cell height="1.0" id="921" width="1.0" x="2515.780695091876" y="1507.6364190998188"/><cell height="1.0" id="922" width="1.0" x="2446.6472190384025" y="1763.7933450395649"/></constraints></graphical></assignment></model>