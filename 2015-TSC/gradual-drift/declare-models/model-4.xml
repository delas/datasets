<?xml version="1.0" encoding="UTF-8"?><model><assignment language="ConDec" name="new model"><activitydefinitions><activity id="1" name="Register-complete"/><activity id="2" name="Decide low/high-complete"/><activity id="3" name="Create questionnaire-complete"/><activity id="4" name="Send questionnaire-complete"/><activity id="5" name="Prepare Notification-complete"/><activity id="6" name="Notification sent-complete"/><activity id="7" name="Archive-complete"/><activity id="8" name="Low claim split-complete"/><activity id="9" name="Low Insurance Check-complete"/><activity id="10" name="Low Medical History Check-complete"/><activity id="11" name="Low claim join-complete"/><activity id="12" name="High Insurance Check-complete"/><activity id="13" name="Contact Hospital-complete"/><activity id="14" name="Skip response-complete"/><activity id="15" name="Receive response-complete"/><activity id="16" name="By Post-complete"/><activity id="17" name="By Phone-complete"/><activity id="18" name="High Medical History Check-complete"/><activity id="19" name="By Email-complete"/></activitydefinitions><constraintdefinitions><constraint id="1" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="2" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="3" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="4" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="5" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="6" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="7" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="8" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="9" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="10" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="11" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="12" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="13" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="14" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="15" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="16" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="17" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="18" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="19" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="20" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="21" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="22" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="23" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="24" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="25" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="26" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="27" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="28" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="29" mandatory="true"><condition></condition><name>chain succession</name><template><description>A and B can happen only next to each other.</description><display>chain succession</display><name>chain succession</name><text>[](  ( "A" = X( "B" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="30" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="31" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="32" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="33" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="34" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="35" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="36" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="37" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="38" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="39" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="40" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="41" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="42" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="43" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="44" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="45" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="46" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="47" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="48" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="49" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="50" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="51" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="52" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="53" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="54" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="55" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="56" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="57" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="58" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="59" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="60" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="61" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="62" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="63" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="64" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="65" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="66" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="67" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="68" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="69" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="70" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="71" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="72" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="73" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="74" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="75" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="76" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="77" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="78" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="79" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="80" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="81" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="82" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="83" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="84" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="85" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="86" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="87" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="88" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="89" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="90" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="91" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="92" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="93" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="94" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="95" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="96" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="97" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="98" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="99" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="100" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="101" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="102" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="103" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="104" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="105" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="106" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="107" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="108" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="109" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="110" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="111" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="112" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="113" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="114" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="115" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="116" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="117" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="118" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="119" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="120" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="121" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="122" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="123" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="124" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="125" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="126" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="127" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="128" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="129" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="130" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="131" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="132" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="133" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="134" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="135" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="136" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="137" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="138" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="139" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="140" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="141" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="142" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="143" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="144" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="145" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="146" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="147" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="148" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="149" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="150" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="151" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="152" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="153" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="154" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="155" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="156" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="157" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="158" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="159" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="160" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="161" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="162" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="163" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="164" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="165" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="166" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="167" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="168" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="169" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="170" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="171" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="172" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="173" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="174" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="175" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="176" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="177" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="178" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="179" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="180" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="181" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="182" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="183" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="184" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="185" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="186" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="187" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="188" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="189" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="190" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="191" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="192" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="193" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="194" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="195" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="196" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="197" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="198" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="199" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="200" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="201" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="202" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="203" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="204" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="205" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="206" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="207" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="208" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="209" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="210" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="211" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="212" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="213" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="214" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="215" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="216" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="217" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="218" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="219" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="220" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="221" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="222" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="223" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="224" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="225" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="226" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="227" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="228" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="229" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="230" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="231" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="232" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="233" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="234" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="235" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="236" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="237" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="238" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="239" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="240" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="241" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="242" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="243" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="244" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="245" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="246" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="247" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="248" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="249" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="250" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="251" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="252" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="253" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="254" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="255" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="256" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="257" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="258" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="259" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="260" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="261" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="262" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="263" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="264" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="265" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="266" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="267" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="268" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="269" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="270" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="271" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="272" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="273" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="274" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="275" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="276" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="277" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="278" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="279" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="280" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="281" mandatory="true"><condition></condition><name>chain precedence</name><template><description>B can be executed only directly after A.</description><display>chain precedence</display><name>chain precedence</name><text>[]( ( X( "B" ) -&gt; "A") )/\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="282" mandatory="true"><condition></condition><name>init</name><template><description>Each instance has to start with execution of &lt;b&gt;Register-complete&lt;/b&gt;.</description><display>init</display><name>init</name><text>( ( "A.started" \/ "A.cancelled" ) W  "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either:
&lt;ul&gt;
&lt;li&gt;none of the tasks in this instance were executed yet, or&lt;/li&gt;
&lt;li&gt;the first executed task is &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because the first executed task 
in this instance was not &lt;b&gt;Register-complete&lt;/b&gt;.  &lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="283" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Decide low/high-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Decide low/high-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="284" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Create questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Create questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="285" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim split-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Low claim split-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim split-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="286" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="287" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="288" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="289" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Skip response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Skip response-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Skip response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="290" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="291" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="292" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="293" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="294" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Receive response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Receive response-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Receive response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="295" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="296" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="297" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="298" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="299" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="300" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="301" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim split-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Low claim split-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim split-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="302" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="303" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="304" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="305" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Skip response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Skip response-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Skip response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="306" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="307" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="308" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="309" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="310" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Receive response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Receive response-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Receive response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="311" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="312" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="313" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="314" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="315" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="316" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="317" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim split-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low claim split-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim split-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="318" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="319" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="320" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="321" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Skip response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Skip response-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Skip response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="322" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="323" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="324" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="325" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="326" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Receive response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Receive response-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Receive response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="327" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="328" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="329" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="330" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="331" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="332" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="333" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="334" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="335" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="336" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="337" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="338" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Skip response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Skip response-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Skip response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="339" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="340" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="341" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="342" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="343" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Receive response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Receive response-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Receive response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="344" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="345" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="346" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="347" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="348" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="349" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="350" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="351" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="352" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="353" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="354" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="355" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="356" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Notification sent-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Notification sent-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="357" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High Insurance Check-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;High Insurance Check-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="358" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High Insurance Check-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;High Insurance Check-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="359" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="360" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="361" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="362" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="363" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="364" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="365" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="366" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="367" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="368" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="369" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="370" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="371" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="372" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="373" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="374" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="375" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="376" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="377" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="378" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="379" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="380" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="381" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="382" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="383" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="384" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="385" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="386" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="387" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="388" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="389" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="390" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="391" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="392" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="393" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="394" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="395" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="396" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="397" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="398" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="399" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="400" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="401" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="402" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="403" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="404" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="405" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="406" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="407" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="408" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="409" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="410" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="411" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="412" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="413" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="414" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="415" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="416" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="417" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="418" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="419" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim split-complete&lt;/b&gt; or &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="420" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim split-complete&lt;/b&gt; or &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="421" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim split-complete&lt;/b&gt; or &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="422" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; or &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="423" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; or &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="424" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; or &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="425" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; or &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="426" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; or &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="427" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; or &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="428" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Skip response-complete&lt;/b&gt; or &lt;b&gt;Receive response-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="429" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim join-complete&lt;/b&gt; or &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="430" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim join-complete&lt;/b&gt; or &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="431" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim join-complete&lt;/b&gt; or &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="432" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Decide low/high-complete&lt;/b&gt;.
and
2. &lt;b&gt;Decide low/high-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Decide low/high-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="433" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.
and
2. &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Create questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="434" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.
and
2. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="435" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.
and
2. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="436" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="437" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="438" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Decide low/high-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.
and
2. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="439" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Decide low/high-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.
and
2. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="440" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Decide low/high-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="441" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Decide low/high-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="442" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Create questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.
and
2. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="443" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Create questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.
and
2. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="444" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Create questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="445" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Create questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="446" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low claim split-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="447" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low claim split-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="448" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low claim split-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low claim join-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="449" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Send questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.
and
2. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="450" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Send questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="451" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Send questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="452" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low claim join-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="453" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low claim join-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="454" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Prepare Notification-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="455" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Prepare Notification-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="456" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Notification sent-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Notification sent-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Notification sent-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="457" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;High Insurance Check-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.
and
2. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High Insurance Check-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;High Insurance Check-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="458" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Decide low/high-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="459" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="460" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="461" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="462" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="463" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="464" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; is executed, activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="465" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="466" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="467" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="468" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="469" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="470" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="471" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="472" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="473" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="474" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low claim join-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="475" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="476" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="477" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="478" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="479" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="480" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="481" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low claim join-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="482" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="483" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="484" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="485" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low claim join-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="486" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="487" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="488" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="489" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Skip response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Skip response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="490" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Skip response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Skip response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="491" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Skip response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Skip response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="492" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim join-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim join-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="493" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim join-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim join-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="494" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim join-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim join-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="495" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="496" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="497" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Receive response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Receive response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="498" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="499" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Contact Hospital-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="500" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="501" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Notification sent-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Notification sent-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="502" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Receive response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Receive response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="503" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Post-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Post-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Post-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Post-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Post-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="504" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="505" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Contact Hospital-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="506" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Phone-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Phone-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Phone-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="507" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="508" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Email-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Email-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Email-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="509" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Receive response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Receive response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="510" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Post-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Post-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Post-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Post-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Post-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="511" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="512" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Contact Hospital-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="513" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Phone-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Phone-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Phone-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="514" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="515" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Email-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Email-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Email-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="516" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="517" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="518" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="519" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="520" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="521" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="522" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="523" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="524" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="525" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="526" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="527" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Register-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="528" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Decide low/high-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="529" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Create questionnaire-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="530" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="531" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="532" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Notification sent-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Notification sent-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="533" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Archive-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Archive-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Archive-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="534" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="535" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="536" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="537" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="538" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="539" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="540" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="541" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="542" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="543" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="544" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="545" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="546" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="547" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="548" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="549" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="550" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="551" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="552" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="553" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="554" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="555" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="556" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="557" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="558" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="559" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="560" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="561" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="562" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="563" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="564" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="565" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="566" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="567" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="568" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="569" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="570" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="571" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="572" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="573" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="574" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="575" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="576" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="577" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="578" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="579" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="580" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="581" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="582" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="583" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="584" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="585" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="586" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="587" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="588" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="589" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="590" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="591" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="592" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="593" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="594" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="595" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="596" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="597" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="598" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="599" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="600" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="601" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="602" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="603" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="604" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="605" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="606" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="607" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="608" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="609" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="610" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="611" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="612" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="613" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="614" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="615" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="616" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="617" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="618" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="619" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="620" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="621" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="622" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="623" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="624" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="625" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="626" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="627" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="628" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="629" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="630" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="631" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="632" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="633" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="634" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="635" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="636" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="637" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="638" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="639" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="640" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="641" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="642" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="643" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="644" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="645" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="646" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="647" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="648" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="649" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="650" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="651" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="652" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="653" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="654" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="655" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="656" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="657" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="658" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="659" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="660" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="661" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="662" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="663" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="664" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="665" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="666" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="667" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="668" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="669" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="670" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="671" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="672" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="673" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="674" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="675" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="676" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="677" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="678" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="679" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="680" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="681" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="682" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="683" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="684" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="685" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="686" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="687" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="688" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="689" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="690" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="691" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="692" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="693" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="694" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="695" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="696" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="697" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="698" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="699" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="700" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="701" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="702" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="703" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="704" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="705" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="706" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="707" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="708" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="709" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="710" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="711" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="712" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="713" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="714" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="715" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="716" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="717" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="718" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="719" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="720" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="721" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="722" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="723" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="724" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="725" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="726" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="727" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="728" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="729" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="730" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="731" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="732" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="733" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="734" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="735" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="736" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="737" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="738" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="739" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="740" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="741" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="742" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="743" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="744" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="745" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="746" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="747" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="748" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="749" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="750" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="751" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="752" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="753" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="754" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="755" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="756" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="757" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="758" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="759" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="760" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="761" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="762" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="763" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="764" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="765" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="766" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="767" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="768" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="769" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="770" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="771" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="772" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="773" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="774" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="775" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="776" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="777" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="778" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="779" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="780" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="781" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="782" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="783" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="784" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="785" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="786" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="787" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="788" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="789" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="790" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="791" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="792" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="793" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="794" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="795" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="796" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="797" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="798" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="799" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="800" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="801" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="802" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="803" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="804" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="805" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="806" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="807" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="808" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="809" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="810" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="811" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="812" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="813" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="814" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="815" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="816" mandatory="true"><condition></condition><name>chain response</name><template><description>After A the  next one has to be B.</description><display>chain response</display><name>chain response</name><text>[] ( ( "A"  -&gt; X( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="817" mandatory="true"><condition></condition><name>chain response</name><template><description>After A the  next one has to be B.</description><display>chain response</display><name>chain response</name><text>[] ( ( "A"  -&gt; X( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint></constraintdefinitions><graphical><activities><cell height="30.0" id="1" width="130.0" x="2789.1612807131405" y="0.0"/><cell height="30.0" id="2" width="165.0" x="2722.481202340542" y="109.3610913730239"/><cell height="30.0" id="3" width="190.0" x="2409.0169923054764" y="260.9420977982593"/><cell height="30.0" id="4" width="180.0" x="2291.958054658315" y="722.2076857110528"/><cell height="30.0" id="5" width="190.0" x="0.0" y="729.0358513707154"/><cell height="30.0" id="6" width="175.0" x="243.67270033541485" y="855.6849312892912"/><cell height="30.0" id="7" width="125.0" x="574.9443684496414" y="1044.4044997925644"/><cell height="30.0" id="8" width="165.0" x="1331.6621079077177" y="966.2074242459692"/><cell height="30.0" id="9" width="185.0" x="1657.5246251710955" y="999.1457649326408"/><cell height="30.0" id="10" width="215.0" x="1785.750540793606" y="1120.3486044334768"/><cell height="30.0" id="11" width="160.0" x="865.2916248589302" y="1194.4897846209842"/><cell height="30.0" id="12" width="190.0" x="1739.5700782179479" y="1394.4858053883413"/><cell height="30.0" id="13" width="170.0" x="1904.6808657177094" y="1477.3142325130875"/><cell height="30.0" id="14" width="155.0" x="2480.378949890872" y="1536.9968742482797"/><cell height="30.0" id="15" width="170.0" x="1957.8647571220617" y="1191.3926329816743"/><cell height="30.0" id="16" width="125.0" x="2595.436331826956" y="1621.1891675635807"/><cell height="30.0" id="17" width="130.0" x="2795.791619920443" y="1658.3478426317492"/><cell height="30.0" id="18" width="220.0" x="2464.59417476842" y="1433.0088121070476"/><cell height="30.0" id="19" width="130.0" x="2577.078591161057" y="1566.5688252714158"/></activities><constraints><cell height="1.0" id="1" width="1.0" x="2850.289920284184" y="77.40091851307608"/><cell height="1.0" id="2" width="1.0" x="2756.048372910054" y="104.06293994576583"/><cell height="1.0" id="3" width="1.0" x="2968.4405346800013" y="301.8781638547018"/><cell height="1.0" id="4" width="1.0" x="1399.59737994484" y="109.03463453809215"/><cell height="1.0" id="5" width="1.0" x="1527.8878729849926" y="199.96860329104183"/><cell height="1.0" id="6" width="1.0" x="5131.828965349435" y="385.34860443347645"/><cell height="1.0" id="7" width="1.0" x="5110.233893522859" y="385.34860443347645"/><cell height="1.0" id="8" width="1.0" x="5146.406664679943" y="385.34860443347645"/><cell height="1.0" id="9" width="1.0" x="1468.0141995064218" y="298.79753373118143"/><cell height="1.0" id="10" width="1.0" x="1469.598222216589" y="336.1250777240347"/><cell height="1.0" id="11" width="1.0" x="1643.2645373296023" y="469.8395694534943"/><cell height="1.0" id="12" width="1.0" x="5094.233893522859" y="385.34860443347645"/><cell height="1.0" id="13" width="1.0" x="1199.364120753335" y="415.9309267864038"/><cell height="1.0" id="14" width="1.0" x="1412.9365721390564" y="510.2641846121098"/><cell height="1.0" id="15" width="1.0" x="1602.0238967594419" y="706.6928381311707"/><cell height="1.0" id="16" width="1.0" x="1558.5716879330657" y="1011.6833490060062"/><cell height="1.0" id="17" width="1.0" x="1598.9099002543187" y="1097.3337707604855"/><cell height="1.0" id="18" width="1.0" x="1141.322465147083" y="1100.7954693223"/><cell height="1.0" id="19" width="1.0" x="1318.678701297919" y="624.3344669939773"/><cell height="1.0" id="20" width="1.0" x="1384.5102079146282" y="726.1068794990598"/><cell height="1.0" id="21" width="1.0" x="5081.6626486462055" y="385.34860443347645"/><cell height="1.0" id="22" width="1.0" x="1832.2797066315547" y="1084.4438916253239"/><cell height="1.0" id="23" width="1.0" x="982.8331965643689" y="1199.5244555707022"/><cell height="1.0" id="24" width="1.0" x="1349.9633454793918" y="1206.7464824712317"/><cell height="1.0" id="25" width="1.0" x="189.23992506852773" y="755.8157969142794"/><cell height="1.0" id="26" width="1.0" x="343.94675165381386" y="974.0487804139856"/><cell height="1.0" id="27" width="1.0" x="399.3168479318538" y="915.8071028750844"/><cell height="1.0" id="28" width="1.0" x="1895.7073019907207" y="1458.481040152215"/><cell height="1.0" id="29" width="1.0" x="412.93518735761495" y="919.975276447402"/><cell height="1.0" id="37" width="1.0" x="2886.894521086712" y="118.10803777500055"/><cell height="1.0" id="38" width="1.0" x="2691.934330572577" y="113.53186542080212"/><cell height="1.0" id="39" width="1.0" x="2586.826777722072" y="424.53685437716945"/><cell height="1.0" id="40" width="1.0" x="1404.2083364282714" y="164.49249240180387"/><cell height="1.0" id="41" width="1.0" x="1502.6664838262216" y="176.22941847976438"/><cell height="1.0" id="42" width="1.0" x="1703.2339610714785" y="322.4742623874527"/><cell height="1.0" id="43" width="1.0" x="5137.432281211454" y="385.34860443347645"/><cell height="1.0" id="44" width="1.0" x="1385.6876167655364" y="263.8853276735482"/><cell height="1.0" id="45" width="1.0" x="1479.1212446009902" y="401.55978470402835"/><cell height="1.0" id="46" width="1.0" x="1671.3924344557522" y="481.2664567426383"/><cell height="1.0" id="47" width="1.0" x="2476.6708275472156" y="540.5235487230211"/><cell height="1.0" id="48" width="1.0" x="1175.0592907923149" y="404.7042381160581"/><cell height="1.0" id="49" width="1.0" x="1463.4935265205509" y="492.45654228917795"/><cell height="1.0" id="50" width="1.0" x="1646.3589700877792" y="628.4986364672843"/><cell height="1.0" id="51" width="1.0" x="1567.3924405160124" y="1018.7610572554223"/><cell height="1.0" id="52" width="1.0" x="1560.8786924854942" y="1046.871120615388"/><cell height="1.0" id="53" width="1.0" x="1224.5462630346626" y="1106.7303954043655"/><cell height="1.0" id="54" width="1.0" x="1243.7374301510085" y="651.2844015870776"/><cell height="1.0" id="55" width="1.0" x="1337.9553822598605" y="771.9653506742568"/><cell height="1.0" id="56" width="1.0" x="1398.0082795381738" y="832.323902169435"/><cell height="1.0" id="57" width="1.0" x="1296.6939809123173" y="1146.7313891766105"/><cell height="1.0" id="58" width="1.0" x="1360.9383809986348" y="1201.7930896088478"/><cell height="1.0" id="59" width="1.0" x="162.6248313687979" y="747.9726795986667"/><cell height="1.0" id="60" width="1.0" x="409.6775581484321" y="938.0776095146507"/><cell height="1.0" id="61" width="1.0" x="392.91860161027364" y="899.4944101062075"/><cell height="1.0" id="62" width="1.0" x="1928.1334878075722" y="1422.4140288627796"/><cell height="1.0" id="63" width="1.0" x="2855.217543346181" y="84.47729219218621"/><cell height="1.0" id="64" width="1.0" x="2836.908405902328" y="61.36002220962479"/><cell height="1.0" id="65" width="1.0" x="2701.427098667097" y="190.83814915285433"/><cell height="1.0" id="66" width="1.0" x="2708.64855342626" y="108.23831818028259"/><cell height="1.0" id="67" width="1.0" x="2195.346099957438" y="287.91206801778435"/><cell height="1.0" id="68" width="1.0" x="2617.032545800982" y="388.7528948644436"/><cell height="1.0" id="69" width="1.0" x="2715.42718625873" y="270.9240280789184"/><cell height="1.0" id="70" width="1.0" x="3909.819723726283" y="385.34860443347645"/><cell height="1.0" id="71" width="1.0" x="3939.4618461031987" y="385.34860443347645"/><cell height="1.0" id="72" width="1.0" x="3960.9654659742573" y="386.96478355884983"/><cell height="1.0" id="73" width="1.0" x="3873.820425620048" y="385.34860443347645"/><cell height="1.0" id="74" width="1.0" x="1454.9821565046554" y="168.99260620925395"/><cell height="1.0" id="75" width="1.0" x="1378.6866530087432" y="157.55223595144705"/><cell height="1.0" id="76" width="1.0" x="1479.603067328509" y="310.6959628893423"/><cell height="1.0" id="77" width="1.0" x="1554.6176709324022" y="241.94186442716887"/><cell height="1.0" id="78" width="1.0" x="1651.8365189103065" y="313.41604605436936"/><cell height="1.0" id="79" width="1.0" x="1686.0672355412407" y="313.08193298950135"/><cell height="1.0" id="80" width="1.0" x="3331.4201545217174" y="389.9951762465962"/><cell height="1.0" id="81" width="1.0" x="4043.0406625106407" y="386.47091199427496"/><cell height="1.0" id="82" width="1.0" x="2927.369591560312" y="557.3483325044781"/><cell height="1.0" id="83" width="1.0" x="3686.9974990816995" y="390.6419800083501"/><cell height="1.0" id="84" width="1.0" x="4122.58164024257" y="389.8826593330702"/><cell height="1.0" id="85" width="1.0" x="3946.3544610188687" y="387.63422687180366"/><cell height="1.0" id="86" width="1.0" x="4013.348839456831" y="386.9647835588498"/><cell height="1.0" id="87" width="1.0" x="2669.077623979033" y="239.6275590739254"/><cell height="1.0" id="88" width="1.0" x="2674.473910157405" y="220.48093171823646"/><cell height="1.0" id="89" width="1.0" x="2035.7432718266973" y="502.94626019365745"/><cell height="1.0" id="90" width="1.0" x="2678.3826692882208" y="395.510697189612"/><cell height="1.0" id="91" width="1.0" x="2669.8372703837035" y="381.31363164658967"/><cell height="1.0" id="92" width="1.0" x="2341.3283930696675" y="621.4833110400396"/><cell height="1.0" id="93" width="1.0" x="2698.644651772126" y="629.9320558250836"/><cell height="1.0" id="94" width="1.0" x="3525.303861303189" y="389.37095438292886"/><cell height="1.0" id="95" width="1.0" x="1840.1178975423586" y="584.7201318634793"/><cell height="1.0" id="96" width="1.0" x="1429.8517785359218" y="299.32913247981776"/><cell height="1.0" id="97" width="1.0" x="1408.8312140370344" y="215.61732017528584"/><cell height="1.0" id="98" width="1.0" x="1454.0403621756718" y="395.4533069718049"/><cell height="1.0" id="99" width="1.0" x="1404.6215281384943" y="388.73239777149433"/><cell height="1.0" id="100" width="1.0" x="1646.1560740995983" y="483.4224239940274"/><cell height="1.0" id="101" width="1.0" x="1718.2015384830697" y="474.57852307627456"/><cell height="1.0" id="102" width="1.0" x="2708.5241984437166" y="635.5896490930195"/><cell height="1.0" id="103" width="1.0" x="3658.217183169625" y="393.00044683353894"/><cell height="1.0" id="104" width="1.0" x="3840.579613481212" y="385.34860443347645"/><cell height="1.0" id="105" width="1.0" x="3857.5174185294213" y="385.34860443347645"/><cell height="1.0" id="106" width="1.0" x="3915.785706099358" y="385.7060488393735"/><cell height="1.0" id="107" width="1.0" x="3851.3471595723413" y="385.34860443347645"/><cell height="1.0" id="108" width="1.0" x="3584.794454418538" y="391.4645234924499"/><cell height="1.0" id="109" width="1.0" x="1928.0482354390701" y="628.2717223864638"/><cell height="1.0" id="110" width="1.0" x="2514.0246077440606" y="518.3707019680444"/><cell height="1.0" id="111" width="1.0" x="2447.070536697926" y="535.1278338331882"/><cell height="1.0" id="112" width="1.0" x="2162.497052641368" y="680.056362262023"/><cell height="1.0" id="113" width="1.0" x="2199.333930075294" y="784.8064218527281"/><cell height="1.0" id="114" width="1.0" x="3760.23513839951" y="385.34860443347645"/><cell height="1.0" id="115" width="1.0" x="1670.713207744434" y="707.4487296867884"/><cell height="1.0" id="116" width="1.0" x="1295.8752962190972" y="408.6267606138518"/><cell height="1.0" id="117" width="1.0" x="1267.4843133090621" y="455.0480953138783"/><cell height="1.0" id="118" width="1.0" x="1293.3261038845226" y="497.9910494514913"/><cell height="1.0" id="119" width="1.0" x="1275.6832682475297" y="497.9910494514912"/><cell height="1.0" id="120" width="1.0" x="1626.9951730901464" y="624.9811473782793"/><cell height="1.0" id="121" width="1.0" x="1482.9747983713337" y="664.0382737687252"/><cell height="1.0" id="122" width="1.0" x="2273.4731383357653" y="872.8849287411549"/><cell height="1.0" id="123" width="1.0" x="3791.0956033542902" y="385.34860443347645"/><cell height="1.0" id="124" width="1.0" x="2138.247972540031" y="927.4762492094"/><cell height="1.0" id="125" width="1.0" x="2050.4988149804844" y="1132.1075494681422"/><cell height="1.0" id="126" width="1.0" x="4048.3962563188197" y="385.34860443347645"/><cell height="1.0" id="127" width="1.0" x="3798.1751640661064" y="385.34860443347645"/><cell height="1.0" id="128" width="1.0" x="3780.1053143457484" y="385.34860443347645"/><cell height="1.0" id="129" width="1.0" x="1921.447943372973" y="836.9539335617532"/><cell height="1.0" id="130" width="1.0" x="1551.4223718352055" y="1005.3633697142783"/><cell height="1.0" id="131" width="1.0" x="1583.1199798677274" y="1023.0566571597271"/><cell height="1.0" id="132" width="1.0" x="1578.7594021494122" y="1107.3941046561063"/><cell height="1.0" id="133" width="1.0" x="1600.2455258769505" y="1041.29260217482"/><cell height="1.0" id="134" width="1.0" x="1246.9453979890404" y="1105.1727862288408"/><cell height="1.0" id="135" width="1.0" x="1152.9902836377873" y="1129.0743414881695"/><cell height="1.0" id="136" width="1.0" x="541.3776476052067" y="1185.7282778314577"/><cell height="1.0" id="137" width="1.0" x="829.4896542248418" y="894.2352101410355"/><cell height="1.0" id="138" width="1.0" x="1010.9685343960259" y="1023.6686948082762"/><cell height="1.0" id="139" width="1.0" x="2034.0005880726399" y="880.9053967825976"/><cell height="1.0" id="140" width="1.0" x="2156.630791778651" y="953.7999053286011"/><cell height="1.0" id="141" width="1.0" x="2607.1108778332014" y="1318.3604580324522"/><cell height="1.0" id="142" width="1.0" x="1646.068964006687" y="1135.670029467113"/><cell height="1.0" id="143" width="1.0" x="1255.4333737629138" y="647.4165059522677"/><cell height="1.0" id="144" width="1.0" x="1292.7607721156082" y="633.1358497146824"/><cell height="1.0" id="145" width="1.0" x="1358.4931684853689" y="762.3714541315599"/><cell height="1.0" id="146" width="1.0" x="1420.7731401531923" y="735.8971008720116"/><cell height="1.0" id="147" width="1.0" x="1386.194210216855" y="841.1478034215125"/><cell height="1.0" id="148" width="1.0" x="1435.1875690519068" y="843.418775332939"/><cell height="1.0" id="149" width="1.0" x="2227.4007348893547" y="1031.1115041286566"/><cell height="1.0" id="150" width="1.0" x="2776.6699189193423" y="1276.9451225052376"/><cell height="1.0" id="151" width="1.0" x="2217.5101542207376" y="1061.8391570799697"/><cell height="1.0" id="152" width="1.0" x="2242.666177521238" y="1137.1133595816887"/><cell height="1.0" id="153" width="1.0" x="2788.0887726632563" y="1223.7216913794957"/><cell height="1.0" id="154" width="1.0" x="2485.1517167362936" y="1106.3469104191045"/><cell height="1.0" id="155" width="1.0" x="2662.9738067735793" y="1169.78791741635"/><cell height="1.0" id="156" width="1.0" x="1810.8313829137319" y="1086.0677936863217"/><cell height="1.0" id="157" width="1.0" x="1811.6926754668339" y="1103.2020333885273"/><cell height="1.0" id="158" width="1.0" x="1291.722672253657" y="1137.2155197482693"/><cell height="1.0" id="159" width="1.0" x="1317.145403426292" y="1110.0696814932521"/><cell height="1.0" id="160" width="1.0" x="1034.5248757812528" y="714.0432472728642"/><cell height="1.0" id="161" width="1.0" x="1013.7190670445738" y="816.0936804521909"/><cell height="1.0" id="162" width="1.0" x="1260.4937425720266" y="1075.2041649497062"/><cell height="1.0" id="163" width="1.0" x="1402.7967182599327" y="1184.0997814554617"/><cell height="1.0" id="164" width="1.0" x="1384.0985024851946" y="1195.0342834905023"/><cell height="1.0" id="165" width="1.0" x="781.9627300300417" y="1462.233328249903"/><cell height="1.0" id="166" width="1.0" x="808.7510157931322" y="1313.0036332382538"/><cell height="1.0" id="167" width="1.0" x="1011.4537319131259" y="1263.2615776252305"/><cell height="1.0" id="168" width="1.0" x="1024.4040350215885" y="1797.0336871080744"/><cell height="1.0" id="169" width="1.0" x="1141.1194687390466" y="1707.0886162373627"/><cell height="1.0" id="170" width="1.0" x="1413.1616884800826" y="1602.895360005241"/><cell height="1.0" id="171" width="1.0" x="616.4973261704607" y="1279.3381575067287"/><cell height="1.0" id="172" width="1.0" x="630.156506385296" y="956.2907334880501"/><cell height="1.0" id="173" width="1.0" x="855.3935075368379" y="1165.2480931555492"/><cell height="1.0" id="174" width="1.0" x="154.67179706018618" y="780.5215072141028"/><cell height="1.0" id="175" width="1.0" x="152.58576925644502" y="758.6499728345322"/><cell height="1.0" id="176" width="1.0" x="362.52806718696803" y="996.0725943300952"/><cell height="1.0" id="177" width="1.0" x="340.90127683036076" y="967.0651300620478"/><cell height="1.0" id="178" width="1.0" x="776.3586455515068" y="1450.436142131779"/><cell height="1.0" id="179" width="1.0" x="1055.3997050862015" y="1856.0550661404823"/><cell height="1.0" id="180" width="1.0" x="859.1757862851035" y="1565.9843355739772"/><cell height="1.0" id="181" width="1.0" x="902.765686967408" y="1630.845876021443"/><cell height="1.0" id="182" width="1.0" x="3767.851427733902" y="385.34860443347645"/><cell height="1.0" id="183" width="1.0" x="981.7804583132195" y="1720.8301475729936"/><cell height="1.0" id="184" width="1.0" x="1179.0845589137803" y="2060.3233330408884"/><cell height="1.0" id="185" width="1.0" x="446.443885568657" y="948.5115653050775"/><cell height="1.0" id="186" width="1.0" x="416.04393424730745" y="902.5912604641306"/><cell height="1.0" id="187" width="1.0" x="894.94581705517" y="1421.7943724569009"/><cell height="1.0" id="188" width="1.0" x="1207.835850873007" y="1819.722448828662"/><cell height="1.0" id="189" width="1.0" x="937.727631899415" y="1475.5499210428925"/><cell height="1.0" id="190" width="1.0" x="971.746320035872" y="1516.8012922021785"/><cell height="1.0" id="191" width="1.0" x="1284.6786491304042" y="1913.5833620402932"/><cell height="1.0" id="192" width="1.0" x="1126.4210574337403" y="1685.9292368018678"/><cell height="1.0" id="193" width="1.0" x="1193.2174787233748" y="1775.2397270709553"/><cell height="1.0" id="194" width="1.0" x="1012.10309446637" y="1276.178876198208"/><cell height="1.0" id="195" width="1.0" x="1456.5511583094494" y="1719.8140686869706"/><cell height="1.0" id="196" width="1.0" x="1186.1448787733045" y="1411.1742757387829"/><cell height="1.0" id="197" width="1.0" x="1262.8824698781063" y="1472.71373648621"/><cell height="1.0" id="198" width="1.0" x="1550.8427075133563" y="1837.47526566533"/><cell height="1.0" id="199" width="1.0" x="1391.1217739178069" y="1577.531206620808"/><cell height="1.0" id="200" width="1.0" x="1478.9769168654225" y="1692.3737906761849"/><cell height="1.0" id="201" width="1.0" x="1919.7537170206656" y="1425.8336625349616"/><cell height="1.0" id="202" width="1.0" x="1872.2648758299756" y="1426.2104182597432"/><cell height="1.0" id="203" width="1.0" x="2217.6498520200216" y="1385.3331399824415"/><cell height="1.0" id="204" width="1.0" x="2247.61253634631" y="1452.2442615829864"/><cell height="1.0" id="205" width="1.0" x="2824.674289811427" y="77.96880077770601"/><cell height="1.0" id="206" width="1.0" x="2739.209213263054" y="108.36180588462273"/><cell height="1.0" id="207" width="1.0" x="2084.7155524303093" y="404.9391682755651"/><cell height="1.0" id="208" width="1.0" x="2702.5786464604475" y="276.5750879840515"/><cell height="1.0" id="209" width="1.0" x="2169.997901824813" y="377.73669260789904"/><cell height="1.0" id="210" width="1.0" x="3040.948088469778" y="441.076860052732"/><cell height="1.0" id="211" width="1.0" x="3969.936044500128" y="385.80297538102155"/><cell height="1.0" id="212" width="1.0" x="1792.9069785673923" y="394.71300154810024"/><cell height="1.0" id="213" width="1.0" x="1357.069396693793" y="150.12241076759014"/><cell height="1.0" id="214" width="1.0" x="1495.144029828225" y="242.3034497130078"/><cell height="1.0" id="215" width="1.0" x="1696.2150971576025" y="320.705492932599"/><cell height="1.0" id="216" width="1.0" x="3834.677588554687" y="385.34860443347645"/><cell height="1.0" id="217" width="1.0" x="4037.3139282356656" y="388.0943404343737"/><cell height="1.0" id="218" width="1.0" x="3818.046030270668" y="385.34860443347645"/><cell height="1.0" id="219" width="1.0" x="3894.8025342811784" y="385.34860443347645"/><cell height="1.0" id="220" width="1.0" x="4175.443825665777" y="389.8625790504153"/><cell height="1.0" id="221" width="1.0" x="3927.6363829383963" y="385.34860443347645"/><cell height="1.0" id="222" width="1.0" x="3987.2064164108715" y="391.0966524653286"/><cell height="1.0" id="223" width="1.0" x="2024.434237412097" y="500.4551203568533"/><cell height="1.0" id="224" width="1.0" x="2671.636821366497" y="453.4347717790305"/><cell height="1.0" id="225" width="1.0" x="2360.4674250548037" y="622.3977314269949"/><cell height="1.0" id="226" width="1.0" x="2694.4409300457605" y="599.6441771291579"/><cell height="1.0" id="227" width="1.0" x="3512.070597962789" y="393.5715555092596"/><cell height="1.0" id="228" width="1.0" x="1826.2464083006926" y="587.2641466294615"/><cell height="1.0" id="229" width="1.0" x="1363.4711544736538" y="276.5706349699153"/><cell height="1.0" id="230" width="1.0" x="1443.7252223553342" y="425.87417383671874"/><cell height="1.0" id="231" width="1.0" x="1570.736691055734" y="480.63849516383914"/><cell height="1.0" id="232" width="1.0" x="3709.04680447249" y="385.34860443347645"/><cell height="1.0" id="233" width="1.0" x="3647.8428174147107" y="393.71920329088454"/><cell height="1.0" id="234" width="1.0" x="3475.9183143457485" y="385.34860443347645"/><cell height="1.0" id="235" width="1.0" x="3354.864722318103" y="391.08729276945155"/><cell height="1.0" id="236" width="1.0" x="3888.411116518908" y="383.99150958960695"/><cell height="1.0" id="237" width="1.0" x="3899.6662563188193" y="385.34860443347645"/><cell height="1.0" id="238" width="1.0" x="3623.162587739445" y="392.2217825685936"/><cell height="1.0" id="239" width="1.0" x="1936.7754749228834" y="614.7011765235957"/><cell height="1.0" id="240" width="1.0" x="2470.021252396467" y="526.077965018445"/><cell height="1.0" id="241" width="1.0" x="2086.514537157221" y="626.0045782278917"/><cell height="1.0" id="242" width="1.0" x="2215.9530130416506" y="777.6513349454245"/><cell height="1.0" id="243" width="1.0" x="2702.231520462203" y="1050.4930296281577"/><cell height="1.0" id="244" width="1.0" x="1701.2773865751856" y="706.0138917625525"/><cell height="1.0" id="245" width="1.0" x="1249.2182235618286" y="449.2580013670123"/><cell height="1.0" id="246" width="1.0" x="1178.0214872876459" y="581.5533212221344"/><cell height="1.0" id="247" width="1.0" x="1412.8132705911512" y="685.1168644309614"/><cell height="1.0" id="248" width="1.0" x="2340.531049744789" y="607.7036534972742"/><cell height="1.0" id="249" width="1.0" x="2846.1225182696357" y="1169.867595957881"/><cell height="1.0" id="250" width="1.0" x="2154.1749398754155" y="918.5951380877902"/><cell height="1.0" id="251" width="1.0" x="3256.0798267511245" y="385.34860443347645"/><cell height="1.0" id="252" width="1.0" x="3536.1525869094835" y="385.9897666924825"/><cell height="1.0" id="253" width="1.0" x="3745.3349271265743" y="385.34860443347645"/><cell height="1.0" id="254" width="1.0" x="2717.127804858335" y="1027.5109002537438"/><cell height="1.0" id="255" width="1.0" x="1577.021681007665" y="996.94317362135"/><cell height="1.0" id="256" width="1.0" x="1616.8765921856116" y="1077.6980488387148"/><cell height="1.0" id="257" width="1.0" x="1054.0969599561658" y="1158.1543244805675"/><cell height="1.0" id="258" width="1.0" x="2135.9434013345667" y="842.1216988362391"/><cell height="1.0" id="259" width="1.0" x="2196.1817772343197" y="908.967534552113"/><cell height="1.0" id="260" width="1.0" x="2619.775007892328" y="1280.8159921049896"/><cell height="1.0" id="261" width="1.0" x="1541.7389468746865" y="844.4128305838625"/><cell height="1.0" id="262" width="1.0" x="1275.79739978246" y="642.5005557996699"/><cell height="1.0" id="263" width="1.0" x="1396.443897917622" y="744.0066119763273"/><cell height="1.0" id="264" width="1.0" x="1472.0720609809346" y="787.1852955521146"/><cell height="1.0" id="265" width="1.0" x="2251.4722484172908" y="950.5056952373491"/><cell height="1.0" id="266" width="1.0" x="2708.0357027706323" y="1195.7420621129568"/><cell height="1.0" id="267" width="1.0" x="2264.3003097016162" y="1150.1313227362639"/><cell height="1.0" id="268" width="1.0" x="2785.5434060588227" y="1232.2236590116054"/><cell height="1.0" id="269" width="1.0" x="2519.9313264394114" y="1167.445180068767"/><cell height="1.0" id="270" width="1.0" x="2675.002374470173" y="1179.7002248095005"/><cell height="1.0" id="271" width="1.0" x="1359.0187681890316" y="1148.3057553131293"/><cell height="1.0" id="272" width="1.0" x="1371.2360012683407" y="1191.3297413711189"/><cell height="1.0" id="273" width="1.0" x="207.86311493425035" y="813.2971978853243"/><cell height="1.0" id="274" width="1.0" x="368.6109298247372" y="1006.0774616975697"/><cell height="1.0" id="275" width="1.0" x="1054.8856540435686" y="1843.808964202688"/><cell height="1.0" id="276" width="1.0" x="2623.9068855564515" y="202.08740198942974"/><cell height="1.0" id="277" width="1.0" x="1604.8407846775938" y="687.6240495124568"/><cell height="1.0" id="278" width="1.0" x="412.58344971919576" y="929.6959461811929"/><cell height="1.0" id="279" width="1.0" x="1911.2699416500504" y="1428.820312148443"/><cell height="1.0" id="280" width="1.0" x="2227.694135162533" y="1365.2079300832745"/><cell height="1.0" id="281" width="1.0" x="385.11614772646595" y="891.8338410402696"/><cell height="1.0" id="283" width="1.0" x="2870.737901055942" y="96.14402431629458"/><cell height="1.0" id="284" width="1.0" x="2769.3063819227973" y="102.77799849100617"/><cell height="1.0" id="285" width="1.0" x="2072.1626009712973" y="404.9420689056902"/><cell height="1.0" id="286" width="1.0" x="3862.0499669844276" y="385.34860443347645"/><cell height="1.0" id="287" width="1.0" x="3737.265417772593" y="385.34860443347645"/><cell height="1.0" id="288" width="1.0" x="3630.651225792617" y="385.34860443347645"/><cell height="1.0" id="289" width="1.0" x="3954.40408527056" y="385.34860443347645"/><cell height="1.0" id="290" width="1.0" x="1772.5170610527207" y="437.428150753233"/><cell height="1.0" id="291" width="1.0" x="1388.7418881389203" y="123.24931670359217"/><cell height="1.0" id="292" width="1.0" x="1492.6126310965046" y="194.35855688804585"/><cell height="1.0" id="293" width="1.0" x="1699.6144657325035" y="313.0785530411012"/><cell height="1.0" id="294" width="1.0" x="3651.1912774542593" y="385.34860443347645"/><cell height="1.0" id="295" width="1.0" x="4027.3613953659606" y="388.3789971212228"/><cell height="1.0" id="296" width="1.0" x="3607.0896919074207" y="385.34860443347645"/><cell height="1.0" id="297" width="1.0" x="3844.431717331665" y="385.34860443347645"/><cell height="1.0" id="298" width="1.0" x="4086.331427142751" y="389.793210683596"/><cell height="1.0" id="299" width="1.0" x="3921.9486216742857" y="385.34860443347645"/><cell height="1.0" id="300" width="1.0" x="4101.620931187334" y="385.34860443347645"/><cell height="1.0" id="301" width="1.0" x="2042.7028941316848" y="503.6461938170741"/><cell height="1.0" id="302" width="1.0" x="2699.7403047115513" y="449.410895246264"/><cell height="1.0" id="303" width="1.0" x="2359.4038090710296" y="585.5871508908677"/><cell height="1.0" id="304" width="1.0" x="3400.589103766947" y="385.34860443347645"/><cell height="1.0" id="305" width="1.0" x="3556.828009821319" y="386.5752927352701"/><cell height="1.0" id="306" width="1.0" x="1952.0314991171836" y="427.8271533532119"/><cell height="1.0" id="307" width="1.0" x="1378.9850726721963" y="292.7718801796438"/><cell height="1.0" id="308" width="1.0" x="1385.8942427207187" y="454.12915781530535"/><cell height="1.0" id="309" width="1.0" x="1679.212504769917" y="473.4602670072311"/><cell height="1.0" id="310" width="1.0" x="3489.1942257926175" y="385.34860443347645"/><cell height="1.0" id="311" width="1.0" x="3640.974450821837" y="393.6074018964605"/><cell height="1.0" id="312" width="1.0" x="3317.765593522856" y="385.34860443347645"/><cell height="1.0" id="313" width="1.0" x="3338.8487518744705" y="385.34860443347645"/><cell height="1.0" id="314" width="1.0" x="4284.865504016201" y="385.34860443347645"/><cell height="1.0" id="315" width="1.0" x="3805.5129612813294" y="385.34860443347645"/><cell height="1.0" id="316" width="1.0" x="3880.9739206333384" y="385.34860443347645"/><cell height="1.0" id="317" width="1.0" x="1831.4081934246901" y="707.9597661806858"/><cell height="1.0" id="318" width="1.0" x="2488.007234949767" y="532.2382235299929"/><cell height="1.0" id="319" width="1.0" x="2384.2405214967407" y="385.34860443347645"/><cell height="1.0" id="320" width="1.0" x="2428.6354434391897" y="385.34860443347645"/><cell height="1.0" id="321" width="1.0" x="3407.652131226544" y="385.34860443347645"/><cell height="1.0" id="322" width="1.0" x="1685.5173995373952" y="704.8670153381263"/><cell height="1.0" id="323" width="1.0" x="1256.0179841591903" y="461.66328044462006"/><cell height="1.0" id="324" width="1.0" x="1351.571030131186" y="500.8175099280957"/><cell height="1.0" id="325" width="1.0" x="1469.552998119435" y="681.7128101804453"/><cell height="1.0" id="326" width="1.0" x="2248.2694930725074" y="772.2208740614115"/><cell height="1.0" id="327" width="1.0" x="3597.761394271154" y="385.34860443347645"/><cell height="1.0" id="328" width="1.0" x="3262.3690468292502" y="385.34860443347645"/><cell height="1.0" id="329" width="1.0" x="3281.4734226886817" y="385.34860443347645"/><cell height="1.0" id="330" width="1.0" x="4146.069961495901" y="385.34860443347645"/><cell height="1.0" id="331" width="1.0" x="3417.13095095349" y="385.34860443347645"/><cell height="1.0" id="332" width="1.0" x="3427.0652583050664" y="385.34860443347645"/><cell height="1.0" id="333" width="1.0" x="1566.6094476939688" y="1002.2922968707745"/><cell height="1.0" id="334" width="1.0" x="1587.026807468479" y="1044.154410192049"/><cell height="1.0" id="335" width="1.0" x="1128.066048353991" y="1125.279154912681"/><cell height="1.0" id="336" width="1.0" x="2052.2214434302546" y="855.4587666816753"/><cell height="1.0" id="337" width="1.0" x="2205.478157733987" y="891.371413378629"/><cell height="1.0" id="338" width="1.0" x="2638.7682248076767" y="1242.5716944748365"/><cell height="1.0" id="339" width="1.0" x="1605.8971029401623" y="841.103180379758"/><cell height="1.0" id="340" width="1.0" x="1280.0421703844117" y="635.9043907524778"/><cell height="1.0" id="341" width="1.0" x="1371.9687400222651" y="710.0489292530323"/><cell height="1.0" id="342" width="1.0" x="1419.4246566933796" y="818.7671170194111"/><cell height="1.0" id="343" width="1.0" x="3290.2392227754885" y="385.34860443347645"/><cell height="1.0" id="344" width="1.0" x="2762.457559209086" y="1264.2095030826604"/><cell height="1.0" id="345" width="1.0" x="2260.8733472149706" y="1129.818408904348"/><cell height="1.0" id="346" width="1.0" x="2841.796029442413" y="1264.987432728557"/><cell height="1.0" id="347" width="1.0" x="2496.814786653407" y="1115.9949241900645"/><cell height="1.0" id="348" width="1.0" x="2690.112115914685" y="1178.5890456332431"/><cell height="1.0" id="349" width="1.0" x="1431.5274583468845" y="1149.433958176925"/><cell height="1.0" id="350" width="1.0" x="1392.6428605113013" y="1172.049599540213"/><cell height="1.0" id="351" width="1.0" x="167.19150905887597" y="758.1866713911329"/><cell height="1.0" id="352" width="1.0" x="378.87428162138025" y="1019.8032029495837"/><cell height="1.0" id="353" width="1.0" x="1053.8086902784933" y="1862.348399095467"/><cell height="1.0" id="354" width="1.0" x="3667.157311554224" y="385.34860443347645"/><cell height="1.0" id="355" width="1.0" x="2810.8722365806625" y="385.34860443347645"/><cell height="1.0" id="356" width="1.0" x="511.7657017668654" y="913.3804748475765"/><cell height="1.0" id="357" width="1.0" x="1943.83831079229" y="1410.1085036403229"/><cell height="1.0" id="358" width="1.0" x="2266.7020200508478" y="1345.985653151039"/><cell height="1.0" id="359" width="1.0" x="2846.4502699975533" y="68.93286152238329"/><cell height="1.0" id="360" width="1.0" x="2713.3039233647323" y="118.48269996460164"/><cell height="1.0" id="361" width="1.0" x="3717.181433886167" y="385.34860443347645"/><cell height="1.0" id="362" width="1.0" x="1427.119207545572" y="167.7561925636222"/><cell height="1.0" id="363" width="1.0" x="1520.2259259524549" y="243.0378533737864"/><cell height="1.0" id="364" width="1.0" x="1672.4693013522597" y="313.86651843562436"/><cell height="1.0" id="365" width="1.0" x="2713.242689293546" y="448.9009941952089"/><cell height="1.0" id="366" width="1.0" x="1351.437574228256" y="286.0493650178836"/><cell height="1.0" id="367" width="1.0" x="1437.0373416543" y="407.07029250713487"/><cell height="1.0" id="368" width="1.0" x="1606.1024058442677" y="492.1332693707796"/><cell height="1.0" id="369" width="1.0" x="2402.826041013681" y="563.6996011847086"/><cell height="1.0" id="370" width="1.0" x="1258.7300665302628" y="374.31485622920366"/><cell height="1.0" id="371" width="1.0" x="1324.0937230990035" y="500.5043095766537"/><cell height="1.0" id="372" width="1.0" x="1611.336593556537" y="636.6395932733747"/><cell height="1.0" id="373" width="1.0" x="1544.6086607069442" y="984.7509541112971"/><cell height="1.0" id="374" width="1.0" x="1623.9710437957428" y="1088.8004376384376"/><cell height="1.0" id="375" width="1.0" x="1047.1375490851394" y="1156.8264340848332"/><cell height="1.0" id="376" width="1.0" x="537.0397637820647" y="1174.285544839266"/><cell height="1.0" id="377" width="1.0" x="859.08818068529" y="871.7251350623238"/><cell height="1.0" id="378" width="1.0" x="1050.9765823214227" y="1010.6198132702925"/><cell height="1.0" id="379" width="1.0" x="1263.5085390407883" y="640.9098096469604"/><cell height="1.0" id="380" width="1.0" x="1356.305892703247" y="719.2175583700785"/><cell height="1.0" id="381" width="1.0" x="1502.0422495331477" y="792.7946908999845"/><cell height="1.0" id="382" width="1.0" x="1032.8976200868246" y="1190.3982139699183"/><cell height="1.0" id="383" width="1.0" x="935.3293415062064" y="733.6001160868466"/><cell height="1.0" id="384" width="1.0" x="1134.7266011296085" y="862.6374261658408"/><cell height="1.0" id="385" width="1.0" x="1382.7813073072866" y="955.2593747604428"/><cell height="1.0" id="386" width="1.0" x="1417.7222113919415" y="1178.404507612445"/><cell height="1.0" id="387" width="1.0" x="728.9421969038283" y="1396.0265300454193"/><cell height="1.0" id="388" width="1.0" x="821.7569864227335" y="1330.267485798744"/><cell height="1.0" id="389" width="1.0" x="1014.9539540345538" y="1270.005134361724"/><cell height="1.0" id="390" width="1.0" x="990.4130068729411" y="1740.514351208048"/><cell height="1.0" id="391" width="1.0" x="1144.4036401307326" y="1711.256611843301"/><cell height="1.0" id="392" width="1.0" x="1418.871079184624" y="1628.967699036874"/><cell height="1.0" id="393" width="1.0" x="583.022320168941" y="1238.1650347676573"/><cell height="1.0" id="394" width="1.0" x="601.6349901103804" y="1117.0856808307067"/><cell height="1.0" id="395" width="1.0" x="752.7365085368681" y="1085.3304961910337"/><cell height="1.0" id="396" width="1.0" x="222.38030376690557" y="740.4255264927726"/><cell height="1.0" id="397" width="1.0" x="288.30181878418296" y="914.7522016805302"/><cell height="1.0" id="398" width="1.0" x="1235.407757450704" y="671.5786503100635"/><cell height="1.0" id="399" width="1.0" x="812.5675623089649" y="1507.2218498300158"/><cell height="1.0" id="400" width="1.0" x="873.0289194199187" y="1582.8340667089751"/><cell height="1.0" id="401" width="1.0" x="2393.698248839636" y="385.34860443347645"/><cell height="1.0" id="402" width="1.0" x="569.3266707814178" y="1081.6920399019905"/><cell height="1.0" id="403" width="1.0" x="891.4509588553277" y="1415.765852904587"/><cell height="1.0" id="404" width="1.0" x="1204.3117999649162" y="1803.472082119279"/><cell height="1.0" id="405" width="1.0" x="935.1420392854893" y="1467.865168876806"/><cell height="1.0" id="406" width="1.0" x="979.0276781452187" y="1524.7000863341623"/><cell height="1.0" id="407" width="1.0" x="3124.504892961183" y="385.34860443347645"/><cell height="1.0" id="408" width="1.0" x="2408.4669057404985" y="385.34860443347645"/><cell height="1.0" id="409" width="1.0" x="2830.158261754854" y="385.34860443347645"/><cell height="1.0" id="410" width="1.0" x="1024.5832124694687" y="1287.5687325554952"/><cell height="1.0" id="411" width="1.0" x="1458.6052598187598" y="1700.78538201546"/><cell height="1.0" id="412" width="1.0" x="1206.011244426788" y="1428.9746906497048"/><cell height="1.0" id="413" width="1.0" x="1228.1088588883445" y="1443.847764920055"/><cell height="1.0" id="414" width="1.0" x="1543.1819321097537" y="1860.6243954046404"/><cell height="1.0" id="415" width="1.0" x="1379.6462404809886" y="1565.655972703818"/><cell height="1.0" id="416" width="1.0" x="2822.9962991387474" y="385.34860443347645"/><cell height="1.0" id="417" width="1.0" x="1904.5521446225575" y="1432.2701917405238"/><cell height="1.0" id="418" width="1.0" x="2279.380150917789" y="1460.9739785370284"/><cell height="1.0" id="419" width="1.0" x="1681.9409533361413" y="1298.9978324223525"/><cell height="1.0" id="420" width="1.0" x="1647.9051841217129" y="1381.3970092171621"/><cell height="1.0" id="421" width="1.0" x="2048.8484190072995" y="979.5219920447526"/><cell height="1.0" id="422" width="1.0" x="1819.6515860843324" y="1269.0208872836793"/><cell height="1.0" id="423" width="1.0" x="1971.5527604540011" y="1179.0248492042356"/><cell height="1.0" id="424" width="1.0" x="2167.1364509833948" y="1130.2181335137352"/><cell height="1.0" id="425" width="1.0" x="1834.1784298576026" y="1284.848092142474"/><cell height="1.0" id="426" width="1.0" x="1920.2078704932337" y="1315.6846380000422"/><cell height="1.0" id="427" width="1.0" x="2315.440756435135" y="1315.3726737435682"/><cell height="1.0" id="428" width="1.0" x="2319.6647956407664" y="1352.0530935253478"/><cell height="1.0" id="429" width="1.0" x="1339.1305247875875" y="1272.792242180794"/><cell height="1.0" id="430" width="1.0" x="1459.714448373256" y="1394.3416531497346"/><cell height="1.0" id="431" width="1.0" x="1651.339193308368" y="1522.7476397210899"/><cell height="1.0" id="432" width="1.0" x="2860.1660158494456" y="92.95611811417035"/><cell height="1.0" id="433" width="1.0" x="2724.8723203422915" y="103.84019343212043"/><cell height="1.0" id="434" width="1.0" x="2947.6799063728695" y="279.4598660313686"/><cell height="1.0" id="435" width="1.0" x="1371.8344538177685" y="137.45020624890964"/><cell height="1.0" id="436" width="1.0" x="1443.3866663925346" y="310.83363856545543"/><cell height="1.0" id="437" width="1.0" x="1787.4033492424655" y="340.346232340509"/><cell height="1.0" id="438" width="1.0" x="2665.764070624651" y="399.625720382297"/><cell height="1.0" id="439" width="1.0" x="1424.5223550041974" y="242.61589218678358"/><cell height="1.0" id="440" width="1.0" x="1450.8406442045857" y="418.39747671114566"/><cell height="1.0" id="441" width="1.0" x="1595.8037695325095" y="477.6027199306135"/><cell height="1.0" id="442" width="1.0" x="2457.640988774076" y="449.8206044734532"/><cell height="1.0" id="443" width="1.0" x="1183.727090194713" y="450.09119833653165"/><cell height="1.0" id="444" width="1.0" x="1378.0141881610948" y="499.75959593712764"/><cell height="1.0" id="445" width="1.0" x="1547.3278343320922" y="611.1806648363721"/><cell height="1.0" id="446" width="1.0" x="1605.9515088511112" y="996.2989986782383"/><cell height="1.0" id="447" width="1.0" x="1591.0577730063787" y="1102.882001762373"/><cell height="1.0" id="448" width="1.0" x="1110.307172806957" y="1138.5417394322512"/><cell height="1.0" id="449" width="1.0" x="1262.5515241699081" y="661.487781290265"/><cell height="1.0" id="450" width="1.0" x="1352.8975148862621" y="767.5118196896778"/><cell height="1.0" id="451" width="1.0" x="1404.793862231254" y="842.5571864602939"/><cell height="1.0" id="452" width="1.0" x="1323.1305397979283" y="1146.3191969990046"/><cell height="1.0" id="453" width="1.0" x="1425.5520657667087" y="1172.8622427638288"/><cell height="1.0" id="454" width="1.0" x="166.71232708442494" y="768.8199638344585"/><cell height="1.0" id="455" width="1.0" x="352.78529010078745" y="985.9450242744106"/><cell height="1.0" id="456" width="1.0" x="627.1067207524097" y="1140.4004899943257"/><cell height="1.0" id="457" width="1.0" x="1936.2627313981393" y="1415.7680738586637"/><cell height="1.0" id="458" width="1.0" x="2838.1100807582648" y="72.70470365141131"/><cell height="1.0" id="459" width="1.0" x="2669.1814494027512" y="119.17875420534517"/><cell height="1.0" id="460" width="1.0" x="3016.776011676375" y="397.23258798705433"/><cell height="1.0" id="461" width="1.0" x="1366.1209130987859" y="154.92765255330207"/><cell height="1.0" id="462" width="1.0" x="1473.586511741422" y="289.8078490686973"/><cell height="1.0" id="463" width="1.0" x="1721.7130140620616" y="321.6226480535702"/><cell height="1.0" id="464" width="1.0" x="2656.024000624164" y="457.5539741166699"/><cell height="1.0" id="465" width="1.0" x="1383.649690169021" y="237.7040389531152"/><cell height="1.0" id="466" width="1.0" x="1354.0389840480552" y="394.8114541528372"/><cell height="1.0" id="467" width="1.0" x="1626.8834507699344" y="473.2104656160085"/><cell height="1.0" id="468" width="1.0" x="2442.940018174808" y="473.4791120091762"/><cell height="1.0" id="469" width="1.0" x="1284.7789517296287" y="447.49107515973753"/><cell height="1.0" id="470" width="1.0" x="1299.710391756223" y="510.7899096884536"/><cell height="1.0" id="471" width="1.0" x="1509.0268111569849" y="630.2655245555181"/><cell height="1.0" id="472" width="1.0" x="1531.1174669717004" y="996.5402078558071"/><cell height="1.0" id="473" width="1.0" x="1571.1715928053998" y="1043.8944537541888"/><cell height="1.0" id="474" width="1.0" x="1058.4992983173315" y="1149.5214512085777"/><cell height="1.0" id="475" width="1.0" x="786.1450302049177" y="746.8793147225867"/><cell height="1.0" id="476" width="1.0" x="814.2828906615762" y="907.6823726690783"/><cell height="1.0" id="477" width="1.0" x="1038.7297202647228" y="1034.2761419118006"/><cell height="1.0" id="478" width="1.0" x="1302.190511425397" y="629.4452820322826"/><cell height="1.0" id="479" width="1.0" x="1288.5001222024248" y="759.791724088155"/><cell height="1.0" id="480" width="1.0" x="1482.3408892948883" y="847.4869595926082"/><cell height="1.0" id="481" width="1.0" x="1349.9525043464469" y="1156.0548590121243"/><cell height="1.0" id="482" width="1.0" x="962.6768863365701" y="728.1556057915753"/><cell height="1.0" id="483" width="1.0" x="1026.2753617907479" y="809.4048855236908"/><cell height="1.0" id="484" width="1.0" x="1413.435809573451" y="942.6421716764204"/><cell height="1.0" id="485" width="1.0" x="1413.1347574655647" y="1163.6838461756415"/><cell height="1.0" id="486" width="1.0" x="734.6345049473556" y="1406.6251072510418"/><cell height="1.0" id="487" width="1.0" x="839.3914486115546" y="1355.9019479875647"/><cell height="1.0" id="488" width="1.0" x="1220.3975596964656" y="1123.8175850514508"/><cell height="1.0" id="489" width="1.0" x="994.0832050426052" y="1746.3762786971206"/><cell height="1.0" id="490" width="1.0" x="1139.2158807104026" y="1699.0499172069367"/><cell height="1.0" id="491" width="1.0" x="1410.1704244991847" y="1610.0215014548735"/><cell height="1.0" id="492" width="1.0" x="549.6408420163084" y="1194.844682346559"/><cell height="1.0" id="493" width="1.0" x="859.7311947716419" y="972.4711138859852"/><cell height="1.0" id="494" width="1.0" x="756.7062344474754" y="1097.5732575505651"/><cell height="1.0" id="495" width="1.0" x="156.16191968144273" y="769.273687832243"/><cell height="1.0" id="496" width="1.0" x="276.945747139938" y="898.7506460172515"/><cell height="1.0" id="497" width="1.0" x="792.6516159680668" y="1478.2054959814"/><cell height="1.0" id="498" width="1.0" x="818.7405980977484" y="1514.5946581403232"/><cell height="1.0" id="499" width="1.0" x="899.9050679071037" y="1623.4852793609193"/><cell height="1.0" id="500" width="1.0" x="985.7954835502001" y="1730.9326310853176"/><cell height="1.0" id="501" width="1.0" x="407.31771615070255" y="916.0187263878552"/><cell height="1.0" id="502" width="1.0" x="862.1089446126343" y="1382.893083139571"/><cell height="1.0" id="503" width="1.0" x="1203.3106524809623" y="1798.2619392781962"/><cell height="1.0" id="504" width="1.0" x="946.0728394228706" y="1484.29217781935"/><cell height="1.0" id="505" width="1.0" x="989.1431552820483" y="1538.9696202065616"/><cell height="1.0" id="506" width="1.0" x="1284.0099419150683" y="1920.7605549763175"/><cell height="1.0" id="507" width="1.0" x="1121.8948773083794" y="1680.5770562675866"/><cell height="1.0" id="508" width="1.0" x="1168.986441630655" y="1737.029983675865"/><cell height="1.0" id="509" width="1.0" x="1049.5235919590295" y="1308.245974779581"/><cell height="1.0" id="510" width="1.0" x="1461.7589950349743" y="1744.9405865184312"/><cell height="1.0" id="511" width="1.0" x="1104.5314847521922" y="1351.2299486382767"/><cell height="1.0" id="512" width="1.0" x="1295.3172515102026" y="1500.7838547235842"/><cell height="1.0" id="513" width="1.0" x="1553.7928327716704" y="1828.3801824718817"/><cell height="1.0" id="514" width="1.0" x="1367.6206873329697" y="1552.8623971038005"/><cell height="1.0" id="515" width="1.0" x="1471.1150661754023" y="1696.3582522546799"/><cell height="1.0" id="516" width="1.0" x="1897.1271315414756" y="1435.1069335500342"/><cell height="1.0" id="517" width="1.0" x="2261.0746401437546" y="1424.4401810626714"/><cell height="1.0" id="518" width="1.0" x="1911.4097157426881" y="1322.7983815594278"/><cell height="1.0" id="519" width="1.0" x="1791.390794077824" y="1279.4690736345792"/><cell height="1.0" id="520" width="1.0" x="1640.0968285007461" y="1336.1086034171433"/><cell height="1.0" id="521" width="1.0" x="1409.2870151955885" y="1267.1147018476463"/><cell height="1.0" id="522" width="1.0" x="1270.1801214151365" y="1294.6615691878876"/><cell height="1.0" id="523" width="1.0" x="2362.5154445143226" y="1418.261971274047"/><cell height="1.0" id="524" width="1.0" x="1993.6955182465717" y="1191.9083296282838"/><cell height="1.0" id="525" width="1.0" x="1893.1603639535256" y="1273.7103833595947"/><cell height="1.0" id="526" width="1.0" x="1662.6792131564935" y="1223.454600741658"/><cell height="1.0" id="534" width="1.0" x="2816.2944608985326" y="87.23116258106865"/><cell height="1.0" id="535" width="1.0" x="2676.7896727628167" y="118.46255326960116"/><cell height="1.0" id="536" width="1.0" x="2091.564969478" y="407.7104889114212"/><cell height="1.0" id="537" width="1.0" x="3660.69196611636" y="385.34860443347645"/><cell height="1.0" id="538" width="1.0" x="3618.2990413463017" y="385.34860443347645"/><cell height="1.0" id="539" width="1.0" x="3587.4596399021293" y="385.34860443347645"/><cell height="1.0" id="540" width="1.0" x="3868.25355210492" y="385.34860443347645"/><cell height="1.0" id="541" width="1.0" x="1868.4316191936173" y="459.2825775661528"/><cell height="1.0" id="542" width="1.0" x="1481.974471467498" y="173.48278774050235"/><cell height="1.0" id="543" width="1.0" x="1541.44633113624" y="211.82467518978734"/><cell height="1.0" id="544" width="1.0" x="1640.850823413427" y="292.7931668041096"/><cell height="1.0" id="545" width="1.0" x="3506.8902656621785" y="385.34860443347645"/><cell height="1.0" id="546" width="1.0" x="4056.3970028999734" y="387.63422687180355"/><cell height="1.0" id="547" width="1.0" x="3481.577226118467" y="385.34860443347645"/><cell height="1.0" id="548" width="1.0" x="3639.5491197506467" y="385.34860443347645"/><cell height="1.0" id="549" width="1.0" x="4064.1029172900257" y="386.9647835588498"/><cell height="1.0" id="550" width="1.0" x="3751.165819207392" y="380.40805812547865"/><cell height="1.0" id="551" width="1.0" x="3997.8911134912005" y="390.73069163801"/><cell height="1.0" id="552" width="1.0" x="2051.32528290467" y="503.1213144872662"/><cell height="1.0" id="553" width="1.0" x="2684.4736166352063" y="451.61671570392286"/><cell height="1.0" id="554" width="1.0" x="3200.221391907421" y="385.34860443347645"/><cell height="1.0" id="555" width="1.0" x="3243.3674793005284" y="385.34860443347645"/><cell height="1.0" id="556" width="1.0" x="3551.9523982006062" y="385.34860443347645"/><cell height="1.0" id="557" width="1.0" x="1862.6922564390588" y="553.697493804619"/><cell height="1.0" id="558" width="1.0" x="1416.7221302086164" y="292.20141459258343"/><cell height="1.0" id="559" width="1.0" x="1435.5508638891401" y="337.18946710700925"/><cell height="1.0" id="560" width="1.0" x="1616.5452020623634" y="472.1336557102348"/><cell height="1.0" id="561" width="1.0" x="3271.568388644294" y="385.34860443347645"/><cell height="1.0" id="562" width="1.0" x="3752.83750696412" y="385.34860443347645"/><cell height="1.0" id="563" width="1.0" x="3298.353781589297" y="385.34860443347645"/><cell height="1.0" id="564" width="1.0" x="3185.7909095565933" y="385.34860443347645"/><cell height="1.0" id="565" width="1.0" x="3965.574271896421" y="396.17960232878403"/><cell height="1.0" id="566" width="1.0" x="3362.215306777684" y="389.90316633223273"/><cell height="1.0" id="567" width="1.0" x="3634.484988310993" y="392.9944214754514"/><cell height="1.0" id="568" width="1.0" x="2343.2997893359493" y="385.34860443347645"/><cell height="1.0" id="569" width="1.0" x="2453.2411296385635" y="547.5999226604524"/><cell height="1.0" id="570" width="1.0" x="2106.615527485989" y="620.0157820315037"/><cell height="1.0" id="571" width="1.0" x="2294.712260172557" y="611.169721606153"/><cell height="1.0" id="572" width="1.0" x="2709.190280807842" y="1042.0084036160483"/><cell height="1.0" id="573" width="1.0" x="1613.4653348231463" y="772.8971520282009"/><cell height="1.0" id="574" width="1.0" x="1177.147420250319" y="447.6503048208739"/><cell height="1.0" id="575" width="1.0" x="1411.074700754803" y="497.6294228147244"/><cell height="1.0" id="576" width="1.0" x="1523.219842130039" y="630.315352711751"/><cell height="1.0" id="577" width="1.0" x="2270.8566803493063" y="804.4849071553328"/><cell height="1.0" id="578" width="1.0" x="2863.955649537743" y="1142.2225852623133"/><cell height="1.0" id="579" width="1.0" x="3157.468194602593" y="385.34860443347645"/><cell height="1.0" id="580" width="1.0" x="3107.7698250488834" y="385.34860443347645"/><cell height="1.0" id="581" width="1.0" x="2872.4874473294235" y="1021.9224557813363"/><cell height="1.0" id="582" width="1.0" x="2615.3112504071773" y="901.6946157559094"/><cell height="1.0" id="583" width="1.0" x="2725.3815322209866" y="987.0482402895204"/><cell height="1.0" id="584" width="1.0" x="1535.421505428717" y="1006.011617260585"/><cell height="1.0" id="585" width="1.0" x="1609.8438444829358" y="1092.2856303521748"/><cell height="1.0" id="586" width="1.0" x="1715.7310471281871" y="1566.949792380677"/><cell height="1.0" id="587" width="1.0" x="1135.2407941966185" y="1132.6099307239888"/><cell height="1.0" id="588" width="1.0" x="814.3965453712939" y="740.4373494157157"/><cell height="1.0" id="589" width="1.0" x="842.3085087082593" y="881.28310875531"/><cell height="1.0" id="590" width="1.0" x="1019.6185527690648" y="1049.5828052158574"/><cell height="1.0" id="591" width="1.0" x="1852.232895713441" y="1107.3504435301377"/><cell height="1.0" id="592" width="1.0" x="1735.806082011714" y="1658.725938335674"/><cell height="1.0" id="593" width="1.0" x="1610.7358437667808" y="1144.9135643511504"/><cell height="1.0" id="594" width="1.0" x="1637.9082364565415" y="1305.1204161239827"/><cell height="1.0" id="595" width="1.0" x="1632.613020266199" y="1388.5376364317476"/><cell height="1.0" id="596" width="1.0" x="1641.0309293682972" y="1350.142002031706"/><cell height="1.0" id="597" width="1.0" x="1781.5149730156077" y="1770.4371443369828"/><cell height="1.0" id="598" width="1.0" x="2025.3854895000568" y="1151.2617227579071"/><cell height="1.0" id="599" width="1.0" x="2044.6050593806203" y="985.1761802444785"/><cell height="1.0" id="600" width="1.0" x="1742.993300520266" y="1635.9623251157632"/><cell height="1.0" id="601" width="1.0" x="2147.6193391421507" y="821.1566007741283"/><cell height="1.0" id="602" width="1.0" x="2079.0396177438924" y="939.1363508090594"/><cell height="1.0" id="603" width="1.0" x="2627.4770438721007" y="1267.722026368509"/><cell height="1.0" id="604" width="1.0" x="1566.1567868656482" y="1139.011382861598"/><cell height="1.0" id="605" width="1.0" x="1453.9786432195283" y="607.7036534972742"/><cell height="1.0" id="606" width="1.0" x="1323.1921472518954" y="778.3233585605914"/><cell height="1.0" id="607" width="1.0" x="1432.2998479244293" y="821.7858323652986"/><cell height="1.0" id="608" width="1.0" x="2241.774538995033" y="949.395515085333"/><cell height="1.0" id="609" width="1.0" x="2788.2802156964535" y="1291.606102320287"/><cell height="1.0" id="610" width="1.0" x="2254.794463896728" y="1050.5773929292332"/><cell height="1.0" id="611" width="1.0" x="2791.4342039278717" y="1285.8086917380053"/><cell height="1.0" id="612" width="1.0" x="2481.8441137534637" y="1125.5722770332272"/><cell height="1.0" id="613" width="1.0" x="2684.959545349409" y="1186.3712027604515"/><cell height="1.0" id="614" width="1.0" x="1338.6946822720474" y="1147.8156853819387"/><cell height="1.0" id="615" width="1.0" x="917.410015230921" y="736.9460901855399"/><cell height="1.0" id="616" width="1.0" x="1000.8966550810803" y="821.7560689660531"/><cell height="1.0" id="617" width="1.0" x="1294.2318800284027" y="911.1055794029185"/><cell height="1.0" id="618" width="1.0" x="2089.6185834692487" y="1132.489635125952"/><cell height="1.0" id="619" width="1.0" x="1775.4956360958654" y="1280.8247852533646"/><cell height="1.0" id="620" width="1.0" x="1790.2936236672567" y="1198.9708073172792"/><cell height="1.0" id="621" width="1.0" x="2004.05883946114" y="1195.3573944972065"/><cell height="1.0" id="622" width="1.0" x="1957.1349539456137" y="1178.4391897937737"/><cell height="1.0" id="623" width="1.0" x="2139.763454310209" y="1127.5984388145985"/><cell height="1.0" id="624" width="1.0" x="2153.8993595894117" y="1092.040263703549"/><cell height="1.0" id="625" width="1.0" x="2144.9263770436683" y="1100.2830965848561"/><cell height="1.0" id="626" width="1.0" x="2113.9549667450688" y="1132.829605295034"/><cell height="1.0" id="627" width="1.0" x="1333.0317171703196" y="1212.829415727379"/><cell height="1.0" id="628" width="1.0" x="758.2530135050125" y="1431.5659666182682"/><cell height="1.0" id="629" width="1.0" x="828.8289924377439" y="1338.8674108326163"/><cell height="1.0" id="630" width="1.0" x="1282.1777976011845" y="1095.769705614016"/><cell height="1.0" id="631" width="1.0" x="2256.194418602486" y="1548.0371062492927"/><cell height="1.0" id="632" width="1.0" x="1860.6800758876398" y="1295.4139752760375"/><cell height="1.0" id="633" width="1.0" x="1852.8939149592802" y="1273.5224581869102"/><cell height="1.0" id="634" width="1.0" x="1947.0597565657322" y="1363.269258368115"/><cell height="1.0" id="635" width="1.0" x="1960.717744947452" y="1367.9532578392473"/><cell height="1.0" id="636" width="1.0" x="2379.933095908979" y="1698.2912103900803"/><cell height="1.0" id="637" width="1.0" x="2249.0510334295104" y="1295.0884596928504"/><cell height="1.0" id="638" width="1.0" x="2292.4970578430866" y="1324.1940071188576"/><cell height="1.0" id="639" width="1.0" x="2441.2638323316414" y="1585.3088121070477"/><cell height="1.0" id="640" width="1.0" x="1673.0246568791226" y="1585.3088121070477"/><cell height="1.0" id="641" width="1.0" x="1014.9621560802278" y="1773.9696178304216"/><cell height="1.0" id="642" width="1.0" x="1151.868890844382" y="1719.2318944804442"/><cell height="1.0" id="643" width="1.0" x="1414.700264917346" y="1619.1131541935165"/><cell height="1.0" id="644" width="1.0" x="2343.887417798733" y="1415.8795847742658"/><cell height="1.0" id="645" width="1.0" x="2319.016064865568" y="1414.3050562959165"/><cell height="1.0" id="646" width="1.0" x="2608.9590670794296" y="1607.8641523901088"/><cell height="1.0" id="647" width="1.0" x="2074.7242944042987" y="1555.1506045407718"/><cell height="1.0" id="648" width="1.0" x="2639.5314282376544" y="1669.783388802648"/><cell height="1.0" id="649" width="1.0" x="2605.106652706104" y="1560.4567753792066"/><cell height="1.0" id="650" width="1.0" x="569.5138988111873" y="1220.0030951400731"/><cell height="1.0" id="651" width="1.0" x="492.7634792917414" y="1008.3322570343412"/><cell height="1.0" id="652" width="1.0" x="733.1740090579241" y="1094.0636596568631"/><cell height="1.0" id="653" width="1.0" x="1422.843109770557" y="1219.688205310857"/><cell height="1.0" id="654" width="1.0" x="1713.5094400376806" y="1664.191830703748"/><cell height="1.0" id="655" width="1.0" x="1405.8711694725152" y="1309.345958035102"/><cell height="1.0" id="656" width="1.0" x="1355.2927987267399" y="1286.11888329781"/><cell height="1.0" id="657" width="1.0" x="1076.9460958459133" y="1248.0207859835295"/><cell height="1.0" id="658" width="1.0" x="1443.2611150327766" y="1371.385550597404"/><cell height="1.0" id="659" width="1.0" x="1785.2763136581102" y="1780.67987321386"/><cell height="1.0" id="660" width="1.0" x="1619.8929409300802" y="1525.758749322133"/><cell height="1.0" id="661" width="1.0" x="1708.3513717009514" y="1585.3088121070477"/><cell height="1.0" id="662" width="1.0" x="1735.4863782687626" y="1639.4471555857263"/><cell height="1.0" id="663" width="1.0" x="189.6748388232449" y="791.2103382148703"/><cell height="1.0" id="664" width="1.0" x="242.8715103202647" y="854.1702388406325"/><cell height="1.0" id="665" width="1.0" x="783.5436036164172" y="1466.1932855371656"/><cell height="1.0" id="666" width="1.0" x="1055.3514788572359" y="1871.7738532212365"/><cell height="1.0" id="667" width="1.0" x="827.7469162967556" y="1528.124300006013"/><cell height="1.0" id="668" width="1.0" x="893.098539037137" y="1613.4707350608405"/><cell height="1.0" id="669" width="1.0" x="1124.103667789583" y="1962.5647389508658"/><cell height="1.0" id="670" width="1.0" x="977.3008018231476" y="1715.3939341495848"/><cell height="1.0" id="671" width="1.0" x="1037.6080998985362" y="1815.6198047432167"/><cell height="1.0" id="672" width="1.0" x="398.31328726858135" y="906.5702382530877"/><cell height="1.0" id="673" width="1.0" x="854.1550487351598" y="1373.8710290302424"/><cell height="1.0" id="674" width="1.0" x="1206.2498706839679" y="1812.2520356888322"/><cell height="1.0" id="675" width="1.0" x="922.9163488379185" y="1454.019334112426"/><cell height="1.0" id="676" width="1.0" x="1008.762841726483" y="1560.2424924147545"/><cell height="1.0" id="677" width="1.0" x="1280.7618788427317" y="1903.1607298791396"/><cell height="1.0" id="678" width="1.0" x="2092.719148526433" y="385.34860443347645"/><cell height="1.0" id="679" width="1.0" x="1182.83701021948" y="1763.8593187281194"/><cell height="1.0" id="680" width="1.0" x="1088.307492240107" y="1337.9436659943808"/><cell height="1.0" id="681" width="1.0" x="1471.3721570768407" y="1717.4510676093087"/><cell height="1.0" id="682" width="1.0" x="1195.8052952841613" y="1417.6437633302448"/><cell height="1.0" id="683" width="1.0" x="1281.0418321521936" y="1490.1504739209067"/><cell height="1.0" id="684" width="1.0" x="1546.780482698036" y="1851.4877800640838"/><cell height="1.0" id="685" width="1.0" x="2237.4756478327467" y="385.34860443347645"/><cell height="1.0" id="686" width="1.0" x="1455.9390295336118" y="1669.9223156532294"/><cell height="1.0" id="687" width="1.0" x="2390.00965043151" y="1535.153310483378"/><cell height="1.0" id="688" width="1.0" x="1947.4912405835394" y="1261.6240123170214"/><cell height="1.0" id="689" width="1.0" x="2381.4609727887587" y="1585.3088121070477"/><cell height="1.0" id="690" width="1.0" x="2524.039128154712" y="1585.3088121070477"/><cell height="1.0" id="691" width="1.0" x="2175.630756253581" y="1644.4482893625113"/><cell height="1.0" id="692" width="1.0" x="2318.7701285118164" y="1636.2984047037548"/><cell height="1.0" id="693" width="1.0" x="2593.675481350524" y="1566.2075064857"/><cell height="1.0" id="694" width="1.0" x="1923.0557486869334" y="1458.2560309779865"/><cell height="1.0" id="695" width="1.0" x="2180.648615314957" y="1747.150432936996"/><cell height="1.0" id="696" width="1.0" x="2237.7779583607917" y="1376.4363802512817"/><cell height="1.0" id="697" width="1.0" x="2143.2684127744005" y="1608.8485569991599"/><cell height="1.0" id="698" width="1.0" x="2408.3157736450617" y="1686.843771919735"/><cell height="1.0" id="699" width="1.0" x="2298.6580103161955" y="1435.1372936704142"/><cell height="1.0" id="700" width="1.0" x="2267.769372572666" y="1600.1090213563384"/><cell height="1.0" id="701" width="1.0" x="2753.919132229056" y="1576.092515800406"/><cell height="1.0" id="702" width="1.0" x="2877.337836213737" y="104.63574684523854"/><cell height="1.0" id="703" width="1.0" x="2672.094828001514" y="111.8681031642599"/><cell height="1.0" id="704" width="1.0" x="1981.627887504067" y="424.01640203869476"/><cell height="1.0" id="705" width="1.0" x="3689.0129220209665" y="385.34860443347645"/><cell height="1.0" id="706" width="1.0" x="3569.9191994532976" y="385.34860443347645"/><cell height="1.0" id="707" width="1.0" x="3577.2181305228814" y="385.34860443347645"/><cell height="1.0" id="708" width="1.0" x="3823.3899237751752" y="385.34860443347645"/><cell height="1.0" id="709" width="1.0" x="1816.966801680418" y="439.13855403243224"/><cell height="1.0" id="710" width="1.0" x="1393.3502372242006" y="160.75845147664148"/><cell height="1.0" id="711" width="1.0" x="1497.8021169483081" y="185.20766893894353"/><cell height="1.0" id="712" width="1.0" x="1665.2259850052042" y="294.64449036479425"/><cell height="1.0" id="713" width="1.0" x="3497.3333152138157" y="385.34860443347645"/><cell height="1.0" id="714" width="1.0" x="4019.0364047254902" y="386.9647835588498"/><cell height="1.0" id="715" width="1.0" x="3466.66560335429" y="385.34860443347645"/><cell height="1.0" id="716" width="1.0" x="3543.9176018869825" y="385.34860443347645"/><cell height="1.0" id="717" width="1.0" x="4099.430381295776" y="391.7754070593111"/><cell height="1.0" id="718" width="1.0" x="3725.106131920977" y="385.34860443347645"/><cell height="1.0" id="719" width="1.0" x="4005.5159455440294" y="385.34860443347645"/><cell height="1.0" id="720" width="1.0" x="2657.1078389206173" y="259.00406121872766"/><cell height="1.0" id="721" width="1.0" x="2658.1822193492994" y="385.34860443347645"/><cell height="1.0" id="722" width="1.0" x="3383.1152057323197" y="385.34860443347645"/><cell height="1.0" id="723" width="1.0" x="3392.126006360198" y="385.34860443347645"/><cell height="1.0" id="724" width="1.0" x="3090.6656174872105" y="385.34860443347645"/><cell height="1.0" id="725" width="1.0" x="3447.1186564598192" y="385.34860443347645"/><cell height="1.0" id="726" width="1.0" x="2072.1203060438734" y="385.34860443347645"/><cell height="1.0" id="727" width="1.0" x="1390.5101638478563" y="285.017016373399"/><cell height="1.0" id="728" width="1.0" x="1483.3690324990698" y="378.6992359687307"/><cell height="1.0" id="729" width="1.0" x="1721.9015770908627" y="502.423979629968"/><cell height="1.0" id="730" width="1.0" x="3212.115614036957" y="385.34860443347645"/><cell height="1.0" id="731" width="1.0" x="3697.431528618879" y="385.34860443347645"/><cell height="1.0" id="732" width="1.0" x="3171.939094304116" y="385.34860443347645"/><cell height="1.0" id="733" width="1.0" x="3140.6314470307666" y="385.34860443347645"/><cell height="1.0" id="734" width="1.0" x="4133.736748892856" y="385.34860443347645"/><cell height="1.0" id="735" width="1.0" x="3454.6350943015163" y="385.34860443347645"/><cell height="1.0" id="736" width="1.0" x="3562.127166897621" y="385.34860443347645"/><cell height="1.0" id="737" width="1.0" x="1994.8689643967246" y="594.0047476194455"/><cell height="1.0" id="738" width="1.0" x="2500.176791352412" y="525.3284241309955"/><cell height="1.0" id="739" width="1.0" x="2167.241230803347" y="637.1184658769736"/><cell height="1.0" id="740" width="1.0" x="2129.333225607422" y="785.7021155340157"/><cell height="1.0" id="741" width="1.0" x="3071.44854307845" y="385.34860443347645"/><cell height="1.0" id="742" width="1.0" x="1748.3949329824113" y="707.3086407345047"/><cell height="1.0" id="743" width="1.0" x="1227.7505907723867" y="427.8271533532119"/><cell height="1.0" id="744" width="1.0" x="1329.2101355635732" y="494.5016508874837"/><cell height="1.0" id="745" width="1.0" x="1994.848256556676" y="385.34860443347645"/><cell height="1.0" id="746" width="1.0" x="3114.83837307845" y="385.34860443347645"/><cell height="1.0" id="747" width="1.0" x="3434.43235634989" y="385.34860443347645"/><cell height="1.0" id="748" width="1.0" x="3001.11327240904" y="385.34860443347645"/><cell height="1.0" id="749" width="1.0" x="2934.9487578207086" y="385.34860443347645"/><cell height="1.0" id="750" width="1.0" x="3367.876315213816" y="385.34860443347645"/><cell height="1.0" id="751" width="1.0" x="3227.747078292376" y="385.34860443347645"/><cell height="1.0" id="752" width="1.0" x="3372.8957054721395" y="385.34860443347645"/><cell height="1.0" id="753" width="1.0" x="1864.4932756337603" y="824.3054079832266"/><cell height="1.0" id="754" width="1.0" x="778.9663795697116" y="772.2810705078384"/><cell height="1.0" id="755" width="1.0" x="853.5433505457577" y="834.1639086916887"/><cell height="1.0" id="756" width="1.0" x="1124.3531629502477" y="995.0517621420163"/><cell height="1.0" id="757" width="1.0" x="1660.3612770312761" y="1304.677006633043"/><cell height="1.0" id="758" width="1.0" x="1638.0548553441672" y="1383.1345841045254"/><cell height="1.0" id="759" width="1.0" x="2072.9796513166807" y="832.7403322424775"/><cell height="1.0" id="760" width="1.0" x="2116.6149276253727" y="933.1395805018074"/><cell height="1.0" id="761" width="1.0" x="2652.6198915791215" y="1206.8838586320462"/><cell height="1.0" id="762" width="1.0" x="1578.3627630308931" y="860.0271750038809"/><cell height="1.0" id="763" width="1.0" x="1251.3490407404192" y="655.2455190812259"/><cell height="1.0" id="764" width="1.0" x="2045.7787856702598" y="385.34860443347645"/><cell height="1.0" id="765" width="1.0" x="1447.7188386481153" y="846.0787597559697"/><cell height="1.0" id="766" width="1.0" x="2252.5189994299326" y="966.0480542220495"/><cell height="1.0" id="767" width="1.0" x="2721.412761423066" y="1213.2202799012575"/><cell height="1.0" id="768" width="1.0" x="2237.6846037976684" y="1049.6034138987075"/><cell height="1.0" id="769" width="1.0" x="2279.2436196923936" y="1142.6689189444555"/><cell height="1.0" id="770" width="1.0" x="2827.5212015469115" y="1263.0750415084299"/><cell height="1.0" id="771" width="1.0" x="2521.6453430315178" y="1155.38047965392"/><cell height="1.0" id="772" width="1.0" x="2657.7566783358634" y="1181.7667058525963"/><cell height="1.0" id="773" width="1.0" x="978.6002599288803" y="721.6672790282187"/><cell height="1.0" id="774" width="1.0" x="1036.5508429934907" y="805.0251229195724"/><cell height="1.0" id="775" width="1.0" x="1391.9818198108755" y="949.4574704864455"/><cell height="1.0" id="776" width="1.0" x="1758.4889503847207" y="1284.3050106129015"/><cell height="1.0" id="777" width="1.0" x="2010.930916031908" y="1194.542098764229"/><cell height="1.0" id="778" width="1.0" x="720.0686123680496" y="1386.7137720049022"/><cell height="1.0" id="779" width="1.0" x="833.4550887927605" y="1346.6137260182086"/><cell height="1.0" id="780" width="1.0" x="1242.2074825921984" y="1117.4386219201442"/><cell height="1.0" id="781" width="1.0" x="1876.7912671972763" y="1282.5143592488612"/><cell height="1.0" id="782" width="1.0" x="1966.9666624897732" y="1351.6176476559435"/><cell height="1.0" id="783" width="1.0" x="1015.4140533624861" y="1780.090494688132"/><cell height="1.0" id="784" width="1.0" x="1148.0289039592417" y="1714.8143236226942"/><cell height="1.0" id="785" width="1.0" x="1396.6324766710682" y="1585.3088121070477"/><cell height="1.0" id="786" width="1.0" x="2328.5885925994075" y="1374.4028030507657"/><cell height="1.0" id="787" width="1.0" x="588.1741126817274" y="1247.256259999549"/><cell height="1.0" id="788" width="1.0" x="654.4821327507985" y="1166.8164417739338"/><cell height="1.0" id="789" width="1.0" x="820.8189099722006" y="1090.2023298289648"/><cell height="1.0" id="790" width="1.0" x="1312.6356978095023" y="1295.983113530307"/><cell height="1.0" id="791" width="1.0" x="1429.2134611398765" y="1398.227445217026"/><cell height="1.0" id="792" width="1.0" x="169.34314862917427" y="784.4972882282461"/><cell height="1.0" id="793" width="1.0" x="224.83460449032674" y="848.1940376870684"/><cell height="1.0" id="794" width="1.0" x="805.9243005464466" y="1493.9479911826197"/><cell height="1.0" id="795" width="1.0" x="1053.6149047525353" y="1849.3117223760096"/><cell height="1.0" id="796" width="1.0" x="811.0856180052563" y="1499.9620034996788"/><cell height="1.0" id="797" width="1.0" x="889.9460894100262" y="1606.0585181136394"/><cell height="1.0" id="798" width="1.0" x="1119.7804193304264" y="1970.0121936257033"/><cell height="1.0" id="799" width="1.0" x="1768.3248632319328" y="385.34860443347645"/><cell height="1.0" id="800" width="1.0" x="1049.6786553085226" y="1831.6360233988826"/><cell height="1.0" id="801" width="1.0" x="405.99056077579746" y="930.0952549079468"/><cell height="1.0" id="802" width="1.0" x="885.4930209284191" y="1405.5843021156875"/><cell height="1.0" id="803" width="1.0" x="1194.5904069567114" y="1784.154161455514"/><cell height="1.0" id="804" width="1.0" x="916.5977555809127" y="1445.0208947437181"/><cell height="1.0" id="805" width="1.0" x="984.9373828470298" y="1531.0398098398773"/><cell height="1.0" id="806" width="1.0" x="1285.0007938746542" y="1929.6452184164555"/><cell height="1.0" id="807" width="1.0" x="2029.8641345834149" y="385.34860443347645"/><cell height="1.0" id="808" width="1.0" x="1170.4008119942264" y="1744.716775802497"/><cell height="1.0" id="809" width="1.0" x="1084.9383878871163" y="1331.1379250378527"/><cell height="1.0" id="810" width="1.0" x="1446.8052881118706" y="1724.7810441741221"/><cell height="1.0" id="811" width="1.0" x="1111.3737535514213" y="1359.310310112859"/><cell height="1.0" id="812" width="1.0" x="1234.1459404798843" y="1453.6202086129606"/><cell height="1.0" id="813" width="1.0" x="1544.9129966314208" y="1842.198724142861"/><cell height="1.0" id="814" width="1.0" x="1893.5527042880622" y="832.5713532513128"/><cell height="1.0" id="815" width="1.0" x="1455.2923714235546" y="1663.4473424722482"/><cell height="1.0" id="816" width="1.0" x="576.8665477232676" y="1228.7044297423565"/><cell height="1.0" id="817" width="1.0" x="440.78919920289553" y="905.1468869510009"/></constraints></graphical></assignment></model>