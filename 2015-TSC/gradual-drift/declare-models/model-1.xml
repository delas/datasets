<?xml version="1.0" encoding="UTF-8"?><model><assignment language="ConDec" name="new model"><activitydefinitions><activity id="1" name="Register-complete"/><activity id="2" name="Create questionnaire-complete"/><activity id="3" name="Decide low/high-complete"/><activity id="4" name="Send questionnaire-complete"/><activity id="5" name="High claim split-complete"/><activity id="6" name="Skip response-complete"/><activity id="7" name="High Insurance Check-complete"/><activity id="8" name="High Medical History Check-complete"/><activity id="9" name="Contact Hospital-complete"/><activity id="10" name="High claim join-complete"/><activity id="11" name="Prepare Notification-complete"/><activity id="12" name="By Phone-complete"/><activity id="13" name="Notification sent-complete"/><activity id="14" name="Archive-complete"/><activity id="15" name="Low claim split-complete"/><activity id="16" name="Low Medical History Check-complete"/><activity id="17" name="Low Insurance Check-complete"/><activity id="18" name="Low claim join-complete"/><activity id="19" name="By Post-complete"/><activity id="20" name="By Email-complete"/><activity id="21" name="Receive response-complete"/></activitydefinitions><constraintdefinitions><constraint id="1" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="2" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="3" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="4" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="5" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="6" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="7" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="8" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="9" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="10" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="11" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="12" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="13" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="14" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="15" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="16" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="17" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="18" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="19" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="20" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="21" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="22" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="23" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="24" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="25" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="26" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="27" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="28" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="29" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="30" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="31" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="32" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="33" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="34" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="35" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="36" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="37" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="38" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="39" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="40" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="41" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="42" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="43" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="44" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="45" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="46" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="47" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="48" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="49" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="50" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="51" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="52" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="53" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="54" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="55" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="56" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="57" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="58" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="59" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="60" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="61" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="62" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="63" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="64" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="65" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="66" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="67" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="68" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="69" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="70" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="71" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="72" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="73" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="74" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="75" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="76" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="77" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="78" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="79" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="80" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="81" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="82" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="83" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="84" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="85" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="86" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="87" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="88" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="89" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="90" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="91" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="92" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="93" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="94" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="95" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="96" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="97" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="98" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="99" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="100" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="101" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="102" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="103" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="104" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="105" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="106" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="107" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="108" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="109" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="110" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="111" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="112" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="113" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="114" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="115" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="116" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="117" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="118" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="119" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="120" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="121" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="122" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="123" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="124" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="125" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="126" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="127" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="128" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="129" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="130" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="131" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="132" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="133" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="134" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="135" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="136" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="137" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="138" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="139" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="140" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="141" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="142" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="143" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="144" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="145" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="146" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="147" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="148" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="149" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="150" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="151" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="152" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="153" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="154" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="155" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="156" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="157" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="158" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="159" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="160" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="161" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="162" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="163" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="164" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="165" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="166" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="167" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="168" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="169" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="170" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="171" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="172" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="173" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="174" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="175" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="176" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="177" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="178" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="179" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="180" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="181" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="182" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="183" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="184" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="185" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="186" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="187" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="188" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="189" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="190" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="191" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="192" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="193" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="194" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="195" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="196" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="197" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="198" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="199" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="200" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="201" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="202" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="203" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="204" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="205" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="206" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="207" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="208" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="209" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="210" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="211" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="212" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="213" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="214" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="215" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="216" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="217" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="218" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="219" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="220" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="221" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="222" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="223" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="224" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="225" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="226" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="227" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="228" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="229" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="230" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="231" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="232" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="233" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="234" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="235" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="236" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="237" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="238" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="239" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="240" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="241" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="242" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="243" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="244" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="245" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="246" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="247" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="248" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="249" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="250" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="251" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="252" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="253" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="254" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="255" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="256" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="257" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="258" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="259" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="260" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="261" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="262" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="263" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="264" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="265" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="266" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="267" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="268" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="269" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="270" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="271" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="272" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="273" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="274" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="275" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="276" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="277" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="278" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="279" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="280" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="281" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="282" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="283" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="284" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="285" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="286" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="287" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="288" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="289" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="290" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="291" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="292" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="293" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="294" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="295" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="296" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="297" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="298" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="299" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="300" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="301" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="302" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="303" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="304" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="305" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="306" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="307" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="308" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="309" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="310" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="311" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="312" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="313" mandatory="true"><condition></condition><name>chain precedence</name><template><description>B can be executed only directly after A.</description><display>chain precedence</display><name>chain precedence</name><text>[]( ( X( "B" ) -&gt; "A") )/\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="314" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="315" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="316" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="317" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="318" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="319" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="320" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="321" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="322" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="323" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="324" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="325" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="326" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="327" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="328" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="329" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="330" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="331" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="332" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="333" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="334" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="335" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="336" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="337" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="338" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="339" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="340" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="341" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="342" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="343" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="344" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="345" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="346" mandatory="true"><condition></condition><name>init</name><template><description>Each instance has to start with execution of &lt;b&gt;Register-complete&lt;/b&gt;.</description><display>init</display><name>init</name><text>( ( "A.started" \/ "A.cancelled" ) W  "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either:
&lt;ul&gt;
&lt;li&gt;none of the tasks in this instance were executed yet, or&lt;/li&gt;
&lt;li&gt;the first executed task is &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because the first executed task 
in this instance was not &lt;b&gt;Register-complete&lt;/b&gt;.  &lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="347" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;High claim split-complete&lt;/b&gt; or &lt;b&gt;Low claim split-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="348" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;High claim split-complete&lt;/b&gt; or &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="349" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;High claim split-complete&lt;/b&gt; or &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="350" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;High claim split-complete&lt;/b&gt; or &lt;b&gt;Low claim join-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="351" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Skip response-complete&lt;/b&gt; or &lt;b&gt;Receive response-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="352" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;High Insurance Check-complete&lt;/b&gt; or &lt;b&gt;Low claim split-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="353" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;High Insurance Check-complete&lt;/b&gt; or &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="354" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;High Insurance Check-complete&lt;/b&gt; or &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="355" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;High Insurance Check-complete&lt;/b&gt; or &lt;b&gt;Low claim join-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="356" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;High Medical History Check-complete&lt;/b&gt; or &lt;b&gt;Low claim split-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="357" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;High Medical History Check-complete&lt;/b&gt; or &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="358" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;High Medical History Check-complete&lt;/b&gt; or &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="359" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;High Medical History Check-complete&lt;/b&gt; or &lt;b&gt;Low claim join-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="360" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Contact Hospital-complete&lt;/b&gt; or &lt;b&gt;Low claim split-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="361" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Contact Hospital-complete&lt;/b&gt; or &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="362" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Contact Hospital-complete&lt;/b&gt; or &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="363" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Contact Hospital-complete&lt;/b&gt; or &lt;b&gt;Low claim join-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="364" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;High claim join-complete&lt;/b&gt; or &lt;b&gt;Low claim split-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="365" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;High claim join-complete&lt;/b&gt; or &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="366" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;High claim join-complete&lt;/b&gt; or &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="367" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;High claim join-complete&lt;/b&gt; or &lt;b&gt;Low claim join-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="368" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Create questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Create questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="369" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Decide low/high-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Decide low/high-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="370" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="371" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High claim split-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;High claim split-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High claim split-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High claim split-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High claim split-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="372" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Skip response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Skip response-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Skip response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="373" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="374" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="375" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="376" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="377" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="378" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="379" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="380" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="381" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim split-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Low claim split-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim split-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="382" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="383" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="384" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="385" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="386" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="387" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Receive response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Receive response-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Receive response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="388" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="389" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High claim split-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;High claim split-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High claim split-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High claim split-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High claim split-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="390" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Skip response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Skip response-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Skip response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="391" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="392" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="393" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="394" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="395" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="396" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="397" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="398" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="399" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim split-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low claim split-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim split-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="400" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="401" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="402" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="403" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="404" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="405" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Receive response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Receive response-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Receive response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="406" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="407" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High claim split-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;High claim split-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High claim split-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High claim split-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High claim split-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="408" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Skip response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Skip response-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Skip response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="409" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="410" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="411" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="412" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="413" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="414" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="415" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="416" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="417" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim split-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Low claim split-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim split-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="418" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="419" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="420" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="421" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="422" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="423" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Receive response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Receive response-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Receive response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="424" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Skip response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Skip response-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Skip response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="425" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="426" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="427" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="428" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="429" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="430" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="431" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="432" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="433" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="434" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="435" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="436" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="437" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="438" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Receive response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Receive response-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Receive response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="439" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High claim split-complete&lt;/b&gt;. &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;High claim split-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;High claim split-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="440" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High claim split-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;High claim split-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;High claim split-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="441" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High claim split-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;High claim split-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;High claim split-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="442" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High claim split-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;High claim split-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;High claim split-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="443" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High Insurance Check-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;High Insurance Check-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="444" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High Medical History Check-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;High Medical History Check-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="445" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Contact Hospital-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Contact Hospital-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="446" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="447" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="448" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="449" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="450" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="451" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Notification sent-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Notification sent-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="452" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="453" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="454" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="455" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="456" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="457" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="458" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Decide low/high-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="459" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="460" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="461" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="462" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="463" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="464" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="465" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="466" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="467" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; is executed, activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="468" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="469" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="470" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="471" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="472" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="473" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="474" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="475" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="476" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="477" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;High claim join-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;High claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;High claim join-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;High claim join-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;High claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="478" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="479" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="480" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="481" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Skip response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Skip response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="482" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Skip response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Skip response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="483" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Skip response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Skip response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="484" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;High claim join-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;High claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;High claim join-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;High claim join-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;High claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="485" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="486" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="487" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="488" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;High claim join-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;High claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;High claim join-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;High claim join-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;High claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="489" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="490" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="491" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="492" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Contact Hospital-complete&lt;/b&gt; is executed, activity &lt;b&gt;High claim join-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;High claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;High claim join-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, and task &lt;b&gt;High claim join-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;High claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="493" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Contact Hospital-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="494" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Contact Hospital-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="495" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Contact Hospital-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="496" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High claim join-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High claim join-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High claim join-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High claim join-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="497" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High claim join-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High claim join-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High claim join-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High claim join-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="498" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High claim join-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High claim join-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High claim join-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High claim join-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High claim join-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High claim join-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="499" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="500" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="501" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="502" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="503" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="504" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim join-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim join-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="505" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Receive response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Receive response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="506" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Phone-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Phone-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Phone-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="507" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Phone-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Phone-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Phone-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="508" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Notification sent-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Notification sent-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="509" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="510" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="511" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="512" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim join-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim join-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="513" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Post-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Post-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Post-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Post-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Post-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="514" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Email-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Email-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Email-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="515" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Receive response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Receive response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="516" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="517" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="518" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="519" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim join-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim join-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="520" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Post-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Post-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Post-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Post-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Post-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="521" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Email-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Email-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Email-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="522" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Receive response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Receive response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="523" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="524" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="525" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low claim join-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="526" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low claim join-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="527" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low claim join-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="528" mandatory="true"><condition></condition><name>chain response</name><template><description>After A the  next one has to be B.</description><display>chain response</display><name>chain response</name><text>[] ( ( "A"  -&gt; X( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="529" mandatory="true"><condition></condition><name>chain response</name><template><description>After A the  next one has to be B.</description><display>chain response</display><name>chain response</name><text>[] ( ( "A"  -&gt; X( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="530" mandatory="true"><condition></condition><name>chain response</name><template><description>After A the  next one has to be B.</description><display>chain response</display><name>chain response</name><text>[] ( ( "A"  -&gt; X( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="531" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Register-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="532" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Create questionnaire-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="533" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Decide low/high-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="534" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="535" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="536" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Notification sent-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Notification sent-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="537" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Archive-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Archive-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Archive-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="538" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="539" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="540" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="541" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="542" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="543" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="544" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="545" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="546" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="547" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="548" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="549" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="550" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="551" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="552" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="553" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="554" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="555" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="556" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="557" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="558" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="559" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="560" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="561" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="562" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="563" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="564" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="565" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="566" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="567" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="568" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="569" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="570" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="571" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="572" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="573" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="574" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="575" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="576" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="577" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="578" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="579" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="580" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="581" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="582" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="583" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="584" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="585" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="586" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="587" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="588" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="589" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="590" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="591" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="592" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="593" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="594" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="595" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="596" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="597" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="598" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="599" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="600" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="601" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="602" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="603" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="604" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="605" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="606" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="607" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="608" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="609" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="610" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="611" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="612" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="613" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="614" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="615" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="616" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="617" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="618" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="619" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="620" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="621" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="622" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="623" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="624" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="625" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="626" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="627" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="628" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="629" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="630" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="631" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="632" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="633" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="634" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="635" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="636" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="637" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="638" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="639" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="640" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="641" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="642" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="643" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="644" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="645" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="646" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="647" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="648" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="649" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="650" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="651" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="652" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="653" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="654" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="655" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="656" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="657" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="658" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="659" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="660" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="661" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="662" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="663" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="664" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="665" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="666" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="667" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="668" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="669" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="670" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="671" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="672" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="673" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="674" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="675" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="676" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="677" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="678" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="679" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="680" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="681" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="682" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="683" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="684" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="685" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="686" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="687" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="688" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="689" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="690" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="691" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="692" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="693" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="694" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="695" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="696" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="697" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="698" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="699" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="700" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="701" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="702" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="703" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="704" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="705" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="706" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="707" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="708" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="709" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="710" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="711" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="712" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="713" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="714" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="715" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="716" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="717" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="718" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="719" mandatory="true"><condition></condition><name>chain succession</name><template><description>A and B can happen only next to each other.</description><display>chain succession</display><name>chain succession</name><text>[](  ( "A" = X( "B" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="720" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.
and
2. &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Create questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="721" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Decide low/high-complete&lt;/b&gt;.
and
2. &lt;b&gt;Decide low/high-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Decide low/high-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="722" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.
and
2. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="723" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.
and
2. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="724" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="725" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="726" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Create questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.
and
2. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="727" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Create questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.
and
2. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="728" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Create questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="729" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Create questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="730" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Decide low/high-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.
and
2. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="731" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Decide low/high-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.
and
2. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="732" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Decide low/high-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="733" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Decide low/high-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="734" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Send questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.
and
2. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="735" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Send questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="736" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Send questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="737" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;High claim split-complete&lt;/b&gt; there has to be at least one &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.
and
2. &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High claim split-complete&lt;/b&gt;. &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;High claim split-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="738" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;High claim split-complete&lt;/b&gt; there has to be at least one &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.
and
2. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High claim split-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;High claim split-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="739" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;High claim split-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.
and
2. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High claim split-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;High claim split-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="740" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;High claim split-complete&lt;/b&gt; there has to be at least one &lt;b&gt;High claim join-complete&lt;/b&gt;.
and
2. &lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High claim split-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;High claim split-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="741" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;High Insurance Check-complete&lt;/b&gt; there has to be at least one &lt;b&gt;High claim join-complete&lt;/b&gt;.
and
2. &lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High Insurance Check-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;High Insurance Check-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="742" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;High Medical History Check-complete&lt;/b&gt; there has to be at least one &lt;b&gt;High claim join-complete&lt;/b&gt;.
and
2. &lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High Medical History Check-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;High Medical History Check-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="743" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Contact Hospital-complete&lt;/b&gt; there has to be at least one &lt;b&gt;High claim join-complete&lt;/b&gt;.
and
2. &lt;b&gt;High claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Contact Hospital-complete&lt;/b&gt;. &lt;b&gt;High claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Contact Hospital-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="744" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Prepare Notification-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="745" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Prepare Notification-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="746" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Notification sent-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Notification sent-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Notification sent-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="747" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low claim split-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="748" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low claim split-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="749" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low claim split-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low claim join-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="750" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low claim join-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="751" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low claim join-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="752" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="753" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="754" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="755" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="756" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="757" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="758" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="759" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="760" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="761" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="762" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="763" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="764" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="765" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="766" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="767" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="768" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="769" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="770" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="771" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="772" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="773" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="774" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="775" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="776" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="777" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="778" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="779" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="780" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="781" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="782" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="783" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="784" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="785" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="786" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="787" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="788" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="789" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="790" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="791" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="792" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="793" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="794" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="795" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="796" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="797" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="798" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="799" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="800" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="801" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="802" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="803" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="804" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="805" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="806" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="807" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="808" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="809" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="810" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="811" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="812" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="813" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="814" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="815" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="816" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="817" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="818" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="819" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="820" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="821" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="822" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="823" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="824" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="825" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="826" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="827" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="828" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="829" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="830" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="831" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="832" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="833" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="834" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="835" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="836" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="837" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="838" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="839" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="840" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="841" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="842" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="843" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="844" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="845" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="846" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="847" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="848" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="849" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="850" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="851" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="852" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="853" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="854" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="855" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="856" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="857" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="858" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="859" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="860" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="861" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="862" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="863" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="864" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="865" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="866" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="867" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="868" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="869" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="870" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="871" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="872" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="873" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="874" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="875" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="876" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="877" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="878" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="879" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="880" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="881" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="882" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="883" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="884" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="885" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="886" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="887" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="888" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="889" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="890" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="891" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="892" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="893" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="894" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="895" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="896" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="897" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="898" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="899" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="900" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="901" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="902" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="903" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="904" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="905" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="906" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="907" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="908" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="909" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="910" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="911" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="912" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="913" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="914" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="915" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="916" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="917" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="918" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="919" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="920" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="921" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="922" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="923" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="924" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="925" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="926" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="927" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="928" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="929" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="930" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="931" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="932" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="933" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="934" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="935" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="936" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="937" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="938" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="939" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="940" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="941" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="942" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="943" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="944" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="945" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="946" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="947" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="948" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="949" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="950" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="951" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="952" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="953" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="954" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="955" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="956" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="957" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="958" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="959" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="960" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="961" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="962" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="963" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="964" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="965" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="966" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="967" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="968" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="969" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="970" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="971" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="972" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="973" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="974" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="975" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="976" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="977" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="978" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="979" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="980" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="981" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="982" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="983" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="984" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="985" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="986" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="987" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="988" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="989" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="990" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="991" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="992" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="993" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="994" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="995" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="996" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="997" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="998" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="999" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="1000" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint></constraintdefinitions><graphical><activities><cell height="30.0" id="1" width="130.0" x="3085.8012436099134" y="0.0"/><cell height="30.0" id="2" width="190.0" x="2436.1687330614127" y="232.12896189852623"/><cell height="30.0" id="3" width="165.0" x="2085.6582042561595" y="288.8059702509477"/><cell height="30.0" id="4" width="180.0" x="1753.0245395599918" y="613.2807825927407"/><cell height="30.0" id="5" width="170.0" x="1664.047089700161" y="2278.6992459476114"/><cell height="30.0" id="6" width="155.0" x="0.0" y="1485.4032293865012"/><cell height="30.0" id="7" width="190.0" x="70.53493940467558" y="1586.0937083438757"/><cell height="30.0" id="8" width="220.0" x="150.57716645502046" y="1632.279466573561"/><cell height="30.0" id="9" width="170.0" x="394.1797017865596" y="1608.1817047078157"/><cell height="30.0" id="10" width="165.0" x="633.240992834637" y="1443.823327367851"/><cell height="30.0" id="11" width="190.0" x="1436.38944195261" y="1242.0193544945578"/><cell height="30.0" id="12" width="130.0" x="2162.8471334998735" y="845.5777565617254"/><cell height="30.0" id="13" width="175.0" x="2225.179091117727" y="1435.262615479799"/><cell height="30.0" id="14" width="125.0" x="2604.7532682420356" y="2004.0486521738435"/><cell height="30.0" id="15" width="165.0" x="947.898415519228" y="1731.095429394923"/><cell height="30.0" id="16" width="215.0" x="1107.8071503411225" y="1809.4007718708872"/><cell height="30.0" id="17" width="185.0" x="1312.915619296512" y="1889.4007718708872"/><cell height="30.0" id="18" width="160.0" x="1220.330235808311" y="1434.7283919226106"/><cell height="30.0" id="19" width="125.0" x="2655.379238167327" y="1250.1890018361821"/><cell height="30.0" id="20" width="130.0" x="3062.8928519115098" y="1863.891309627898"/><cell height="30.0" id="21" width="170.0" x="2988.743938430878" y="1313.9590589313912"/></activities><constraints><cell height="1.0" id="1" width="1.0" x="2718.4786015195123" y="182.27386455194025"/><cell height="1.0" id="2" width="1.0" x="2771.494190049211" y="104.65376749788845"/><cell height="1.0" id="3" width="1.0" x="2155.0492998662153" y="194.4166792767873"/><cell height="1.0" id="4" width="1.0" x="3709.640258441829" y="465.4842987663069"/><cell height="1.0" id="5" width="1.0" x="1134.921916442272" y="157.86085933067278"/><cell height="1.0" id="6" width="1.0" x="1214.4487143233382" y="184.4437136085416"/><cell height="1.0" id="7" width="1.0" x="4580.261923810728" y="460.2626154797989"/><cell height="1.0" id="8" width="1.0" x="4569.448930197747" y="460.2626154797989"/><cell height="1.0" id="9" width="1.0" x="4585.949245046046" y="460.2626154797989"/><cell height="1.0" id="10" width="1.0" x="4621.699810063399" y="460.2626154797989"/><cell height="1.0" id="11" width="1.0" x="4742.894732177664" y="460.2626154797989"/><cell height="1.0" id="12" width="1.0" x="3465.2900697300843" y="471.5855582710789"/><cell height="1.0" id="13" width="1.0" x="4739.7016808393" y="468.60349342277004"/><cell height="1.0" id="14" width="1.0" x="2337.509775581256" y="785.5530219147938"/><cell height="1.0" id="15" width="1.0" x="3368.2315958138483" y="460.2626154797991"/><cell height="1.0" id="16" width="1.0" x="2629.824945620502" y="881.8682331630491"/><cell height="1.0" id="17" width="1.0" x="4629.7362431332895" y="460.2626154797989"/><cell height="1.0" id="18" width="1.0" x="3669.8489853874676" y="460.2626154797991"/><cell height="1.0" id="19" width="1.0" x="4825.482038360854" y="461.6080884358644"/><cell height="1.0" id="20" width="1.0" x="4666.184084032936" y="467.89457121499044"/><cell height="1.0" id="21" width="1.0" x="2349.171786248569" y="284.3182851230833"/><cell height="1.0" id="22" width="1.0" x="4551.0953187736195" y="460.2626154797989"/><cell height="1.0" id="23" width="1.0" x="3499.206934704362" y="460.2626154797991"/><cell height="1.0" id="24" width="1.0" x="1200.651701199146" y="218.31309913989202"/><cell height="1.0" id="25" width="1.0" x="1226.7307103172511" y="261.150329020309"/><cell height="1.0" id="26" width="1.0" x="1324.0458901899583" y="283.83939088031406"/><cell height="1.0" id="27" width="1.0" x="1344.0462855451178" y="302.8687085923981"/><cell height="1.0" id="28" width="1.0" x="4505.87973672175" y="460.2626154797989"/><cell height="1.0" id="29" width="1.0" x="4533.80764132028" y="460.2626154797989"/><cell height="1.0" id="30" width="1.0" x="4522.442038775687" y="460.2626154797989"/><cell height="1.0" id="31" width="1.0" x="4596.349028646989" y="460.2626154797989"/><cell height="1.0" id="32" width="1.0" x="3745.826403302523" y="461.7414461086364"/><cell height="1.0" id="33" width="1.0" x="4510.944622583074" y="460.2626154797989"/><cell height="1.0" id="34" width="1.0" x="1631.0721543937352" y="1021.0796395775777"/><cell height="1.0" id="35" width="1.0" x="2055.121721279962" y="1066.289463648172"/><cell height="1.0" id="36" width="1.0" x="4486.506412204197" y="460.2626154797989"/><cell height="1.0" id="37" width="1.0" x="3357.81462265627" y="460.2626154797991"/><cell height="1.0" id="38" width="1.0" x="3764.923895473698" y="460.2626154797991"/><cell height="1.0" id="39" width="1.0" x="3610.6314214916997" y="461.00236888437604"/><cell height="1.0" id="40" width="1.0" x="1971.341836208243" y="501.8635107146868"/><cell height="1.0" id="41" width="1.0" x="4554.248316491468" y="460.2626154797989"/><cell height="1.0" id="42" width="1.0" x="988.720488450285" y="745.1563691691555"/><cell height="1.0" id="43" width="1.0" x="963.5668214717447" y="844.3450732807573"/><cell height="1.0" id="44" width="1.0" x="955.8961312585849" y="862.8949740609551"/><cell height="1.0" id="45" width="1.0" x="1107.4294895055646" y="835.8052015476459"/><cell height="1.0" id="46" width="1.0" x="1310.8862512550822" y="803.2670471722236"/><cell height="1.0" id="47" width="1.0" x="1854.7119090118704" y="807.9431841598356"/><cell height="1.0" id="48" width="1.0" x="4492.062185060007" y="460.2626154797989"/><cell height="1.0" id="49" width="1.0" x="4416.13198768092" y="460.2626154797989"/><cell height="1.0" id="50" width="1.0" x="4703.181773831625" y="460.2626154797989"/><cell height="1.0" id="51" width="1.0" x="4453.220239956573" y="460.2626154797989"/><cell height="1.0" id="52" width="1.0" x="4464.8683616176695" y="460.2626154797989"/><cell height="1.0" id="53" width="1.0" x="4426.528595334989" y="460.2626154797989"/><cell height="1.0" id="54" width="1.0" x="4430.572662852109" y="460.2626154797989"/><cell height="1.0" id="55" width="1.0" x="4498.944622583074" y="460.2626154797989"/><cell height="1.0" id="56" width="1.0" x="4802.70746526447" y="460.2626154797989"/><cell height="1.0" id="57" width="1.0" x="4602.658531464797" y="460.2626154797989"/><cell height="1.0" id="58" width="1.0" x="4435.367389126832" y="460.2626154797989"/><cell height="1.0" id="59" width="1.0" x="902.8335257029224" y="1011.9835864906154"/><cell height="1.0" id="60" width="1.0" x="854.3567167789005" y="1082.9262152937372"/><cell height="1.0" id="61" width="1.0" x="848.4718802086551" y="1093.1325285315356"/><cell height="1.0" id="62" width="1.0" x="1016.9624963882528" y="1050.6625617594327"/><cell height="1.0" id="63" width="1.0" x="1258.6362661817952" y="1062.6045648664158"/><cell height="1.0" id="64" width="1.0" x="1594.9267100713137" y="1050.1874723136134"/><cell height="1.0" id="65" width="1.0" x="1997.4826367766027" y="751.7970474602653"/><cell height="1.0" id="66" width="1.0" x="2038.8774638359237" y="1075.9266396257442"/><cell height="1.0" id="67" width="1.0" x="4636.096417717468" y="460.2626154797989"/><cell height="1.0" id="68" width="1.0" x="1225.5368661596813" y="1213.8327819900337"/><cell height="1.0" id="69" width="1.0" x="3091.9718758318486" y="460.2626154797989"/><cell height="1.0" id="70" width="1.0" x="3142.5148197889007" y="460.2626154797989"/><cell height="1.0" id="71" width="1.0" x="1523.9869028306784" y="1009.1261572404932"/><cell height="1.0" id="72" width="1.0" x="3275.0196317493314" y="460.2626154797989"/><cell height="1.0" id="73" width="1.0" x="4790.526741277645" y="460.2626154797989"/><cell height="1.0" id="74" width="1.0" x="3492.422325611113" y="460.2626154797989"/><cell height="1.0" id="75" width="1.0" x="4440.171322620822" y="460.2626154797989"/><cell height="1.0" id="76" width="1.0" x="2057.6404212827183" y="1875.9497357342225"/><cell height="1.0" id="77" width="1.0" x="1998.0061743153465" y="2212.8377302536123"/><cell height="1.0" id="78" width="1.0" x="1356.7677582318133" y="2068.8628473956433"/><cell height="1.0" id="79" width="1.0" x="1464.133624831019" y="2089.9935490443877"/><cell height="1.0" id="80" width="1.0" x="1592.4258061481883" y="2079.014616648783"/><cell height="1.0" id="81" width="1.0" x="1537.540028731626" y="1949.3717859408366"/><cell height="1.0" id="82" width="1.0" x="778.0794453820648" y="1290.3919138661738"/><cell height="1.0" id="83" width="1.0" x="1125.6492832518406" y="1132.7442668759686"/><cell height="1.0" id="84" width="1.0" x="3015.8566365218985" y="460.2626154797989"/><cell height="1.0" id="85" width="1.0" x="2964.37104588884" y="460.2626154797989"/><cell height="1.0" id="86" width="1.0" x="879.4117088740144" y="1303.4474266188915"/><cell height="1.0" id="87" width="1.0" x="857.7632693096297" y="1321.6848195427078"/><cell height="1.0" id="88" width="1.0" x="2875.5619876809214" y="460.2626154797989"/><cell height="1.0" id="89" width="1.0" x="456.8267335205661" y="1976.0510005803853"/><cell height="1.0" id="90" width="1.0" x="598.8673515947827" y="2388.1650543755204"/><cell height="1.0" id="91" width="1.0" x="592.6233819990692" y="2210.9539399770247"/><cell height="1.0" id="92" width="1.0" x="604.6977850350983" y="1445.4906929966319"/><cell height="1.0" id="93" width="1.0" x="811.8017119255964" y="1367.5249252176445"/><cell height="1.0" id="94" width="1.0" x="996.3511778084804" y="2176.4762829521756"/><cell height="1.0" id="95" width="1.0" x="3010.8961673380286" y="460.2626154797989"/><cell height="1.0" id="96" width="1.0" x="616.3495301055608" y="1794.644134245622"/><cell height="1.0" id="97" width="1.0" x="676.1518185053234" y="1880.9519068417708"/><cell height="1.0" id="98" width="1.0" x="814.6963615950609" y="2023.9272570731032"/><cell height="1.0" id="99" width="1.0" x="851.8440274740084" y="1542.771650519464"/><cell height="1.0" id="100" width="1.0" x="905.4323741595437" y="1497.94575523298"/><cell height="1.0" id="101" width="1.0" x="1127.4900160650363" y="2049.623291547732"/><cell height="1.0" id="102" width="1.0" x="2938.7097915762124" y="460.2626154797989"/><cell height="1.0" id="103" width="1.0" x="763.9335430087411" y="1691.2241323440203"/><cell height="1.0" id="104" width="1.0" x="825.108831718257" y="1811.9021126660655"/><cell height="1.0" id="105" width="1.0" x="930.0161125300014" y="1907.0083697486139"/><cell height="1.0" id="106" width="1.0" x="857.4071185655768" y="1604.9360744219284"/><cell height="1.0" id="107" width="1.0" x="1112.550366562346" y="1384.7986129754515"/><cell height="1.0" id="108" width="1.0" x="1586.4834074261653" y="1442.8427266344559"/><cell height="1.0" id="109" width="1.0" x="1373.1500660815573" y="2434.4518575218644"/><cell height="1.0" id="110" width="1.0" x="878.1999216381477" y="1586.5009486343906"/><cell height="1.0" id="111" width="1.0" x="997.2618946004312" y="1594.483139623585"/><cell height="1.0" id="112" width="1.0" x="1063.4707120377475" y="1880.432000244517"/><cell height="1.0" id="113" width="1.0" x="994.1337200821737" y="1490.0636400805934"/><cell height="1.0" id="114" width="1.0" x="1804.2985139877683" y="1082.1979207459294"/><cell height="1.0" id="115" width="1.0" x="1908.9760122304406" y="1408.1952890414068"/><cell height="1.0" id="116" width="1.0" x="2110.7661217233863" y="1648.6654633654616"/><cell height="1.0" id="117" width="1.0" x="1187.05770181778" y="1410.9938504006332"/><cell height="1.0" id="118" width="1.0" x="1370.5362145229174" y="1553.434468409434"/><cell height="1.0" id="119" width="1.0" x="1465.2575200827328" y="1527.0777662213973"/><cell height="1.0" id="120" width="1.0" x="1367.4886088479652" y="1390.4239995192995"/><cell height="1.0" id="121" width="1.0" x="2100.555137242022" y="1251.7848718793173"/><cell height="1.0" id="122" width="1.0" x="2332.665932994582" y="2217.0908086810314"/><cell height="1.0" id="123" width="1.0" x="2262.110864860825" y="1563.0670909845098"/><cell height="1.0" id="124" width="1.0" x="3311.058966689233" y="460.2626154797989"/><cell height="1.0" id="125" width="1.0" x="4691.1004198248065" y="460.2626154797989"/><cell height="1.0" id="126" width="1.0" x="2531.091297837751" y="1741.883181722737"/><cell height="1.0" id="127" width="1.0" x="1319.0892237684438" y="1948.3790853622045"/><cell height="1.0" id="128" width="1.0" x="1759.6307818487126" y="1679.6265755530635"/><cell height="1.0" id="129" width="1.0" x="1852.9138419964643" y="1668.1740158770444"/><cell height="1.0" id="130" width="1.0" x="1821.256334313567" y="1470.6316527515733"/><cell height="1.0" id="131" width="1.0" x="2508.3974938963356" y="1358.8544591837172"/><cell height="1.0" id="132" width="1.0" x="2883.2438758557223" y="1871.6125020928994"/><cell height="1.0" id="133" width="1.0" x="2680.75447423206" y="1384.3619250195788"/><cell height="1.0" id="134" width="1.0" x="1700.8875691669828" y="2239.3633550147797"/><cell height="1.0" id="135" width="1.0" x="1948.4333763766217" y="2136.784300866494"/><cell height="1.0" id="136" width="1.0" x="2029.1682762634528" y="2073.525159049051"/><cell height="1.0" id="137" width="1.0" x="1923.6663747321122" y="1862.6108783835334"/><cell height="1.0" id="138" width="1.0" x="2684.2760820374447" y="1697.5386794185765"/><cell height="1.0" id="139" width="1.0" x="2895.924230971148" y="2266.1868787726357"/><cell height="1.0" id="140" width="1.0" x="2775.129775835852" y="2016.9020434816707"/><cell height="1.0" id="141" width="1.0" x="2806.8813351255158" y="194.57203832168977"/><cell height="1.0" id="142" width="1.0" x="2788.6459564633014" y="180.45081349238632"/><cell height="1.0" id="143" width="1.0" x="2743.6256283242496" y="124.19098260605284"/><cell height="1.0" id="144" width="1.0" x="2607.1948385811315" y="178.70205270876917"/><cell height="1.0" id="145" width="1.0" x="2138.6915998484187" y="187.9103014474584"/><cell height="1.0" id="146" width="1.0" x="2112.1453098658653" y="176.65236580053622"/><cell height="1.0" id="147" width="1.0" x="3718.866095369863" y="466.65899610884543"/><cell height="1.0" id="148" width="1.0" x="1140.245023002858" y="169.5168691807903"/><cell height="1.0" id="149" width="1.0" x="1233.9148568150026" y="215.75352329151866"/><cell height="1.0" id="150" width="1.0" x="1289.4141769418998" y="245.39686011433702"/><cell height="1.0" id="151" width="1.0" x="1359.1378398813522" y="253.44374162488762"/><cell height="1.0" id="152" width="1.0" x="1526.5154638047475" y="249.32271249644123"/><cell height="1.0" id="153" width="1.0" x="4389.181646429756" y="460.2626154797989"/><cell height="1.0" id="154" width="1.0" x="4363.7540336662105" y="460.2626154797989"/><cell height="1.0" id="155" width="1.0" x="4374.645103465481" y="460.2626154797989"/><cell height="1.0" id="156" width="1.0" x="4351.826129067681" y="460.2626154797989"/><cell height="1.0" id="157" width="1.0" x="4332.494407274936" y="460.2626154797989"/><cell height="1.0" id="158" width="1.0" x="4759.915880084611" y="464.7811517241093"/><cell height="1.0" id="159" width="1.0" x="4773.118990882831" y="464.78115172410924"/><cell height="1.0" id="160" width="1.0" x="4252.078380026851" y="460.2626154797989"/><cell height="1.0" id="161" width="1.0" x="4313.959847610642" y="460.2626154797989"/><cell height="1.0" id="162" width="1.0" x="4406.479910337593" y="460.2626154797989"/><cell height="1.0" id="163" width="1.0" x="3594.9066728141484" y="460.2626154797989"/><cell height="1.0" id="164" width="1.0" x="4447.68263547922" y="460.2626154797989"/><cell height="1.0" id="165" width="1.0" x="4808.074299488282" y="461.494749086012"/><cell height="1.0" id="166" width="1.0" x="4561.753489043183" y="460.2626154797989"/><cell height="1.0" id="167" width="1.0" x="2595.155122727782" y="195.26061509512982"/><cell height="1.0" id="168" width="1.0" x="2616.677827383325" y="195.26061509512982"/><cell height="1.0" id="169" width="1.0" x="2098.159362020174" y="447.6909545327449"/><cell height="1.0" id="170" width="1.0" x="2105.390366118624" y="312.5139963252126"/><cell height="1.0" id="171" width="1.0" x="2174.3774763881834" y="1367.1017941762138"/><cell height="1.0" id="172" width="1.0" x="1177.3043982451477" y="206.9058372299436"/><cell height="1.0" id="173" width="1.0" x="1229.2477751550086" y="235.46249251675053"/><cell height="1.0" id="174" width="1.0" x="1314.5370358525793" y="279.11791154987685"/><cell height="1.0" id="175" width="1.0" x="1357.5016741233703" y="312.67331466687926"/><cell height="1.0" id="176" width="1.0" x="1486.9091877398273" y="336.3745872523568"/><cell height="1.0" id="177" width="1.0" x="3237.5084395890012" y="460.2626154797989"/><cell height="1.0" id="178" width="1.0" x="3231.792927058185" y="460.2626154797989"/><cell height="1.0" id="179" width="1.0" x="2378.2935066912255" y="601.5945862991331"/><cell height="1.0" id="180" width="1.0" x="3438.575767377121" y="460.2626154797989"/><cell height="1.0" id="181" width="1.0" x="3403.8770999862477" y="460.2626154797989"/><cell height="1.0" id="182" width="1.0" x="4283.233196626741" y="460.2626154797989"/><cell height="1.0" id="183" width="1.0" x="4266.47498768092" y="460.2626154797989"/><cell height="1.0" id="184" width="1.0" x="3205.8520163266767" y="460.2626154797989"/><cell height="1.0" id="185" width="1.0" x="3195.989466098905" y="460.2626154797989"/><cell height="1.0" id="186" width="1.0" x="3153.9865642288937" y="460.2626154797989"/><cell height="1.0" id="187" width="1.0" x="3162.4154401364453" y="460.2626154797989"/><cell height="1.0" id="188" width="1.0" x="3547.6011665190213" y="460.2626154797989"/><cell height="1.0" id="189" width="1.0" x="3825.2331699892607" y="461.74989398807054"/><cell height="1.0" id="190" width="1.0" x="4192.577611207976" y="460.2626154797989"/><cell height="1.0" id="191" width="1.0" x="1997.0869372546085" y="469.8011316318933"/><cell height="1.0" id="192" width="1.0" x="2003.026751138911" y="493.3100214187567"/><cell height="1.0" id="193" width="1.0" x="1887.3462616413663" y="1388.4032305116496"/><cell height="1.0" id="194" width="1.0" x="998.291634103003" y="726.8582369115898"/><cell height="1.0" id="195" width="1.0" x="946.5944241368558" y="821.163081190188"/><cell height="1.0" id="196" width="1.0" x="1034.4945056386596" y="848.9712064908151"/><cell height="1.0" id="197" width="1.0" x="1170.996018871153" y="866.3518969776704"/><cell height="1.0" id="198" width="1.0" x="1286.3557905014636" y="810.9833156992909"/><cell height="1.0" id="199" width="1.0" x="1811.442808454883" y="802.5429116086714"/><cell height="1.0" id="200" width="1.0" x="1825.7238282142907" y="790.8320897911128"/><cell height="1.0" id="201" width="1.0" x="2241.7337171272975" y="514.5085808082787"/><cell height="1.0" id="202" width="1.0" x="2434.5588939793265" y="503.62828939341694"/><cell height="1.0" id="203" width="1.0" x="2453.0967583559313" y="509.81096185441504"/><cell height="1.0" id="204" width="1.0" x="4113.787080026852" y="460.2626154797989"/><cell height="1.0" id="205" width="1.0" x="4132.183687680921" y="460.2626154797989"/><cell height="1.0" id="206" width="1.0" x="1171.143951128755" y="1017.3501389846319"/><cell height="1.0" id="207" width="1.0" x="1179.1108797846864" y="1055.3355578518517"/><cell height="1.0" id="208" width="1.0" x="1507.3835030784307" y="856.0816434467081"/><cell height="1.0" id="209" width="1.0" x="1491.6366011447326" y="840.3628785122022"/><cell height="1.0" id="210" width="1.0" x="3413.1356225278555" y="460.2626154797989"/><cell height="1.0" id="211" width="1.0" x="3999.721517680921" y="460.2626154797989"/><cell height="1.0" id="212" width="1.0" x="3633.071429277988" y="460.2626154797989"/><cell height="1.0" id="213" width="1.0" x="2976.46722220013" y="460.2626154797989"/><cell height="1.0" id="214" width="1.0" x="848.7883404825249" y="1029.1596477542416"/><cell height="1.0" id="215" width="1.0" x="863.8210093829465" y="1070.3241090939573"/><cell height="1.0" id="216" width="1.0" x="843.9032749183856" y="1104.5010331727594"/><cell height="1.0" id="217" width="1.0" x="1006.7701156459849" y="1075.3339204310505"/><cell height="1.0" id="218" width="1.0" x="1283.200293924422" y="1055.5394009184067"/><cell height="1.0" id="219" width="1.0" x="1557.211962764406" y="1058.4355961057918"/><cell height="1.0" id="220" width="1.0" x="1566.5420276824366" y="1067.0762087533026"/><cell height="1.0" id="221" width="1.0" x="2012.5946561652095" y="736.4411842443012"/><cell height="1.0" id="222" width="1.0" x="2086.3998700339844" y="1079.239301614509"/><cell height="1.0" id="223" width="1.0" x="2024.8128598093217" y="1073.2268001718421"/><cell height="1.0" id="224" width="1.0" x="3287.3782094237126" y="460.2626154797989"/><cell height="1.0" id="225" width="1.0" x="3315.149381850853" y="460.2626154797989"/><cell height="1.0" id="226" width="1.0" x="1226.3343758076599" y="1200.937917909062"/><cell height="1.0" id="227" width="1.0" x="1202.1068388141994" y="1298.9126576666758"/><cell height="1.0" id="228" width="1.0" x="1458.7528497856088" y="1185.7519937838888"/><cell height="1.0" id="229" width="1.0" x="1495.5030348673013" y="1078.0059217903188"/><cell height="1.0" id="230" width="1.0" x="3300.432146804449" y="460.2626154797989"/><cell height="1.0" id="231" width="1.0" x="3512.1904744208837" y="460.2626154797989"/><cell height="1.0" id="232" width="1.0" x="3339.542965887551" y="460.2626154797989"/><cell height="1.0" id="233" width="1.0" x="669.4589637721332" y="2333.2412201187676"/><cell height="1.0" id="234" width="1.0" x="709.8722016639823" y="2423.736223677542"/><cell height="1.0" id="235" width="1.0" x="873.4376930397901" y="2247.458294415911"/><cell height="1.0" id="236" width="1.0" x="934.9022988519017" y="2229.1058306425166"/><cell height="1.0" id="237" width="1.0" x="981.8842938445194" y="2095.431631019854"/><cell height="1.0" id="238" width="1.0" x="1033.4789487546946" y="2068.1240011525542"/><cell height="1.0" id="239" width="1.0" x="1114.1943423605885" y="1975.315438540767"/><cell height="1.0" id="240" width="1.0" x="1117.073293613676" y="2032.18101250571"/><cell height="1.0" id="241" width="1.0" x="1692.4691483593156" y="1858.5333401906755"/><cell height="1.0" id="242" width="1.0" x="1885.474544471659" y="2081.616591724592"/><cell height="1.0" id="243" width="1.0" x="1858.886272231743" y="2258.7566103803806"/><cell height="1.0" id="244" width="1.0" x="778.0013530903267" y="1283.6478686697233"/><cell height="1.0" id="245" width="1.0" x="1103.2624042698012" y="1148.110447433849"/><cell height="1.0" id="246" width="1.0" x="947.0943705813603" y="2898.6931690778333"/><cell height="1.0" id="247" width="1.0" x="217.35109341949385" y="1633.5789964402811"/><cell height="1.0" id="248" width="1.0" x="256.5851171248736" y="1689.259799183235"/><cell height="1.0" id="249" width="1.0" x="323.10890318010865" y="1780.3325613277539"/><cell height="1.0" id="250" width="1.0" x="279.8966147904449" y="1720.2125048746689"/><cell height="1.0" id="251" width="1.0" x="273.0405375886745" y="1610.0948321162418"/><cell height="1.0" id="252" width="1.0" x="373.63229360456523" y="1565.4127885152593"/><cell height="1.0" id="253" width="1.0" x="838.2483135882281" y="1300.461847182603"/><cell height="1.0" id="254" width="1.0" x="695.4304860937597" y="2385.1795993539868"/><cell height="1.0" id="255" width="1.0" x="917.3672343913505" y="2796.618504526937"/><cell height="1.0" id="256" width="1.0" x="355.3159862953197" y="1655.996981047343"/><cell height="1.0" id="257" width="1.0" x="374.7291756788504" y="1642.8156065394255"/><cell height="1.0" id="258" width="1.0" x="298.2415877943379" y="1629.5317803443259"/><cell height="1.0" id="259" width="1.0" x="363.7114183913783" y="1611.0318854152088"/><cell height="1.0" id="260" width="1.0" x="823.217262174977" y="1356.863682109455"/><cell height="1.0" id="261" width="1.0" x="994.2569003739333" y="2183.589143735951"/><cell height="1.0" id="262" width="1.0" x="1157.1454840821757" y="2554.9244773852674"/><cell height="1.0" id="263" width="1.0" x="530.9171081520946" y="1579.2225675177283"/><cell height="1.0" id="264" width="1.0" x="614.7349015193837" y="1541.770983137626"/><cell height="1.0" id="265" width="1.0" x="968.0393093588522" y="1461.3352389157608"/><cell height="1.0" id="266" width="1.0" x="1134.4348858702901" y="2055.0546205105547"/><cell height="1.0" id="267" width="1.0" x="1331.5034615576624" y="2472.6471651633437"/><cell height="1.0" id="268" width="1.0" x="1083.786097953816" y="1399.5280802811249"/><cell height="1.0" id="269" width="1.0" x="1478.9173466295515" y="1404.5530813458374"/><cell height="1.0" id="270" width="1.0" x="1374.2405569044358" y="2419.739208538311"/><cell height="1.0" id="271" width="1.0" x="1817.5656763194988" y="1091.6118639183"/><cell height="1.0" id="272" width="1.0" x="1980.450026137381" y="1369.881171771604"/><cell height="1.0" id="273" width="1.0" x="1868.0335720822354" y="1356.712739178442"/><cell height="1.0" id="274" width="1.0" x="2074.119215796972" y="1682.703161745138"/><cell height="1.0" id="275" width="1.0" x="2042.6600660426466" y="1746.9746850443212"/><cell height="1.0" id="276" width="1.0" x="1176.5110313754108" y="1412.1299897668227"/><cell height="1.0" id="277" width="1.0" x="1400.2920277263916" y="1556.676991314781"/><cell height="1.0" id="278" width="1.0" x="1508.3437782766932" y="1519.6021024181555"/><cell height="1.0" id="279" width="1.0" x="1404.4036114664204" y="1339.7053148260648"/><cell height="1.0" id="280" width="1.0" x="2135.5135014295315" y="1266.2323502565382"/><cell height="1.0" id="281" width="1.0" x="2324.4568598882474" y="2229.185390394222"/><cell height="1.0" id="282" width="1.0" x="3248.779878247025" y="460.2626154797989"/><cell height="1.0" id="283" width="1.0" x="2216.342668663471" y="1202.792197400269"/><cell height="1.0" id="284" width="1.0" x="2490.3742160848756" y="1531.9604313298023"/><cell height="1.0" id="285" width="1.0" x="2508.2514693584126" y="1858.5480677991518"/><cell height="1.0" id="286" width="1.0" x="2506.063871187043" y="1841.3025876058405"/><cell height="1.0" id="287" width="1.0" x="1673.7132336791256" y="1578.2555491417666"/><cell height="1.0" id="288" width="1.0" x="1761.232142285522" y="1656.2807497269168"/><cell height="1.0" id="289" width="1.0" x="1819.673013127051" y="1677.6886444340012"/><cell height="1.0" id="290" width="1.0" x="1823.6434504838285" y="1497.0564603871544"/><cell height="1.0" id="291" width="1.0" x="2491.4821466143985" y="1377.1878182785254"/><cell height="1.0" id="292" width="1.0" x="2772.091692889315" y="1722.3085645632573"/><cell height="1.0" id="293" width="1.0" x="2622.9157466413394" y="1409.6294303281588"/><cell height="1.0" id="294" width="1.0" x="1705.6312003339995" y="2245.446201350206"/><cell height="1.0" id="295" width="1.0" x="1943.9195357151052" y="2172.3874343743933"/><cell height="1.0" id="296" width="1.0" x="2126.3648645604026" y="2054.951202500119"/><cell height="1.0" id="297" width="1.0" x="1908.6870467709946" y="1869.1185959403883"/><cell height="1.0" id="298" width="1.0" x="2658.9380175598226" y="1712.2346360163915"/><cell height="1.0" id="299" width="1.0" x="2897.8475707557636" y="2395.133049117988"/><cell height="1.0" id="300" width="1.0" x="2760.7428557735893" y="2009.699618468297"/><cell height="1.0" id="301" width="1.0" x="1135.9143629390014" y="1768.9263024541692"/><cell height="1.0" id="302" width="1.0" x="1167.9321848973823" y="1800.38039910542"/><cell height="1.0" id="303" width="1.0" x="1208.6329142132608" y="1856.2034717914562"/><cell height="1.0" id="304" width="1.0" x="1218.2163774548367" y="1862.2554843612293"/><cell height="1.0" id="305" width="1.0" x="1144.1884019091635" y="1526.846240682667"/><cell height="1.0" id="306" width="1.0" x="1147.9759681220726" y="1591.9040830296444"/><cell height="1.0" id="307" width="1.0" x="1325.6560908647052" y="1818.2170371562488"/><cell height="1.0" id="308" width="1.0" x="1316.840710395958" y="1849.8304388128508"/><cell height="1.0" id="309" width="1.0" x="1237.278822697911" y="1582.5536392573276"/><cell height="1.0" id="310" width="1.0" x="1229.089424968317" y="1586.777986878974"/><cell height="1.0" id="311" width="1.0" x="1326.3862455659978" y="1592.5013679113558"/><cell height="1.0" id="312" width="1.0" x="1320.1470508842299" y="1605.8964778233103"/><cell height="1.0" id="313" width="1.0" x="2547.96158524184" y="1849.322176916481"/><cell height="1.0" id="314" width="1.0" x="2859.355034733569" y="255.3659643520403"/><cell height="1.0" id="315" width="1.0" x="2676.740828739718" y="174.37877379440673"/><cell height="1.0" id="316" width="1.0" x="2147.7559515738144" y="190.5856532029465"/><cell height="1.0" id="317" width="1.0" x="3255.5282568772473" y="460.2626154797989"/><cell height="1.0" id="318" width="1.0" x="3619.6752460730845" y="460.2626154797989"/><cell height="1.0" id="319" width="1.0" x="4150.5059431583895" y="460.2626154797989"/><cell height="1.0" id="320" width="1.0" x="2100.6537722242592" y="310.00922129391955"/><cell height="1.0" id="321" width="1.0" x="1954.4079890110652" y="755.2056412772656"/><cell height="1.0" id="322" width="1.0" x="3055.5445491096743" y="460.2626154797989"/><cell height="1.0" id="323" width="1.0" x="3943.057080026851" y="460.2626154797989"/><cell height="1.0" id="324" width="1.0" x="1988.6304114435375" y="489.30226363767287"/><cell height="1.0" id="325" width="1.0" x="1811.4478441280726" y="821.057439424188"/><cell height="1.0" id="326" width="1.0" x="2927.5942185182535" y="460.2626154797989"/><cell height="1.0" id="327" width="1.0" x="2623.2107747580826" y="1123.530693997638"/><cell height="1.0" id="328" width="1.0" x="1674.521062796125" y="948.1970482555865"/><cell height="1.0" id="329" width="1.0" x="2274.733215347033" y="460.2626154797989"/><cell height="1.0" id="330" width="1.0" x="2195.1266724446236" y="1669.0768075438527"/><cell height="1.0" id="331" width="1.0" x="778.316856637569" y="2551.6906030613013"/><cell height="1.0" id="332" width="1.0" x="881.0134719093952" y="2264.966392976757"/><cell height="1.0" id="333" width="1.0" x="1105.9387832926323" y="2085.576156967049"/><cell height="1.0" id="334" width="1.0" x="1111.388097612622" y="1954.8435412689905"/><cell height="1.0" id="335" width="1.0" x="358.99264770882735" y="1576.1570382752652"/><cell height="1.0" id="336" width="1.0" x="386.92766556614185" y="1606.4502620089074"/><cell height="1.0" id="337" width="1.0" x="653.8143403990642" y="1532.1640719182647"/><cell height="1.0" id="338" width="1.0" x="2159.4755519714527" y="1412.4788574315821"/><cell height="1.0" id="339" width="1.0" x="2034.7679337332315" y="1719.1901773705881"/><cell height="1.0" id="340" width="1.0" x="2496.6626740092493" y="1854.8629004070394"/><cell height="1.0" id="341" width="1.0" x="1118.0373079935353" y="1747.966509405398"/><cell height="1.0" id="342" width="1.0" x="1202.0736564547133" y="1866.0408216869778"/><cell height="1.0" id="343" width="1.0" x="1144.7236299067827" y="1572.5494386464502"/><cell height="1.0" id="344" width="1.0" x="1217.7400416855062" y="1575.897826208779"/><cell height="1.0" id="345" width="1.0" x="1385.329339268129" y="1728.1784913108527"/><cell height="1.0" id="347" width="1.0" x="1396.3751703060893" y="2067.7565331981523"/><cell height="1.0" id="348" width="1.0" x="1446.2862749681117" y="2084.921718407631"/><cell height="1.0" id="349" width="1.0" x="1601.109414618642" y="2142.744036550939"/><cell height="1.0" id="350" width="1.0" x="1573.4699231288778" y="1961.5603800351655"/><cell height="1.0" id="351" width="1.0" x="1862.0934043457087" y="460.2626154797989"/><cell height="1.0" id="352" width="1.0" x="402.32899794380126" y="1879.2901729888772"/><cell height="1.0" id="353" width="1.0" x="547.9274629129701" y="2125.6317590050976"/><cell height="1.0" id="354" width="1.0" x="627.5068096776378" y="2265.7634348042207"/><cell height="1.0" id="355" width="1.0" x="629.5407488750978" y="1419.8753957067256"/><cell height="1.0" id="356" width="1.0" x="563.4830879579328" y="1733.6255718141074"/><cell height="1.0" id="357" width="1.0" x="664.6733867766035" y="1886.8359132630144"/><cell height="1.0" id="358" width="1.0" x="756.8446184426085" y="1949.0392341663655"/><cell height="1.0" id="359" width="1.0" x="802.7148649538852" y="1546.7816822476125"/><cell height="1.0" id="360" width="1.0" x="739.5050680333756" y="1670.518124633642"/><cell height="1.0" id="361" width="1.0" x="820.5716090167595" y="1760.7508432252093"/><cell height="1.0" id="362" width="1.0" x="937.0495739737131" y="1911.6548268908773"/><cell height="1.0" id="363" width="1.0" x="818.7840202725703" y="1645.321354509534"/><cell height="1.0" id="364" width="1.0" x="937.2496605309051" y="1609.6748445402513"/><cell height="1.0" id="365" width="1.0" x="984.8615703577508" y="1594.6545350520423"/><cell height="1.0" id="366" width="1.0" x="1070.828126336593" y="1894.8692730974144"/><cell height="1.0" id="367" width="1.0" x="932.9279561569082" y="1508.8971049136612"/><cell height="1.0" id="368" width="1.0" x="2743.1470996889625" y="162.75311306295873"/><cell height="1.0" id="369" width="1.0" x="2704.4698004803317" y="115.56805504392753"/><cell height="1.0" id="370" width="1.0" x="2132.182532247981" y="182.64551620458204"/><cell height="1.0" id="371" width="1.0" x="3698.5849204224546" y="460.2626154797989"/><cell height="1.0" id="372" width="1.0" x="1134.7868866942927" y="149.07756767633362"/><cell height="1.0" id="373" width="1.0" x="1241.2394662138354" y="194.5097474442987"/><cell height="1.0" id="374" width="1.0" x="1273.2987230869626" y="242.2248177953943"/><cell height="1.0" id="375" width="1.0" x="1313.0411868273236" y="249.9080010654772"/><cell height="1.0" id="376" width="1.0" x="1506.7915222661927" y="244.27738459565376"/><cell height="1.0" id="377" width="1.0" x="3270.1694061940707" y="460.2626154797989"/><cell height="1.0" id="378" width="1.0" x="3323.8192581016356" y="460.2626154797989"/><cell height="1.0" id="379" width="1.0" x="3531.0311625472973" y="460.2626154797989"/><cell height="1.0" id="380" width="1.0" x="4160.2202652147935" y="460.2626154797989"/><cell height="1.0" id="381" width="1.0" x="3219.859795460054" y="460.2626154797989"/><cell height="1.0" id="382" width="1.0" x="3172.802247701699" y="460.2626154797989"/><cell height="1.0" id="383" width="1.0" x="3294.5561177118557" y="460.2626154797989"/><cell height="1.0" id="384" width="1.0" x="3061.4730454970413" y="460.2626154797989"/><cell height="1.0" id="385" width="1.0" x="3886.893201944448" y="460.2626154797989"/><cell height="1.0" id="386" width="1.0" x="4065.794741509311" y="460.2626154797989"/><cell height="1.0" id="387" width="1.0" x="4013.7162040754024" y="460.2626154797989"/><cell height="1.0" id="388" width="1.0" x="1806.277810315853" y="329.10583539513374"/><cell height="1.0" id="389" width="1.0" x="3002.107775411155" y="460.2626154797989"/><cell height="1.0" id="390" width="1.0" x="1185.6956028947461" y="210.663798936654"/><cell height="1.0" id="391" width="1.0" x="1233.9118754277192" y="267.5987251090921"/><cell height="1.0" id="392" width="1.0" x="1287.932321101866" y="276.14776010651747"/><cell height="1.0" id="393" width="1.0" x="1363.5857521462844" y="323.2175094018045"/><cell height="1.0" id="394" width="1.0" x="1479.6172223305407" y="360.4096467844781"/><cell height="1.0" id="395" width="1.0" x="2719.6145440222353" y="460.2626154797989"/><cell height="1.0" id="396" width="1.0" x="2749.496721372122" y="460.2626154797989"/><cell height="1.0" id="397" width="1.0" x="3097.159395575927" y="460.2626154797989"/><cell height="1.0" id="398" width="1.0" x="3834.1256370174683" y="460.2626154797989"/><cell height="1.0" id="399" width="1.0" x="2782.0504273971783" y="460.2626154797989"/><cell height="1.0" id="400" width="1.0" x="2821.1696145384194" y="460.2626154797989"/><cell height="1.0" id="401" width="1.0" x="2708.415311783505" y="460.2626154797989"/><cell height="1.0" id="402" width="1.0" x="2635.517347115637" y="460.2626154797989"/><cell height="1.0" id="403" width="1.0" x="3157.6425130911452" y="460.2626154797989"/><cell height="1.0" id="404" width="1.0" x="3775.8081149289605" y="460.2626154797989"/><cell height="1.0" id="405" width="1.0" x="3556.4892937014697" y="460.2626154797989"/><cell height="1.0" id="406" width="1.0" x="1958.7413531088732" y="501.8052541571833"/><cell height="1.0" id="407" width="1.0" x="1957.5201903981779" y="1326.1581329646547"/><cell height="1.0" id="408" width="1.0" x="961.6033259137286" y="792.7670292546777"/><cell height="1.0" id="409" width="1.0" x="983.3489702913733" y="811.149692441254"/><cell height="1.0" id="410" width="1.0" x="1016.6705216927822" y="841.1248697744841"/><cell height="1.0" id="411" width="1.0" x="1105.53074027532" y="827.3647526818635"/><cell height="1.0" id="412" width="1.0" x="1278.6781438387397" y="872.581794053876"/><cell height="1.0" id="413" width="1.0" x="1812.433240306082" y="845.2317347969627"/><cell height="1.0" id="414" width="1.0" x="2218.244927683297" y="616.6612645508483"/><cell height="1.0" id="415" width="1.0" x="2698.9572350585286" y="460.2626154797989"/><cell height="1.0" id="416" width="1.0" x="3084.920642370009" y="460.2626154797989"/><cell height="1.0" id="417" width="1.0" x="2811.7372222001295" y="460.2626154797989"/><cell height="1.0" id="418" width="1.0" x="2732.425878598097" y="460.2626154797989"/><cell height="1.0" id="419" width="1.0" x="2543.6072040066374" y="460.2626154797989"/><cell height="1.0" id="420" width="1.0" x="2523.2751412917855" y="460.2626154797989"/><cell height="1.0" id="421" width="1.0" x="2858.423990716363" y="460.2626154797989"/><cell height="1.0" id="422" width="1.0" x="3388.6715962046896" y="460.2626154797989"/><cell height="1.0" id="423" width="1.0" x="3280.8399320751996" y="460.2626154797989"/><cell height="1.0" id="424" width="1.0" x="799.8388203940468" y="1010.3860836250516"/><cell height="1.0" id="425" width="1.0" x="913.1222833471301" y="1020.9323196038537"/><cell height="1.0" id="426" width="1.0" x="860.9458309337789" y="1121.9421841456187"/><cell height="1.0" id="427" width="1.0" x="1033.9268103582035" y="1080.2670846854853"/><cell height="1.0" id="428" width="1.0" x="1261.7222904768105" y="1040.0746192455208"/><cell height="1.0" id="429" width="1.0" x="1662.8471577606383" y="960.5301172537844"/><cell height="1.0" id="430" width="1.0" x="2103.5106507061164" y="460.2626154797989"/><cell height="1.0" id="431" width="1.0" x="2317.5256886607067" y="460.2626154797989"/><cell height="1.0" id="432" width="1.0" x="2865.856782931607" y="460.2626154797989"/><cell height="1.0" id="433" width="1.0" x="1205.7311486874487" y="1320.6156421995665"/><cell height="1.0" id="434" width="1.0" x="2081.6770823724623" y="460.2626154797989"/><cell height="1.0" id="435" width="1.0" x="1523.93109243867" y="1066.050122984378"/><cell height="1.0" id="436" width="1.0" x="2483.7367514904363" y="460.2626154797989"/><cell height="1.0" id="437" width="1.0" x="3167.616810403103" y="460.2626154797989"/><cell height="1.0" id="438" width="1.0" x="2589.9196410809777" y="460.2626154797989"/><cell height="1.0" id="439" width="1.0" x="803.5917760218202" y="2598.112387194818"/><cell height="1.0" id="440" width="1.0" x="876.9164683100713" y="2255.8773235102894"/><cell height="1.0" id="441" width="1.0" x="1045.1045064647983" y="2085.0707762490383"/><cell height="1.0" id="442" width="1.0" x="1116.5622969508827" y="2017.4020437665"/><cell height="1.0" id="443" width="1.0" x="307.97162467184364" y="1560.8007362616167"/><cell height="1.0" id="444" width="1.0" x="372.54049049205526" y="1606.3063592456292"/><cell height="1.0" id="445" width="1.0" x="537.6803178193887" y="1584.5651366586776"/><cell height="1.0" id="446" width="1.0" x="2010.6007547977083" y="987.3519901790389"/><cell height="1.0" id="447" width="1.0" x="1856.9012412271286" y="1372.401168697028"/><cell height="1.0" id="448" width="1.0" x="1982.8689255158242" y="1761.3489990685866"/><cell height="1.0" id="449" width="1.0" x="2104.3360417633035" y="1295.0273113297494"/><cell height="1.0" id="450" width="1.0" x="3225.3315227382454" y="460.2626154797989"/><cell height="1.0" id="451" width="1.0" x="2479.346224967563" y="1864.9841643945097"/><cell height="1.0" id="452" width="1.0" x="1135.8941872974506" y="1762.059109793408"/><cell height="1.0" id="453" width="1.0" x="1219.2144128625232" y="1855.558629113798"/><cell height="1.0" id="454" width="1.0" x="1183.4735470651522" y="1588.7181650775356"/><cell height="1.0" id="455" width="1.0" x="1235.5841651738751" y="1646.5028696858976"/><cell height="1.0" id="456" width="1.0" x="1285.824004466705" y="1663.3063892365149"/><cell height="1.0" id="457" width="1.0" x="2827.693913817846" y="230.21717710470188"/><cell height="1.0" id="458" width="1.0" x="2557.119983647983" y="145.19600731007807"/><cell height="1.0" id="459" width="1.0" x="2170.1980449102994" y="211.96069233072518"/><cell height="1.0" id="460" width="1.0" x="3104.6751903712375" y="460.2626154797989"/><cell height="1.0" id="461" width="1.0" x="3524.838568139447" y="460.2626154797989"/><cell height="1.0" id="462" width="1.0" x="4081.348380026852" y="460.2626154797989"/><cell height="1.0" id="463" width="1.0" x="1772.2873331751148" y="301.908573562534"/><cell height="1.0" id="464" width="1.0" x="2655.105288698499" y="460.2626154797989"/><cell height="1.0" id="465" width="1.0" x="2911.8061951028567" y="460.2626154797989"/><cell height="1.0" id="466" width="1.0" x="3176.5311268118367" y="460.2626154797989"/><cell height="1.0" id="467" width="1.0" x="1978.6802437226684" y="473.9383231637628"/><cell height="1.0" id="468" width="1.0" x="2059.7410652354665" y="460.2626154797989"/><cell height="1.0" id="469" width="1.0" x="2598.9690635792504" y="460.2626154797989"/><cell height="1.0" id="470" width="1.0" x="3042.886040007325" y="460.2626154797989"/><cell height="1.0" id="471" width="1.0" x="1724.3799634669208" y="897.9980441921841"/><cell height="1.0" id="472" width="1.0" x="2375.2411002177078" y="460.2626154797989"/><cell height="1.0" id="473" width="1.0" x="2843.833007226696" y="460.2626154797989"/><cell height="1.0" id="474" width="1.0" x="716.7703133707995" y="2437.3469506814736"/><cell height="1.0" id="475" width="1.0" x="886.1115819207383" y="2238.2591502769087"/><cell height="1.0" id="476" width="1.0" x="1033.8514473603027" y="2088.412054947307"/><cell height="1.0" id="477" width="1.0" x="1165.8102559585686" y="2103.6865449698657"/><cell height="1.0" id="478" width="1.0" x="1669.0950961983367" y="1865.0331729270147"/><cell height="1.0" id="479" width="1.0" x="1982.50734107359" y="1914.50136073134"/><cell height="1.0" id="480" width="1.0" x="1882.109341169482" y="2256.8035106734537"/><cell height="1.0" id="481" width="1.0" x="974.1787242277311" y="1198.0542561790458"/><cell height="1.0" id="482" width="1.0" x="1113.518077557128" y="1144.3298757084463"/><cell height="1.0" id="483" width="1.0" x="902.4079743022656" y="2783.080355827387"/><cell height="1.0" id="484" width="1.0" x="384.8377169063542" y="1558.4754177885375"/><cell height="1.0" id="485" width="1.0" x="842.7414950899553" y="1293.1112140137811"/><cell height="1.0" id="486" width="1.0" x="862.0627199719253" y="1315.9120640028093"/><cell height="1.0" id="487" width="1.0" x="870.9707587812792" y="2705.380891135372"/><cell height="1.0" id="488" width="1.0" x="441.53193704950525" y="1599.7920759229896"/><cell height="1.0" id="489" width="1.0" x="788.111319048758" y="1388.920643530112"/><cell height="1.0" id="490" width="1.0" x="1004.6179845885139" y="2162.343694409349"/><cell height="1.0" id="491" width="1.0" x="1162.9932397753032" y="2571.3042878188908"/><cell height="1.0" id="492" width="1.0" x="560.4326462715918" y="1547.031117191102"/><cell height="1.0" id="493" width="1.0" x="919.8262144348879" y="1487.3341016315285"/><cell height="1.0" id="494" width="1.0" x="1137.315606591742" y="2061.4294111110758"/><cell height="1.0" id="495" width="1.0" x="1332.0913810087218" y="2466.351753725706"/><cell height="1.0" id="496" width="1.0" x="1075.1430325932865" y="1374.2845014073441"/><cell height="1.0" id="497" width="1.0" x="1396.475744959875" y="1429.2547695481862"/><cell height="1.0" id="498" width="1.0" x="1375.4212169051461" y="2446.399511646357"/><cell height="1.0" id="499" width="1.0" x="1833.2629433878597" y="1359.5153146408113"/><cell height="1.0" id="500" width="1.0" x="1994.1054139110151" y="1734.1533076724418"/><cell height="1.0" id="501" width="1.0" x="1160.9754161764768" y="1404.0497236737842"/><cell height="1.0" id="502" width="1.0" x="1401.8502119319455" y="1576.6139148102093"/><cell height="1.0" id="503" width="1.0" x="1493.3470669171911" y="1533.6665689195856"/><cell height="1.0" id="504" width="1.0" x="1372.522361453835" y="1381.4372676697546"/><cell height="1.0" id="505" width="1.0" x="3006.940779847096" y="460.2626154797989"/><cell height="1.0" id="506" width="1.0" x="2241.937928581493" y="1187.6553911976841"/><cell height="1.0" id="507" width="1.0" x="2501.9772400504485" y="1520.3022698770324"/><cell height="1.0" id="508" width="1.0" x="2508.6698375866354" y="1809.091664729759"/><cell height="1.0" id="509" width="1.0" x="1614.8562841757825" y="1600.1772448642519"/><cell height="1.0" id="510" width="1.0" x="1799.2936319674377" y="1618.373312793491"/><cell height="1.0" id="511" width="1.0" x="1710.2923861684599" y="1712.8176264472822"/><cell height="1.0" id="512" width="1.0" x="1776.3944893568773" y="1457.4220545400076"/><cell height="1.0" id="513" width="1.0" x="2523.1151781149874" y="1353.3884619257292"/><cell height="1.0" id="514" width="1.0" x="2778.9128735067957" y="1784.429156253334"/><cell height="1.0" id="515" width="1.0" x="3640.5370043971784" y="460.2626154797989"/><cell height="1.0" id="516" width="1.0" x="1712.8486940581365" y="2262.120658525844"/><cell height="1.0" id="517" width="1.0" x="1935.611442887272" y="2145.911171677397"/><cell height="1.0" id="518" width="1.0" x="2003.3888454287476" y="1984.4719340127199"/><cell height="1.0" id="519" width="1.0" x="1944.536704169806" y="1820.158211681477"/><cell height="1.0" id="520" width="1.0" x="2664.0712391749785" y="1721.1830849930534"/><cell height="1.0" id="521" width="1.0" x="2895.382104926284" y="2194.0730559012673"/><cell height="1.0" id="522" width="1.0" x="2682.6617738298837" y="1983.0698086471484"/><cell height="1.0" id="523" width="1.0" x="1154.5401755395642" y="1786.3273729239777"/><cell height="1.0" id="524" width="1.0" x="1141.4614698335681" y="1805.8450210247443"/><cell height="1.0" id="525" width="1.0" x="1140.6672393852728" y="1613.243778272169"/><cell height="1.0" id="526" width="1.0" x="1250.0784336382508" y="1704.3064484239535"/><cell height="1.0" id="527" width="1.0" x="1400.9398079015436" y="1717.3840433284972"/><cell height="1.0" id="528" width="1.0" x="1134.2378645058943" y="1369.3512176027555"/><cell height="1.0" id="529" width="1.0" x="1398.5913406041154" y="1351.3061480777471"/><cell height="1.0" id="530" width="1.0" x="2510.88324027087" y="1831.2934588253702"/><cell height="1.0" id="538" width="1.0" x="2841.265090829073" y="212.13059359462622"/><cell height="1.0" id="539" width="1.0" x="3016.7345091093443" y="50.95092589550018"/><cell height="1.0" id="540" width="1.0" x="2102.5531905632706" y="175.1235082180167"/><cell height="1.0" id="541" width="1.0" x="3243.279626313304" y="460.2626154797989"/><cell height="1.0" id="542" width="1.0" x="3576.9060628143166" y="460.2626154797989"/><cell height="1.0" id="543" width="1.0" x="4673.389662314408" y="467.2409229691452"/><cell height="1.0" id="544" width="1.0" x="2127.5281307865985" y="416.8731491972342"/><cell height="1.0" id="545" width="1.0" x="1972.0137575928138" y="790.9761178748424"/><cell height="1.0" id="546" width="1.0" x="3115.776265510516" y="460.2626154797989"/><cell height="1.0" id="547" width="1.0" x="3733.792773150107" y="460.33687481166265"/><cell height="1.0" id="548" width="1.0" x="2014.6251410578725" y="490.26790169920724"/><cell height="1.0" id="549" width="1.0" x="1824.014513756792" y="736.4411842443012"/><cell height="1.0" id="550" width="1.0" x="2496.310952717609" y="535.3994006520998"/><cell height="1.0" id="551" width="1.0" x="2605.842076686995" y="461.2917880590506"/><cell height="1.0" id="552" width="1.0" x="1592.166425083532" y="1078.9074898396948"/><cell height="1.0" id="553" width="1.0" x="2103.549919552713" y="1046.7588634941508"/><cell height="1.0" id="554" width="1.0" x="2120.011600834175" y="1619.769581861954"/><cell height="1.0" id="555" width="1.0" x="760.0766306188467" y="2513.61267903242"/><cell height="1.0" id="556" width="1.0" x="1020.6663890438325" y="2232.0514099137404"/><cell height="1.0" id="557" width="1.0" x="997.8971044648214" y="2115.6115079468673"/><cell height="1.0" id="558" width="1.0" x="1102.0291077273628" y="1975.6715137363149"/><cell height="1.0" id="559" width="1.0" x="1619.9803636686415" y="1867.4675600275182"/><cell height="1.0" id="560" width="1.0" x="2023.1845242984382" y="1807.6008726152936"/><cell height="1.0" id="561" width="1.0" x="2010.978956643829" y="2201.8210716752747"/><cell height="1.0" id="562" width="1.0" x="889.7024233283333" y="1231.6311226390455"/><cell height="1.0" id="563" width="1.0" x="1137.8105609587064" y="1127.8338962516293"/><cell height="1.0" id="564" width="1.0" x="924.0544477647703" y="2836.931386221349"/><cell height="1.0" id="565" width="1.0" x="376.52294698093783" y="1551.4408465479787"/><cell height="1.0" id="566" width="1.0" x="811.3070734146403" y="1293.1112140137811"/><cell height="1.0" id="567" width="1.0" x="849.182920789235" y="1325.4195786833648"/><cell height="1.0" id="568" width="1.0" x="873.0417366061496" y="2714.8125154683294"/><cell height="1.0" id="569" width="1.0" x="343.93819185978236" y="1611.405174566743"/><cell height="1.0" id="570" width="1.0" x="794.5400262764755" y="1381.8130960627723"/><cell height="1.0" id="571" width="1.0" x="1004.8410166437858" y="2167.4141956662315"/><cell height="1.0" id="572" width="1.0" x="1165.9442866375794" y="2582.394143568614"/><cell height="1.0" id="573" width="1.0" x="558.1840975007091" y="1555.3969237602014"/><cell height="1.0" id="574" width="1.0" x="744.5528577321328" y="1525.283324900393"/><cell height="1.0" id="575" width="1.0" x="1148.8331074085813" y="2071.422588175966"/><cell height="1.0" id="576" width="1.0" x="1331.8976930223935" y="2479.8956759134207"/><cell height="1.0" id="577" width="1.0" x="1074.2136451524175" y="1407.8129783951051"/><cell height="1.0" id="578" width="1.0" x="1527.7598534418298" y="1417.347944270973"/><cell height="1.0" id="579" width="1.0" x="1372.2843013051356" y="2425.879047297139"/><cell height="1.0" id="580" width="1.0" x="1921.0681146304382" y="1365.9764714124178"/><cell height="1.0" id="581" width="1.0" x="2015.3520500180916" y="1693.6352083317984"/><cell height="1.0" id="582" width="1.0" x="1186.5482876602014" y="1429.4389493640897"/><cell height="1.0" id="583" width="1.0" x="1384.3027703872162" y="1566.5244149276168"/><cell height="1.0" id="584" width="1.0" x="1446.7247459253667" y="1565.8424699901202"/><cell height="1.0" id="585" width="1.0" x="1434.8656429772564" y="1339.914831572789"/><cell height="1.0" id="586" width="1.0" x="2271.875482091697" y="1553.9722584649949"/><cell height="1.0" id="587" width="1.0" x="2260.4380875452603" y="1213.7616828818498"/><cell height="1.0" id="588" width="1.0" x="2514.1840803644377" y="1509.1429649757333"/><cell height="1.0" id="589" width="1.0" x="2539.6914102780083" y="1788.9951111902587"/><cell height="1.0" id="590" width="1.0" x="1647.9280605668137" y="1569.8739719400533"/><cell height="1.0" id="591" width="1.0" x="1779.9377489076178" y="1637.9899656997163"/><cell height="1.0" id="592" width="1.0" x="1777.7242569483806" y="1689.8281212318107"/><cell height="1.0" id="593" width="1.0" x="1791.3464976395148" y="1451.1570953637315"/><cell height="1.0" id="594" width="1.0" x="2474.0240374915415" y="1389.349449950883"/><cell height="1.0" id="595" width="1.0" x="2779.4286177215963" y="1696.7956160000654"/><cell height="1.0" id="596" width="1.0" x="2714.8359103474513" y="1412.9732395698172"/><cell height="1.0" id="597" width="1.0" x="1696.8083661638543" y="2232.47535842866"/><cell height="1.0" id="598" width="1.0" x="1954.9341617911518" y="2165.538690190755"/><cell height="1.0" id="599" width="1.0" x="2070.9286948102563" y="1963.6678508507512"/><cell height="1.0" id="600" width="1.0" x="1954.8251069077487" y="1809.6328606064735"/><cell height="1.0" id="601" width="1.0" x="2668.969944632642" y="1730.5444438593881"/><cell height="1.0" id="602" width="1.0" x="2568.151297471926" y="2157.9771049781134"/><cell height="1.0" id="603" width="1.0" x="2677.451052404729" y="1996.6599920081703"/><cell height="1.0" id="604" width="1.0" x="1147.7732287489234" y="1777.5897069344674"/><cell height="1.0" id="605" width="1.0" x="1108.4133946303605" y="1782.2997105260151"/><cell height="1.0" id="606" width="1.0" x="1135.7940634876177" y="1595.4747354219576"/><cell height="1.0" id="607" width="1.0" x="1253.5889545446944" y="1722.7510265969577"/><cell height="1.0" id="608" width="1.0" x="1263.2308763310903" y="1704.5369356923638"/><cell height="1.0" id="609" width="1.0" x="2817.0199272131736" y="181.01282448150502"/><cell height="1.0" id="610" width="1.0" x="3101.2484700129226" y="28.627455587121403"/><cell height="1.0" id="611" width="1.0" x="2164.3476698432723" y="220.27238226396486"/><cell height="1.0" id="612" width="1.0" x="3898.0449876809203" y="460.2626154797989"/><cell height="1.0" id="613" width="1.0" x="1154.5069669465665" y="176.57707522596996"/><cell height="1.0" id="614" width="1.0" x="1230.516892810067" y="226.86702269969024"/><cell height="1.0" id="615" width="1.0" x="1278.2030077865757" y="229.23105359351203"/><cell height="1.0" id="616" width="1.0" x="1300.8542535801193" y="247.91736159302343"/><cell height="1.0" id="617" width="1.0" x="1517.258617034825" y="247.3505858348155"/><cell height="1.0" id="618" width="1.0" x="3182.4723357222033" y="460.2626154797989"/><cell height="1.0" id="619" width="1.0" x="3331.7384883872182" y="460.2626154797989"/><cell height="1.0" id="620" width="1.0" x="3647.9177269998177" y="460.2626154797989"/><cell height="1.0" id="621" width="1.0" x="4684.842173953492" y="465.03224696224953"/><cell height="1.0" id="622" width="1.0" x="1559.2775861028213" y="249.84061944636272"/><cell height="1.0" id="623" width="1.0" x="2433.333137483166" y="928.2261524601304"/><cell height="1.0" id="624" width="1.0" x="2550.779933513848" y="1021.9818448839626"/><cell height="1.0" id="625" width="1.0" x="1697.503107368767" y="233.2363116959528"/><cell height="1.0" id="626" width="1.0" x="3680.3363261062455" y="465.0985099465761"/><cell height="1.0" id="627" width="1.0" x="4844.134463045783" y="465.611091701442"/><cell height="1.0" id="628" width="1.0" x="3786.116854027006" y="467.08563311962376"/><cell height="1.0" id="629" width="1.0" x="2104.195070106163" y="304.7578140546305"/><cell height="1.0" id="630" width="1.0" x="3584.15218244608" y="460.2626154797989"/><cell height="1.0" id="631" width="1.0" x="1165.8089973819874" y="197.37763192509794"/><cell height="1.0" id="632" width="1.0" x="1242.3635284369211" y="271.40195437184724"/><cell height="1.0" id="633" width="1.0" x="1278.8153170879805" y="271.9997431882389"/><cell height="1.0" id="634" width="1.0" x="1357.2207231636544" y="320.413489111363"/><cell height="1.0" id="635" width="1.0" x="1492.162611428681" y="318.2231797099189"/><cell height="1.0" id="636" width="1.0" x="1959.970175841083" y="764.6344958210981"/><cell height="1.0" id="637" width="1.0" x="2661.949624649509" y="460.2626154797989"/><cell height="1.0" id="638" width="1.0" x="3073.8282568772474" y="460.2626154797989"/><cell height="1.0" id="639" width="1.0" x="3866.076492233947" y="460.2626154797989"/><cell height="1.0" id="640" width="1.0" x="3048.6064562398765" y="460.2626154797989"/><cell height="1.0" id="641" width="1.0" x="2647.980925530574" y="460.2626154797989"/><cell height="1.0" id="642" width="1.0" x="2686.8347471077454" y="460.2626154797989"/><cell height="1.0" id="643" width="1.0" x="2613.4696145384196" y="460.2626154797989"/><cell height="1.0" id="644" width="1.0" x="3211.626383161297" y="460.2626154797989"/><cell height="1.0" id="645" width="1.0" x="3793.871816969791" y="460.2626154797989"/><cell height="1.0" id="646" width="1.0" x="3726.5540249142973" y="460.2626154797989"/><cell height="1.0" id="647" width="1.0" x="2004.7645281361442" y="451.8077422435387"/><cell height="1.0" id="648" width="1.0" x="3487.289084201894" y="460.2626154797989"/><cell height="1.0" id="649" width="1.0" x="968.4178029131789" y="780.408257449599"/><cell height="1.0" id="650" width="1.0" x="951.3632701073767" y="808.0574526057841"/><cell height="1.0" id="651" width="1.0" x="1062.8767192060027" y="841.8433491864852"/><cell height="1.0" id="652" width="1.0" x="1186.0505017771557" y="861.733361435578"/><cell height="1.0" id="653" width="1.0" x="1262.2595196813863" y="878.1560097326437"/><cell height="1.0" id="654" width="1.0" x="1835.9484808252791" y="736.4411842443012"/><cell height="1.0" id="655" width="1.0" x="2208.531511196767" y="624.4415406338592"/><cell height="1.0" id="656" width="1.0" x="3066.8294110051656" y="460.2626154797989"/><cell height="1.0" id="657" width="1.0" x="2894.946183715388" y="461.74805043642783"/><cell height="1.0" id="658" width="1.0" x="1179.251756153415" y="1028.8075738833104"/><cell height="1.0" id="659" width="1.0" x="1184.7691500330548" y="1069.1700570119901"/><cell height="1.0" id="660" width="1.0" x="1776.8591983673996" y="1048.063245373789"/><cell height="1.0" id="661" width="1.0" x="1499.7831248041934" y="854.2901579821934"/><cell height="1.0" id="662" width="1.0" x="3125.5790962798023" y="460.2626154797989"/><cell height="1.0" id="663" width="1.0" x="3422.7630271758144" y="459.7625152528367"/><cell height="1.0" id="664" width="1.0" x="3505.279389520852" y="459.0195383282771"/><cell height="1.0" id="665" width="1.0" x="814.1415834020128" y="1011.7152052262292"/><cell height="1.0" id="666" width="1.0" x="925.776709305933" y="1009.9193657323094"/><cell height="1.0" id="667" width="1.0" x="857.7740442788739" y="1104.5662827998067"/><cell height="1.0" id="668" width="1.0" x="1013.4791215830645" y="1061.1395711243435"/><cell height="1.0" id="669" width="1.0" x="1312.852169509264" y="1045.3430134600314"/><cell height="1.0" id="670" width="1.0" x="1567.0446634013956" y="1050.7130995637335"/><cell height="1.0" id="671" width="1.0" x="2155.0908400783633" y="460.2626154797989"/><cell height="1.0" id="672" width="1.0" x="2222.1342563609264" y="460.2626154797989"/><cell height="1.0" id="673" width="1.0" x="2214.969806974577" y="1676.8434984402825"/><cell height="1.0" id="674" width="1.0" x="1212.5728316265727" y="1319.917138213746"/><cell height="1.0" id="675" width="1.0" x="1482.6110115744218" y="1164.2358946953525"/><cell height="1.0" id="676" width="1.0" x="1510.0592893919297" y="1072.2252065566863"/><cell height="1.0" id="677" width="1.0" x="2209.5718745604763" y="971.6959115598944"/><cell height="1.0" id="678" width="1.0" x="2553.798671610789" y="1370.213288824833"/><cell height="1.0" id="679" width="1.0" x="2570.6140930126617" y="1060.4022129919172"/><cell height="1.0" id="680" width="1.0" x="757.5473187582362" y="2504.6726927422405"/><cell height="1.0" id="681" width="1.0" x="910.5643893004384" y="2231.520805616292"/><cell height="1.0" id="682" width="1.0" x="1006.8699797744811" y="2130.9604437585394"/><cell height="1.0" id="683" width="1.0" x="1103.9780550454784" y="1986.622611353544"/><cell height="1.0" id="684" width="1.0" x="396.4060896771733" y="1551.1010953033997"/><cell height="1.0" id="685" width="1.0" x="411.9302606828812" y="1607.0944046465434"/><cell height="1.0" id="686" width="1.0" x="582.1670566588642" y="1549.4000650326898"/><cell height="1.0" id="687" width="1.0" x="1639.0069772476063" y="1187.643197269052"/><cell height="1.0" id="688" width="1.0" x="1848.436350928053" y="1374.5562962487525"/><cell height="1.0" id="689" width="1.0" x="2021.9561772037382" y="1675.4922653799076"/><cell height="1.0" id="690" width="1.0" x="2119.6981060302237" y="1279.747273156992"/><cell height="1.0" id="691" width="1.0" x="2276.1077361307234" y="2310.089586321018"/><cell height="1.0" id="692" width="1.0" x="2455.784968230392" y="1855.8636579106142"/><cell height="1.0" id="693" width="1.0" x="1158.8432741388451" y="1792.137819229129"/><cell height="1.0" id="694" width="1.0" x="1164.9619020909831" y="1809.185693912184"/><cell height="1.0" id="695" width="1.0" x="1140.9060040723716" y="1542.9170259740454"/><cell height="1.0" id="696" width="1.0" x="1239.0719195234665" y="1711.444516446545"/><cell height="1.0" id="697" width="1.0" x="1325.0846943734236" y="1700.586134748779"/><cell height="1.0" id="698" width="1.0" x="1553.654731919074" y="1952.0909236670527"/><cell height="1.0" id="699" width="1.0" x="780.7483499959714" y="1980.5246869403222"/><cell height="1.0" id="700" width="1.0" x="573.0037061169095" y="2168.3603152737574"/><cell height="1.0" id="701" width="1.0" x="690.6042183128583" y="1395.4321874428847"/><cell height="1.0" id="702" width="1.0" x="1492.3497683718983" y="2053.0965532288233"/><cell height="1.0" id="703" width="1.0" x="634.6856661896308" y="1812.9086012788266"/><cell height="1.0" id="704" width="1.0" x="948.4643153078504" y="2892.817924240677"/><cell height="1.0" id="705" width="1.0" x="1008.0861408795535" y="1482.5315711780563"/><cell height="1.0" id="706" width="1.0" x="460.78375509447403" y="1986.40241351427"/><cell height="1.0" id="707" width="1.0" x="844.6090098311053" y="1799.768805000178"/><cell height="1.0" id="708" width="1.0" x="763.6645261843772" y="1660.047137688155"/><cell height="1.0" id="709" width="1.0" x="909.0519262209106" y="1597.7285904800497"/><cell height="1.0" id="710" width="1.0" x="1030.38776024338" y="1575.8897679104634"/><cell height="1.0" id="711" width="1.0" x="854.9115959601457" y="1577.3407222610986"/><cell height="1.0" id="712" width="1.0" x="947.2825716775131" y="1925.6537274658463"/><cell height="1.0" id="713" width="1.0" x="1063.1449067245098" y="1872.5893879271143"/><cell height="1.0" id="714" width="1.0" x="665.3447673356574" y="1862.459832543263"/><cell height="1.0" id="715" width="1.0" x="408.3732617803812" y="1895.3547448614486"/><cell height="1.0" id="716" width="1.0" x="813.6424830391178" y="1555.5735635670412"/><cell height="1.0" id="717" width="1.0" x="1375.1156244191188" y="2073.6282401947237"/><cell height="1.0" id="718" width="1.0" x="1547.1455876461546" y="2096.262326372732"/><cell height="1.0" id="719" width="1.0" x="2465.6039671509743" y="1857.9165396155295"/><cell height="1.0" id="720" width="1.0" x="2762.5422387866515" y="177.3898714457101"/><cell height="1.0" id="721" width="1.0" x="2658.5975048633845" y="168.58347290612522"/><cell height="1.0" id="722" width="1.0" x="2124.8062290457733" y="180.01337591025074"/><cell height="1.0" id="723" width="1.0" x="3190.1312742236732" y="460.2626154797989"/><cell height="1.0" id="724" width="1.0" x="3566.33866710724" y="460.2626154797989"/><cell height="1.0" id="725" width="1.0" x="4024.670292422938" y="460.2626154797989"/><cell height="1.0" id="726" width="1.0" x="2024.6980404565352" y="296.1562021906418"/><cell height="1.0" id="727" width="1.0" x="2399.0614182971976" y="460.2626154797989"/><cell height="1.0" id="728" width="1.0" x="2989.989789659081" y="460.2626154797989"/><cell height="1.0" id="729" width="1.0" x="3841.7435069786875" y="460.2626154797989"/><cell height="1.0" id="730" width="1.0" x="2015.1518235762837" y="469.75530670039217"/><cell height="1.0" id="731" width="1.0" x="1839.3201650746537" y="818.5762707660178"/><cell height="1.0" id="732" width="1.0" x="2791.6900715343554" y="460.2626154797989"/><cell height="1.0" id="733" width="1.0" x="2957.340955983484" y="460.2626154797989"/><cell height="1.0" id="734" width="1.0" x="1666.7179495363694" y="980.2525060341594"/><cell height="1.0" id="735" width="1.0" x="2170.305698771796" y="460.2626154797989"/><cell height="1.0" id="736" width="1.0" x="2836.9474467590608" y="460.2626154797989"/><cell height="1.0" id="737" width="1.0" x="674.6698339865201" y="2347.809086883492"/><cell height="1.0" id="738" width="1.0" x="899.0140830221952" y="2235.1125984461246"/><cell height="1.0" id="739" width="1.0" x="992.7519565516722" y="2090.987453153856"/><cell height="1.0" id="740" width="1.0" x="1116.4315716123065" y="2024.1480440784858"/><cell height="1.0" id="741" width="1.0" x="383.4077900939783" y="1526.4779458037005"/><cell height="1.0" id="742" width="1.0" x="437.9553245349904" y="1563.9321592759752"/><cell height="1.0" id="743" width="1.0" x="574.0093778991846" y="1534.3888678667809"/><cell height="1.0" id="744" width="1.0" x="1916.4443365726916" y="1404.620939643808"/><cell height="1.0" id="745" width="1.0" x="2037.1260588208938" y="1697.5908343802917"/><cell height="1.0" id="746" width="1.0" x="2480.745104320392" y="1846.9096412985082"/><cell height="1.0" id="747" width="1.0" x="1117.2259243300837" y="1739.3918501326789"/><cell height="1.0" id="748" width="1.0" x="1221.58571954328" y="1869.3377219775957"/><cell height="1.0" id="749" width="1.0" x="1162.9948884930868" y="1600.9116041721086"/><cell height="1.0" id="750" width="1.0" x="1239.7673241135453" y="1674.2415164695067"/><cell height="1.0" id="751" width="1.0" x="1274.95117879275" y="1667.8838685828682"/><cell height="1.0" id="752" width="1.0" x="2844.898486515944" y="237.75074227160738"/><cell height="1.0" id="753" width="1.0" x="2543.923871579239" y="144.0196015106098"/><cell height="1.0" id="754" width="1.0" x="2162.850862216951" y="207.70542184651327"/><cell height="1.0" id="755" width="1.0" x="3914.360241328171" y="460.2626154797989"/><cell height="1.0" id="756" width="1.0" x="1172.2140946873546" y="180.5646202633917"/><cell height="1.0" id="757" width="1.0" x="1232.4876862388205" y="189.45112123909757"/><cell height="1.0" id="758" width="1.0" x="1282.7021499170914" y="244.77011292071583"/><cell height="1.0" id="759" width="1.0" x="1320.9860794945107" y="254.65570100930137"/><cell height="1.0" id="760" width="1.0" x="1533.2301275552913" y="249.74733922522455"/><cell height="1.0" id="761" width="1.0" x="3136.8467786016136" y="460.2626154797989"/><cell height="1.0" id="762" width="1.0" x="3348.9284583078997" y="460.2626154797989"/><cell height="1.0" id="763" width="1.0" x="3538.8381687783217" y="460.2626154797989"/><cell height="1.0" id="764" width="1.0" x="3980.999521413612" y="460.2626154797989"/><cell height="1.0" id="765" width="1.0" x="3108.62577748821" y="460.2626154797989"/><cell height="1.0" id="766" width="1.0" x="3078.910991701276" y="460.2626154797989"/><cell height="1.0" id="767" width="1.0" x="3260.5973617608684" y="460.2626154797989"/><cell height="1.0" id="768" width="1.0" x="3023.172608436371" y="460.2626154797989"/><cell height="1.0" id="769" width="1.0" x="3656.8836226014305" y="460.2626154797989"/><cell height="1.0" id="770" width="1.0" x="4168.698166177555" y="460.2626154797989"/><cell height="1.0" id="771" width="1.0" x="4039.7154335904547" y="460.2626154797989"/><cell height="1.0" id="772" width="1.0" x="1974.4781613413093" y="317.5248667535725"/><cell height="1.0" id="773" width="1.0" x="3483.2374605594055" y="460.2626154797989"/><cell height="1.0" id="774" width="1.0" x="1171.8051487464786" y="202.18183100323228"/><cell height="1.0" id="775" width="1.0" x="1239.1787347815462" y="235.96497822452642"/><cell height="1.0" id="776" width="1.0" x="1322.8619215826402" y="293.66513360567495"/><cell height="1.0" id="777" width="1.0" x="1338.2607722503726" y="297.09093991847203"/><cell height="1.0" id="778" width="1.0" x="2198.2878580650026" y="460.2626154797989"/><cell height="1.0" id="779" width="1.0" x="2496.2354490028147" y="460.2626154797989"/><cell height="1.0" id="780" width="1.0" x="2560.8765460014233" y="460.2626154797989"/><cell height="1.0" id="781" width="1.0" x="3029.696148580962" y="460.2626154797989"/><cell height="1.0" id="782" width="1.0" x="3802.1896302748924" y="460.2626154797989"/><cell height="1.0" id="783" width="1.0" x="2552.6929505555863" y="460.2626154797989"/><cell height="1.0" id="784" width="1.0" x="2739.4519750630993" y="460.2626154797989"/><cell height="1.0" id="785" width="1.0" x="2970.2090808505636" y="460.2626154797989"/><cell height="1.0" id="786" width="1.0" x="2576.6869141920397" y="460.2626154797989"/><cell height="1.0" id="787" width="1.0" x="3148.245910177158" y="460.2626154797989"/><cell height="1.0" id="788" width="1.0" x="3754.370251052386" y="460.2626154797989"/><cell height="1.0" id="789" width="1.0" x="3691.3151273971775" y="460.2626154797989"/><cell height="1.0" id="790" width="1.0" x="1987.232421000895" y="459.1288458790889"/><cell height="1.0" id="791" width="1.0" x="3477.106679560725" y="460.2626154797989"/><cell height="1.0" id="792" width="1.0" x="977.4126204735161" y="763.5701660434481"/><cell height="1.0" id="793" width="1.0" x="977.0367253661124" y="826.2833251733116"/><cell height="1.0" id="794" width="1.0" x="1040.5026958317894" y="836.0024427649473"/><cell height="1.0" id="795" width="1.0" x="1173.7425897822018" y="813.5037273600219"/><cell height="1.0" id="796" width="1.0" x="1316.5330805732187" y="808.2154990512494"/><cell height="1.0" id="797" width="1.0" x="1872.1153022296276" y="796.6929569589072"/><cell height="1.0" id="798" width="1.0" x="2247.877069352425" y="460.2626154797989"/><cell height="1.0" id="799" width="1.0" x="2760.95930852518" y="460.2626154797989"/><cell height="1.0" id="800" width="1.0" x="3130.0488307162577" y="460.2626154797989"/><cell height="1.0" id="801" width="1.0" x="2351.331086527168" y="460.2626154797989"/><cell height="1.0" id="802" width="1.0" x="2324.001251370495" y="460.2626154797989"/><cell height="1.0" id="803" width="1.0" x="2672.9795801519163" y="460.2626154797989"/><cell height="1.0" id="804" width="1.0" x="2178.382477731914" y="460.2626154797989"/><cell height="1.0" id="805" width="1.0" x="2624.686910233035" y="460.2626154797989"/><cell height="1.0" id="806" width="1.0" x="3517.691891768" y="460.2626154797989"/><cell height="1.0" id="807" width="1.0" x="2903.1772880353174" y="460.2626154797989"/><cell height="1.0" id="808" width="1.0" x="777.7483332536182" y="1049.4800704911308"/><cell height="1.0" id="809" width="1.0" x="869.8854193662092" y="1061.3194871771716"/><cell height="1.0" id="810" width="1.0" x="875.6174047632788" y="1102.6690980294802"/><cell height="1.0" id="811" width="1.0" x="1002.4811984199013" y="1088.7133473753913"/><cell height="1.0" id="812" width="1.0" x="1296.195706511226" y="1025.9729381390257"/><cell height="1.0" id="813" width="1.0" x="1593.9316566474427" y="1032.957685891563"/><cell height="1.0" id="814" width="1.0" x="2116.7603158130723" y="460.2626154797989"/><cell height="1.0" id="815" width="1.0" x="2337.2745585901866" y="460.2626154797989"/><cell height="1.0" id="816" width="1.0" x="2772.9720946821635" y="460.2626154797989"/><cell height="1.0" id="817" width="1.0" x="1197.5919330083138" y="1297.8948508847634"/><cell height="1.0" id="818" width="1.0" x="2089.4245421440655" y="460.2626154797989"/><cell height="1.0" id="819" width="1.0" x="1444.462147332556" y="1090.6639801865647"/><cell height="1.0" id="820" width="1.0" x="2299.1148670799344" y="460.2626154797989"/><cell height="1.0" id="821" width="1.0" x="3186.6513611235373" y="460.2626154797989"/><cell height="1.0" id="822" width="1.0" x="2468.517994962386" y="460.2626154797989"/><cell height="1.0" id="823" width="1.0" x="828.5062848816718" y="2656.579457774531"/><cell height="1.0" id="824" width="1.0" x="764.2112598370303" y="2524.313083324707"/><cell height="1.0" id="825" width="1.0" x="877.4271339584715" y="2240.971367496317"/><cell height="1.0" id="826" width="1.0" x="1022.9444866161301" y="2092.3428702207557"/><cell height="1.0" id="827" width="1.0" x="1115.257745612325" y="2007.0577701478423"/><cell height="1.0" id="828" width="1.0" x="1654.812824310839" y="1868.7145403074032"/><cell height="1.0" id="829" width="1.0" x="1989.8038026695995" y="1542.6326461909666"/><cell height="1.0" id="830" width="1.0" x="2001.2625098538715" y="1867.565854075885"/><cell height="1.0" id="831" width="1.0" x="1973.0639664733212" y="2205.248948821714"/><cell height="1.0" id="832" width="1.0" x="1338.2239700195755" y="2065.121124397371"/><cell height="1.0" id="833" width="1.0" x="1360.4210434377073" y="2051.932886747192"/><cell height="1.0" id="834" width="1.0" x="1390.0536733660524" y="2053.1494485482663"/><cell height="1.0" id="835" width="1.0" x="1481.031575992461" y="2095.2830472805194"/><cell height="1.0" id="836" width="1.0" x="1604.4163614819736" y="2082.079388006111"/><cell height="1.0" id="837" width="1.0" x="1596.9018449349487" y="2094.608678479128"/><cell height="1.0" id="838" width="1.0" x="1559.471353498096" y="1900.9985623798998"/><cell height="1.0" id="839" width="1.0" x="1524.5251828642477" y="1945.5392920234713"/><cell height="1.0" id="840" width="1.0" x="2232.3262192241696" y="1755.4875160853103"/><cell height="1.0" id="841" width="1.0" x="2437.996200436204" y="2487.2040800945906"/><cell height="1.0" id="842" width="1.0" x="2639.818943910321" y="2075.0684924119114"/><cell height="1.0" id="843" width="1.0" x="367.3698374068638" y="1468.278208235918"/><cell height="1.0" id="844" width="1.0" x="764.5628648162418" y="1279.281090576867"/><cell height="1.0" id="845" width="1.0" x="1094.0852857664568" y="1120.7983423141031"/><cell height="1.0" id="846" width="1.0" x="1120.093285793972" y="1137.796144746429"/><cell height="1.0" id="847" width="1.0" x="910.7807232387407" y="2804.6923051452427"/><cell height="1.0" id="848" width="1.0" x="463.19981320003046" y="1995.1015071649572"/><cell height="1.0" id="849" width="1.0" x="625.8548477690164" y="1351.8894199025292"/><cell height="1.0" id="850" width="1.0" x="1035.8194783541153" y="3051.5048196235903"/><cell height="1.0" id="851" width="1.0" x="949.7256526765244" y="2885.153242397267"/><cell height="1.0" id="852" width="1.0" x="945.8052939830019" y="2877.961685143949"/><cell height="1.0" id="853" width="1.0" x="388.2266922779895" y="1544.7044909340366"/><cell height="1.0" id="854" width="1.0" x="869.8341451039365" y="1308.568900207914"/><cell height="1.0" id="855" width="1.0" x="1069.273233779163" y="1164.7671410631474"/><cell height="1.0" id="856" width="1.0" x="833.8599189365506" y="1336.4171692670357"/><cell height="1.0" id="857" width="1.0" x="877.2056430253675" y="2724.149811140502"/><cell height="1.0" id="858" width="1.0" x="410.2966705546603" y="1904.8259432916961"/><cell height="1.0" id="859" width="1.0" x="447.51543240158264" y="1957.2924210443011"/><cell height="1.0" id="860" width="1.0" x="533.6138510676968" y="2098.0585550468136"/><cell height="1.0" id="861" width="1.0" x="469.995960903782" y="2004.304123655003"/><cell height="1.0" id="862" width="1.0" x="577.6350093878178" y="2182.19756345649"/><cell height="1.0" id="863" width="1.0" x="567.2441951690047" y="2154.112852202513"/><cell height="1.0" id="864" width="1.0" x="615.543391703609" y="1435.5170886286242"/><cell height="1.0" id="865" width="1.0" x="621.1914907754775" y="1428.7369931160688"/><cell height="1.0" id="866" width="1.0" x="1057.3898959639919" y="3027.022031020729"/><cell height="1.0" id="867" width="1.0" x="1051.849099857694" y="3038.139044149682"/><cell height="1.0" id="868" width="1.0" x="421.48368532394693" y="1597.303231862173"/><cell height="1.0" id="869" width="1.0" x="876.7414854611592" y="1321.7977394543468"/><cell height="1.0" id="870" width="1.0" x="1051.94550674507" y="1192.984636454236"/><cell height="1.0" id="871" width="1.0" x="992.984776780242" y="2193.2419112588286"/><cell height="1.0" id="872" width="1.0" x="1159.0987073804758" y="2562.050906363865"/><cell height="1.0" id="873" width="1.0" x="587.7880941329373" y="1766.3673067757109"/><cell height="1.0" id="874" width="1.0" x="580.0438642416556" y="1752.22224438995"/><cell height="1.0" id="875" width="1.0" x="676.8674456060531" y="1844.1858156399808"/><cell height="1.0" id="876" width="1.0" x="677.055081378949" y="1853.2413270447792"/><cell height="1.0" id="877" width="1.0" x="775.041545936332" y="1969.1814242378537"/><cell height="1.0" id="878" width="1.0" x="775.6715457121746" y="1988.8921045641987"/><cell height="1.0" id="879" width="1.0" x="714.62212553496" y="1582.5541601108512"/><cell height="1.0" id="880" width="1.0" x="746.5502606682934" y="1585.1832675865944"/><cell height="1.0" id="881" width="1.0" x="1015.3991247503619" y="2216.1185665421626"/><cell height="1.0" id="882" width="1.0" x="1396.5341368707732" y="2821.3854942915586"/><cell height="1.0" id="883" width="1.0" x="636.5755314243066" y="1536.2073104371839"/><cell height="1.0" id="884" width="1.0" x="924.9202949029778" y="1470.8506555031026"/><cell height="1.0" id="885" width="1.0" x="1310.838479365163" y="1284.2922658440298"/><cell height="1.0" id="886" width="1.0" x="1151.4759260306082" y="2078.730410257983"/><cell height="1.0" id="887" width="1.0" x="1330.8855950250404" y="2486.9062960009587"/><cell height="1.0" id="888" width="1.0" x="738.280154220705" y="1700.3771519166894"/><cell height="1.0" id="889" width="1.0" x="756.2884754666821" y="1720.9222862585148"/><cell height="1.0" id="890" width="1.0" x="815.4051224763792" y="1817.860122905407"/><cell height="1.0" id="891" width="1.0" x="815.6223138858203" y="1776.7387818826219"/><cell height="1.0" id="892" width="1.0" x="947.0196525719181" y="1901.9078631448456"/><cell height="1.0" id="893" width="1.0" x="941.5424867068217" y="1919.076646193062"/><cell height="1.0" id="894" width="1.0" x="774.9560246774753" y="1604.3651496285092"/><cell height="1.0" id="895" width="1.0" x="814.0007312207705" y="1626.0223469759935"/><cell height="1.0" id="896" width="1.0" x="1175.5931951540538" y="2099.987762070474"/><cell height="1.0" id="897" width="1.0" x="1537.8405673634397" y="2738.7768962076325"/><cell height="1.0" id="898" width="1.0" x="1270.2693261874347" y="1319.3018601750032"/><cell height="1.0" id="899" width="1.0" x="1508.4667240721074" y="1145.1994084090184"/><cell height="1.0" id="900" width="1.0" x="1498.8066623812329" y="1436.3857923435417"/><cell height="1.0" id="901" width="1.0" x="1372.4862925022785" y="2411.929035692615"/><cell height="1.0" id="902" width="1.0" x="883.6473257674362" y="1641.239542907229"/><cell height="1.0" id="903" width="1.0" x="840.0630998100302" y="1571.1691966488056"/><cell height="1.0" id="904" width="1.0" x="1030.2297864923994" y="1591.198352547789"/><cell height="1.0" id="905" width="1.0" x="1014.1456737527182" y="1594.0286326568603"/><cell height="1.0" id="906" width="1.0" x="1063.9541077118802" y="1850.0026711591377"/><cell height="1.0" id="907" width="1.0" x="1051.9027828139128" y="1852.5781117681377"/><cell height="1.0" id="908" width="1.0" x="959.5947910633002" y="1468.024483337706"/><cell height="1.0" id="909" width="1.0" x="920.4850053291392" y="1517.978892431372"/><cell height="1.0" id="910" width="1.0" x="1699.3484793145099" y="1381.2842925437787"/><cell height="1.0" id="911" width="1.0" x="1554.0099118363655" y="2723.5636600969633"/><cell height="1.0" id="912" width="1.0" x="2262.295921172612" y="460.2626154797989"/><cell height="1.0" id="913" width="1.0" x="2101.3397168636207" y="940.2465586533967"/><cell height="1.0" id="914" width="1.0" x="1708.6167466158627" y="1304.9431810194392"/><cell height="1.0" id="915" width="1.0" x="1987.1913707479453" y="1744.2450947040306"/><cell height="1.0" id="916" width="1.0" x="1168.4371965571518" y="1408.7652283595262"/><cell height="1.0" id="917" width="1.0" x="1384.289073919249" y="1549.0262360384927"/><cell height="1.0" id="918" width="1.0" x="1473.8354165872538" y="1533.111731408373"/><cell height="1.0" id="919" width="1.0" x="1416.9820835566534" y="1322.3947972062647"/><cell height="1.0" id="920" width="1.0" x="2144.9186713503836" y="1244.2671774510814"/><cell height="1.0" id="921" width="1.0" x="2351.063078828152" y="2198.2545777351775"/><cell height="1.0" id="922" width="1.0" x="2984.1388399735006" y="460.2626154797989"/><cell height="1.0" id="923" width="1.0" x="2269.0883740794015" y="1201.7709469803392"/><cell height="1.0" id="924" width="1.0" x="2443.7098093979384" y="1476.7025971495782"/><cell height="1.0" id="925" width="1.0" x="1705.2930867413743" y="1241.6990191819007"/><cell height="1.0" id="926" width="1.0" x="1698.097480194654" y="1343.173069166696"/><cell height="1.0" id="927" width="1.0" x="1749.3281520883206" y="1384.0653790827855"/><cell height="1.0" id="928" width="1.0" x="1671.8377347295032" y="1230.4292126951273"/><cell height="1.0" id="929" width="1.0" x="3119.7495477293864" y="460.2626154797989"/><cell height="1.0" id="930" width="1.0" x="2527.7416861029824" y="1796.0817727574722"/><cell height="1.0" id="931" width="1.0" x="1654.7457269366369" y="1604.6637837157382"/><cell height="1.0" id="932" width="1.0" x="1740.5905869292565" y="1675.213358802649"/><cell height="1.0" id="933" width="1.0" x="1633.2938129379158" y="1786.9411558436227"/><cell height="1.0" id="934" width="1.0" x="1839.322990450813" y="1482.093599174787"/><cell height="1.0" id="935" width="1.0" x="2547.0445220840757" y="1346.6985747766967"/><cell height="1.0" id="936" width="1.0" x="2790.7003362616238" y="1754.6713952810192"/><cell height="1.0" id="937" width="1.0" x="2663.85053788532" y="1363.0899365950972"/><cell height="1.0" id="938" width="1.0" x="1700.4700664535108" y="2252.256952445029"/><cell height="1.0" id="939" width="1.0" x="1934.6129397423783" y="2179.4659753288197"/><cell height="1.0" id="940" width="1.0" x="2084.9861915680253" y="2020.6311615037994"/><cell height="1.0" id="941" width="1.0" x="1894.4008162538798" y="1817.2780164758142"/><cell height="1.0" id="942" width="1.0" x="2675.627476975411" y="1739.258926017204"/><cell height="1.0" id="943" width="1.0" x="2626.641036988919" y="2121.7623084064076"/><cell height="1.0" id="944" width="1.0" x="2679.0513583232696" y="1992.7869415523846"/><cell height="1.0" id="945" width="1.0" x="1115.9470511097093" y="1727.5885610007463"/><cell height="1.0" id="946" width="1.0" x="1180.592575647218" y="1810.0581585225978"/><cell height="1.0" id="947" width="1.0" x="1134.3136511829289" y="1573.0808661563806"/><cell height="1.0" id="948" width="1.0" x="1810.9618888313103" y="2577.42093059628"/><cell height="1.0" id="949" width="1.0" x="1523.9774641743497" y="2093.268605367486"/><cell height="1.0" id="950" width="1.0" x="1217.1437640893269" y="1567.0852506826777"/><cell height="1.0" id="951" width="1.0" x="2175.706942149402" y="2378.07101504298"/><cell height="1.0" id="952" width="1.0" x="1297.2508167573642" y="1652.3860763970183"/><cell height="1.0" id="953" width="1.0" x="2218.2409906324483" y="2350.1627195389465"/><cell height="1.0" id="954" width="1.0" x="2251.789166975516" y="2326.837792226033"/><cell height="1.0" id="955" width="1.0" x="2179.1320165134493" y="1593.7350485975312"/><cell height="1.0" id="956" width="1.0" x="3124.3329654715935" y="1703.514830993105"/><cell height="1.0" id="964" width="1.0" x="2824.261460637758" y="204.83918802336478"/><cell height="1.0" id="965" width="1.0" x="2635.297323270211" y="180.57102733529462"/><cell height="1.0" id="966" width="1.0" x="2163.988486161544" y="198.0303824381552"/><cell height="1.0" id="967" width="1.0" x="2995.7595058874463" y="460.2626154797989"/><cell height="1.0" id="968" width="1.0" x="3376.3819678615487" y="460.2626154797989"/><cell height="1.0" id="969" width="1.0" x="3959.1779692717387" y="460.2626154797989"/><cell height="1.0" id="970" width="1.0" x="2371.2556254015617" y="294.21039189875216"/><cell height="1.0" id="971" width="1.0" x="1960.1357885634466" y="314.02715522092967"/><cell height="1.0" id="972" width="1.0" x="2141.02010563565" y="460.2626154797989"/><cell height="1.0" id="973" width="1.0" x="3037.610445364914" y="460.2626154797989"/><cell height="1.0" id="974" width="1.0" x="3849.1242090932997" y="460.2626154797989"/><cell height="1.0" id="975" width="1.0" x="1986.22077482521" y="502.3432775190509"/><cell height="1.0" id="976" width="1.0" x="1788.3460979165488" y="827.4097283577776"/><cell height="1.0" id="977" width="1.0" x="2570.0414879218583" y="460.2626154797989"/><cell height="1.0" id="978" width="1.0" x="2948.4059024037174" y="460.2626154797989"/><cell height="1.0" id="979" width="1.0" x="1721.1405274221256" y="888.6037451259649"/><cell height="1.0" id="980" width="1.0" x="2363.042707399956" y="460.2626154797989"/><cell height="1.0" id="981" width="1.0" x="2805.745093310565" y="460.2626154797989"/><cell height="1.0" id="982" width="1.0" x="702.63285020806" y="2401.9676106395054"/><cell height="1.0" id="983" width="1.0" x="895.8471676176401" y="2284.222918120274"/><cell height="1.0" id="984" width="1.0" x="1057.1108395396132" y="2186.817912648153"/><cell height="1.0" id="985" width="1.0" x="1121.68413229616" y="1973.9936894343527"/><cell height="1.0" id="986" width="1.0" x="224.01151562317455" y="1617.1428531684223"/><cell height="1.0" id="987" width="1.0" x="295.202439175308" y="1743.33912015143"/><cell height="1.0" id="988" width="1.0" x="273.5781822461779" y="1567.4708015047659"/><cell height="1.0" id="989" width="1.0" x="369.1662546086069" y="1666.7593707811802"/><cell height="1.0" id="990" width="1.0" x="416.0279426854546" y="1584.7916519918554"/><cell height="1.0" id="991" width="1.0" x="598.4991739487444" y="1545.8866660765366"/><cell height="1.0" id="992" width="1.0" x="1905.5991332250082" y="1373.1236631401646"/><cell height="1.0" id="993" width="1.0" x="2040.8701476962674" y="1733.108583906263"/><cell height="1.0" id="994" width="1.0" x="2479.4741639413514" y="1855.9888357250943"/><cell height="1.0" id="995" width="1.0" x="1115.832356820174" y="1733.410970009878"/><cell height="1.0" id="996" width="1.0" x="1108.9786759901062" y="1787.9956831194459"/><cell height="1.0" id="997" width="1.0" x="1138.1108201531943" y="1558.3362204200848"/><cell height="1.0" id="998" width="1.0" x="1316.2259533572378" y="1833.9031300593388"/><cell height="1.0" id="999" width="1.0" x="1226.881839284974" y="1571.9790766608294"/><cell height="1.0" id="1000" width="1.0" x="1373.484731511698" y="1736.3210372077738"/></constraints></graphical></assignment></model>