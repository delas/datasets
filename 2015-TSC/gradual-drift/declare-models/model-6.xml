<?xml version="1.0" encoding="UTF-8"?><model><assignment language="ConDec" name="new model"><activitydefinitions><activity id="1" name="Register-complete"/><activity id="2" name="Create questionnaire-complete"/><activity id="3" name="Decide low/high-complete"/><activity id="4" name="Send questionnaire-complete"/><activity id="5" name="Low claim split-complete"/><activity id="6" name="Receive response-complete"/><activity id="7" name="Low Insurance Check-complete"/><activity id="8" name="Low Medical History Check-complete"/><activity id="9" name="Low claim join-complete"/><activity id="10" name="Prepare Notification-complete"/><activity id="11" name="By Email-complete"/><activity id="12" name="By Post-complete"/><activity id="13" name="Notification sent-complete"/><activity id="14" name="Archive-complete"/><activity id="15" name="High Insurance Check-complete"/><activity id="16" name="Skip response-complete"/><activity id="17" name="High Medical History Check-complete"/><activity id="18" name="By Phone-complete"/><activity id="19" name="Contact Hospital-complete"/></activitydefinitions><constraintdefinitions><constraint id="1" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="2" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="3" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="4" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="5" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="6" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="7" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="8" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="9" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="10" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="11" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="12" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="13" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="14" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="15" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="16" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="17" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="18" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="19" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="20" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="21" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="22" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="23" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="24" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="25" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="26" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="27" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="28" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="29" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="30" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="31" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="32" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="33" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="34" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="35" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="36" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="37" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="38" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="39" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="40" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="41" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="42" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="43" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="44" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="45" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="46" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="47" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="48" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="49" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="50" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="51" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="52" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="53" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="54" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="55" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="56" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="57" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="58" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="59" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="60" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="61" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="62" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="63" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="64" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="65" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="66" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="67" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="68" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="69" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="70" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="71" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="72" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="73" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="74" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="75" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="76" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="77" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="78" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="79" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="80" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="81" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="82" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="83" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="84" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="85" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="86" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="87" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="88" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="89" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="90" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="91" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="92" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="93" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="94" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="95" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="96" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="97" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="98" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="99" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="100" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="101" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="102" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="103" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="104" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="105" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="106" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="107" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="108" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="109" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="110" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="111" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="112" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="113" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="114" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="115" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="116" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="117" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="118" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="119" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="120" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="121" mandatory="true"><condition></condition><name>choice</name><template><description>At least one from A and B has to be executed.</description><display>choice</display><name>choice</name><text>(  &lt;&gt; ( "A" ) \/ &lt;&gt;( "B" )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="122" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Register-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="123" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Create questionnaire-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="124" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Decide low/high-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="125" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="126" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="127" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;By Email-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;By Email-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="128" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Notification sent-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Notification sent-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="129" mandatory="true"><condition></condition><name>existence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &lt;b&gt;Archive-complete&lt;/b&gt; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &lt;b&gt;Archive-complete&lt;/b&gt;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &lt;b&gt;Archive-complete&lt;/b&gt; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="130" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="131" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Decide low/high-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="132" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="133" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="134" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;By Email-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;By Email-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="135" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="136" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Register-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Register-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Register-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Register-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="137" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="138" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="139" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;By Email-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;By Email-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="140" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="141" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Create questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="142" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; is executed, activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="143" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="144" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; is executed, activity &lt;b&gt;By Email-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, and task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;By Email-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="145" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="146" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Decide low/high-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="147" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="148" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;By Email-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;By Email-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="149" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="150" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Send questionnaire-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="151" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="152" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="153" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low claim join-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="154" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="155" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;By Email-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;By Email-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="156" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="157" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim split-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim split-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="158" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Receive response-complete&lt;/b&gt; is executed, activity &lt;b&gt;By Email-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Receive response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;By Email-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="159" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Receive response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Receive response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="160" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Receive response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Receive response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Receive response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="161" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low claim join-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="162" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="163" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;By Email-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;By Email-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="164" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="165" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="166" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Low claim join-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Low claim join-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="167" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="168" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;By Email-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;By Email-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="169" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="170" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="171" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim join-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim join-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="172" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim join-complete&lt;/b&gt; is executed, activity &lt;b&gt;By Email-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim join-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, and task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;By Email-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="173" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim join-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim join-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="174" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Low claim join-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Low claim join-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Low claim join-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="175" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; is executed, activity &lt;b&gt;By Email-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed, and task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;By Email-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="176" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="177" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="178" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="179" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="180" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Contact Hospital-complete&lt;/b&gt; is executed, activity &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="181" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Email-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Email-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Email-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="182" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Email-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Email-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Email-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="183" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;By Email-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;By Email-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="184" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Skip response-complete&lt;/b&gt; is executed, activity &lt;b&gt;By Email-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Skip response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;By Email-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="185" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;By Email-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;By Email-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="186" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Contact Hospital-complete&lt;/b&gt; is executed, activity &lt;b&gt;By Email-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, and task &lt;b&gt;By Email-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;By Email-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;By Email-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="187" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Post-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Post-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Post-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Post-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Post-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="188" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Post-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Post-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Post-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Post-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Post-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Post-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="189" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Notification sent-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Notification sent-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="190" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="191" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Skip response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Skip response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="192" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="193" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Phone-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Phone-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Phone-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="194" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Contact Hospital-complete&lt;/b&gt; is executed, activity &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Notification sent-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Notification sent-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Notification sent-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="195" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Insurance Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="196" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Skip response-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Skip response-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Skip response-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="197" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;High Medical History Check-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="198" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;By Phone-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;By Phone-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;By Phone-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;By Phone-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="199" mandatory="true"><condition></condition><name>response</name><template><description>Whenever activity &lt;b&gt;Contact Hospital-complete&lt;/b&gt; is executed, activity &lt;b&gt;Archive-complete&lt;/b&gt; has to be eventually executed afterwards.</description><display>response</display><name>response</name><text>[]( ( "A" -&gt; &lt;&gt;( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;&lt;p&gt; There are  two options when this constraint is satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has not been executed yet, or&lt;/li&gt;
&lt;li&gt;Task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, and task &lt;b&gt;Archive-complete&lt;/b&gt; has been executed at least once after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;&lt;p&gt;This constraint is temporarily violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; has been executed, 
and task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Execute task &lt;b&gt;Archive-complete&lt;/b&gt; at least once to satisfy this constraint. &lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;&lt;p&gt;This constraint is (permanently) violated when the instance is closed 
such that task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed, 
but task &lt;b&gt;Archive-complete&lt;/b&gt; was not executed after task &lt;b&gt;Contact Hospital-complete&lt;/b&gt;.&lt;/p&gt;
&lt;/html&gt;&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="200" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Create questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Create questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="201" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Decide low/high-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Decide low/high-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="202" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="203" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim split-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Low claim split-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim split-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="204" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Receive response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Receive response-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Receive response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="205" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="206" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="207" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="208" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="209" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="210" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="211" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="212" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="213" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="214" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Skip response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Skip response-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Skip response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="215" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="216" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="217" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Register-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="218" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="219" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim split-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low claim split-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim split-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="220" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Receive response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Receive response-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Receive response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="221" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="222" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="223" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="224" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="225" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="226" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="227" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="228" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="229" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="230" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Skip response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Skip response-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Skip response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="231" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="232" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="233" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Create questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="234" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="235" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim split-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Low claim split-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim split-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="236" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Receive response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Receive response-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Receive response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="237" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="238" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="239" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="240" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="241" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="242" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="243" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="244" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="245" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="246" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Skip response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Skip response-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Skip response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="247" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="248" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="249" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Decide low/high-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;Decide low/high-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="250" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Receive response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Receive response-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Receive response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Receive response-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="251" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="252" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="253" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="254" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="255" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="256" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="257" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="258" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="259" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Skip response-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Skip response-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Skip response-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Skip response-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="260" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="261" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="262" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Send questionnaire-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="263" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="264" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="265" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low claim split-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Low claim split-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="266" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="267" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Low claim join-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Low claim join-complete&lt;/b&gt; was executed before task &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="268" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Email-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Email-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Email-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="269" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="270" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="271" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="272" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Prepare Notification-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="273" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Post-complete&lt;/b&gt; has to be preceded by &lt;b&gt;By Email-complete&lt;/b&gt;. &lt;b&gt;By Post-complete&lt;/b&gt; can happen only after &lt;b&gt;By Email-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Post-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;By Email-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Post-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Post-complete&lt;/b&gt; was executed before task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="274" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;By Email-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;By Email-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Notification sent-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;By Email-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed before task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="275" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;By Email-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;By Email-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;By Email-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="276" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;By Phone-complete&lt;/b&gt; has to be preceded by &lt;b&gt;By Email-complete&lt;/b&gt;. &lt;b&gt;By Phone-complete&lt;/b&gt; can happen only after &lt;b&gt;By Email-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;By Phone-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;By Email-complete&lt;/b&gt; was executed, and then task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;By Phone-complete&lt;/b&gt; was executed before task &lt;b&gt;By Email-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="277" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Notification sent-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Notification sent-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Archive-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;Notification sent-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Archive-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Archive-complete&lt;/b&gt; was executed before task &lt;b&gt;Notification sent-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="278" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;High Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High Insurance Check-complete&lt;/b&gt;. &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;High Insurance Check-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, and then task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed before task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="279" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High Insurance Check-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;High Insurance Check-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;High Insurance Check-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;High Insurance Check-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="280" mandatory="true"><condition></condition><name>precedence</name><template><description>&lt;b&gt;Contact Hospital-complete&lt;/b&gt; has to be preceded by &lt;b&gt;High Medical History Check-complete&lt;/b&gt;. &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can happen only after &lt;b&gt;High Medical History Check-complete&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &lt;b&gt;High Medical History Check-complete&lt;/b&gt; was executed, and then task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &lt;b&gt;Contact Hospital-complete&lt;/b&gt; was executed before task &lt;b&gt;High Medical History Check-complete&lt;/b&gt;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="281" mandatory="true"><condition></condition><name>chain succession</name><template><description>A and B can happen only next to each other.</description><display>chain succession</display><name>chain succession</name><text>[](  ( "A" = X( "B" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="282" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="283" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="284" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="285" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="286" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="287" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="288" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="289" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="290" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="291" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="292" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="293" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="294" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="295" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="296" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="297" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="298" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="299" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="300" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="301" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="302" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="303" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="304" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="305" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="306" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="307" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="308" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="309" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="310" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="311" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="312" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="313" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="314" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="315" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="316" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="317" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="318" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="319" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="320" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="321" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="322" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="323" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="324" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="325" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="326" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="327" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="328" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="329" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="330" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="331" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="332" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="333" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="334" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="335" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="336" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="337" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="338" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="339" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="340" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="341" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="342" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="343" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="344" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="345" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="346" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="347" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="348" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="349" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="350" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="351" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="352" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="353" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="354" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="355" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="356" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="357" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="358" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="359" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="360" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="361" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="362" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="363" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="364" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="365" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="366" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="367" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="368" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="369" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="370" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="371" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="372" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="373" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="374" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="375" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="376" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="377" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="378" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="379" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="380" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="381" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="382" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="383" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="384" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="385" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="386" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="387" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="388" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="389" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="390" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="391" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="392" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="393" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="394" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="395" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="396" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="397" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="398" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="399" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="400" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="401" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="402" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="403" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="404" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="405" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="406" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="407" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="408" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="409" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="410" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="411" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="412" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="413" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="414" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="415" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="416" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="417" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="418" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="419" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="420" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="421" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="422" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="423" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="424" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="425" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="426" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="427" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="428" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="429" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="430" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="431" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="432" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="433" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="434" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="435" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="436" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="437" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="438" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="439" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="440" mandatory="true"><condition></condition><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="441" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="442" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="443" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="444" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="445" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="446" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="447" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="448" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="449" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="450" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="451" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="452" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="453" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="454" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="455" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="456" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="457" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="458" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="459" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="460" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="461" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="462" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="463" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="464" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="465" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="466" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="467" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="468" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="469" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="470" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="471" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="472" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="473" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="474" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="475" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="476" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="477" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="478" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="479" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="480" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="481" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="482" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="483" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="484" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="485" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="486" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="487" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="488" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="489" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="490" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="491" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="492" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="493" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="494" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="495" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="496" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="497" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="498" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="499" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="500" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="501" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="502" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="503" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="504" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="505" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="506" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="507" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="508" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="509" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="510" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="511" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="512" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="513" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="514" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="515" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="516" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="517" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="518" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="519" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="520" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="521" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="522" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="523" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="524" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="525" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="526" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="527" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="528" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="529" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="530" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="531" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="532" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="533" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="534" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="535" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="536" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="537" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="538" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="539" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="540" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="541" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="542" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="543" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="544" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="545" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="546" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="547" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="548" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="549" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="550" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="551" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="552" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="553" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="554" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="555" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="556" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="557" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="558" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="559" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="560" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="561" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="562" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="563" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="564" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="565" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="566" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="567" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="568" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="569" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="570" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="571" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="572" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="573" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="574" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="575" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="576" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="577" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="578" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="579" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="580" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="581" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="582" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="583" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="584" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="585" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="586" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="587" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="588" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="589" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="590" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="591" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="592" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="593" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="594" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="595" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="596" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="597" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="598" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="599" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="600" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="601" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="602" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="603" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="604" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="605" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="606" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="607" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="608" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="609" mandatory="true"><condition></condition><name>not succession</name><template><description>After A there cannot be eventually a B and Before B there cannot be an A</description><display>not succession</display><name>not succession</name><text>[]( ( "A" -&gt; !( &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="610" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="611" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="612" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="613" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="614" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="615" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="616" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="617" mandatory="true"><condition></condition><name>exactly1</name><template><description>A has to happen exactly once.</description><display>1</display><name>exactly1</name><text>(  &lt;&gt; ("A") /\ ! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) ) )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="618" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="619" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="620" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="621" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="622" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="623" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="624" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="625" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="626" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="627" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="628" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="629" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="630" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="631" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="632" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="633" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="634" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="635" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="636" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="637" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="638" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="639" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="640" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="641" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="642" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="643" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="644" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="645" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="646" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="647" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="648" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="649" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="650" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="651" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="652" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="653" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="654" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="655" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="656" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="657" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="658" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="659" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="660" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="661" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="662" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="663" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="664" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="665" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="666" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="667" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="668" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="669" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="670" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="671" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="672" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="673" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="674" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="675" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="676" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Post-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="677" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="678" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="679" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="680" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="681" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="682" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="683" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="684" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="685" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="686" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Phone-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="687" mandatory="true"><condition></condition><name>alternate response</name><template><description>After each A is executed at least one B is executed. Another A can be executed again only after the first B.</description><display>alternate response</display><name>alternate response</name><text>[]( ( "A" -&gt; X(( !("A") U "B" ))))</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="688" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="689" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="690" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="691" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="692" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="693" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="694" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="695" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="696" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="697" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="698" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="699" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="700" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="701" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="702" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="703" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="704" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="705" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="706" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="707" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="708" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="709" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="710" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="711" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="712" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="713" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="714" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="715" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="716" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="717" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="718" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="719" mandatory="true"><condition></condition><name>alternate succession</name><template><description>Alternate response and alternate precedence:
1. After each A is executed at least one B is executed. Another A can be executed again only after the first B.
and
2. B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate succession</display><name>alternate succession</name><text>( []( (  "A"  -&gt; X(( ! (  "A" ) U  "B" ) )) ) /\  (  (            (! (  "B" ) U  "A")         \/  ([](!("B")))      ) /\ [] ( ( "B" -&gt;  X(               (               ( ! (   "B" ) U  "A" )\/([](!("B")))                   )) ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="720" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="721" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="722" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="723" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="724" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="725" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="726" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="727" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="728" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="729" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="730" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="731" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="732" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="733" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="734" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="735" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="736" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="737" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="738" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="739" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="740" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="741" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="742" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="743" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="744" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="745" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="746" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="747" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="748" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="749" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="750" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="751" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="752" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="753" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="754" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="755" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim split-complete"/></branches></parameter></constraintparameters></constraint><constraint id="756" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="757" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="758" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="759" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="760" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="761" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="762" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="763" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="764" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="765" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="766" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="767" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="768" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="769" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="770" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="771" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="772" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="773" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="774" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="775" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="776" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="777" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="778" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="779" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="780" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="781" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="782" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="783" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="784" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="785" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="786" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="787" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="788" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="789" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="790" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="791" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="792" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="793" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Post-complete"/></branches></parameter></constraintparameters></constraint><constraint id="794" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="795" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="796" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Phone-complete"/></branches></parameter></constraintparameters></constraint><constraint id="797" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="798" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="799" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="800" mandatory="true"><condition></condition><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="801" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Create questionnaire-complete&lt;/b&gt;.
and
2. &lt;b&gt;Create questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Create questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="802" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Decide low/high-complete&lt;/b&gt;.
and
2. &lt;b&gt;Decide low/high-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Decide low/high-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="803" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.
and
2. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="804" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.
and
2. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="805" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;By Email-complete&lt;/b&gt;.
and
2. &lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="806" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="807" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Register-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Register-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Register-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="808" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Create questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.
and
2. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="809" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Create questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.
and
2. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="810" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Create questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;By Email-complete&lt;/b&gt;.
and
2. &lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="811" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Create questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="812" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Create questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Create questionnaire-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Create questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="813" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Decide low/high-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Send questionnaire-complete&lt;/b&gt;.
and
2. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Send questionnaire-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="814" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Decide low/high-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.
and
2. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="815" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Decide low/high-complete&lt;/b&gt; there has to be at least one &lt;b&gt;By Email-complete&lt;/b&gt;.
and
2. &lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="816" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Decide low/high-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="817" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Decide low/high-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Decide low/high-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Decide low/high-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="818" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Send questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Prepare Notification-complete&lt;/b&gt;.
and
2. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Prepare Notification-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="819" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Send questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;By Email-complete&lt;/b&gt;.
and
2. &lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="820" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Send questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="821" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Send questionnaire-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Send questionnaire-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Send questionnaire-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="822" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low claim split-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="823" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low claim split-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="824" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low claim split-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low claim join-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low claim split-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low claim split-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="825" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low claim join-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low Insurance Check-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="826" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Low claim join-complete&lt;/b&gt;.
and
2. &lt;b&gt;Low claim join-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Low Medical History Check-complete&lt;/b&gt;. &lt;b&gt;Low claim join-complete&lt;/b&gt; can happen only after &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="827" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Prepare Notification-complete&lt;/b&gt; there has to be at least one &lt;b&gt;By Email-complete&lt;/b&gt;.
and
2. &lt;b&gt;By Email-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;By Email-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="828" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Prepare Notification-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="829" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Prepare Notification-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Prepare Notification-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Prepare Notification-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="830" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;By Email-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Notification sent-complete&lt;/b&gt;.
and
2. &lt;b&gt;Notification sent-complete&lt;/b&gt; has to be preceded by &lt;b&gt;By Email-complete&lt;/b&gt;. &lt;b&gt;Notification sent-complete&lt;/b&gt; can happen only after &lt;b&gt;By Email-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="831" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;By Email-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;By Email-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;By Email-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="832" mandatory="true"><condition></condition><name>succession</name><template><description>response and precedence:
1. After every &lt;b&gt;Notification sent-complete&lt;/b&gt; there has to be at least one &lt;b&gt;Archive-complete&lt;/b&gt;.
and
2. &lt;b&gt;Archive-complete&lt;/b&gt; has to be preceded by &lt;b&gt;Notification sent-complete&lt;/b&gt;. &lt;b&gt;Archive-complete&lt;/b&gt; can happen only after &lt;b&gt;Notification sent-complete&lt;/b&gt; had happened.</description><display>succession</display><name>succession</name><text>( []( ( "A" -&gt; &lt;&gt;( "B" ) ) ) /\      ((     ( !("B" ) U "A" )) \/ ([](!("B"))))       )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;SATISFIED undefined&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;VIOLATED_TEMPORARY undefined&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;VIOLATED undefined&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="833" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim split-complete&lt;/b&gt; or &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="834" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim split-complete&lt;/b&gt; or &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="835" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim split-complete&lt;/b&gt; or &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="836" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Receive response-complete&lt;/b&gt; or &lt;b&gt;Skip response-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Receive response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Skip response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="837" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; or &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="838" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; or &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="839" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Insurance Check-complete&lt;/b&gt; or &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="840" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; or &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="841" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; or &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="842" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low Medical History Check-complete&lt;/b&gt; or &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="843" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim join-complete&lt;/b&gt; or &lt;b&gt;High Insurance Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="844" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim join-complete&lt;/b&gt; or &lt;b&gt;High Medical History Check-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="845" mandatory="true"><condition></condition><name>not co-existence</name><template><description>Only one of the two tasks &lt;b&gt;Low claim join-complete&lt;/b&gt; or &lt;b&gt;Contact Hospital-complete&lt;/b&gt; can be executed, but not both.</description><display>not co-existence</display><name>not co-existence</name><text>(&lt;&gt;A) -&gt; (!(&lt;&gt;B))</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="8"/></graphical></parameter><parameter branchable="false" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Contact Hospital-complete"/></branches></parameter></constraintparameters></constraint><constraint id="846" mandatory="true"><condition></condition><name>chain response</name><template><description>After A the  next one has to be B.</description><display>chain response</display><name>chain response</name><text>[] ( ( "A"  -&gt; X( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim join-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="847" mandatory="true"><condition></condition><name>chain response</name><template><description>After A the  next one has to be B.</description><display>chain response</display><name>chain response</name><text>[] ( ( "A"  -&gt; X( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Contact Hospital-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="848" mandatory="true"><condition></condition><name>chain response</name><template><description>After A the  next one has to be B.</description><display>chain response</display><name>chain response</name><text>[] ( ( "A"  -&gt; X( "B" ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="2"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="849" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Create questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="850" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="851" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="852" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="853" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="854" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="855" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="856" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Decide low/high-complete"/></branches></parameter></constraintparameters></constraint><constraint id="857" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="858" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="859" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="860" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="861" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Create questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="862" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Send questionnaire-complete"/></branches></parameter></constraintparameters></constraint><constraint id="863" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="864" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="865" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="866" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Decide low/high-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="867" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Prepare Notification-complete"/></branches></parameter></constraintparameters></constraint><constraint id="868" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="869" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="870" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Send questionnaire-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="871" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="872" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="873" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="874" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low Medical History Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="875" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="876" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="877" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="By Email-complete"/></branches></parameter></constraintparameters></constraint><constraint id="878" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="879" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Prepare Notification-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="880" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Notification sent-complete"/></branches></parameter></constraintparameters></constraint><constraint id="881" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="By Email-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="882" mandatory="true"><condition></condition><name>co-existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. And vice versa.</description><display>co-existence</display><name>co-existence</name><text>( ( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) ) /\ ( &lt;&gt;("B") -&gt; &lt;&gt;( "A" ) )  )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint><constraint id="883" mandatory="true"><condition></condition><name>init</name><template><description>Each instance has to start with execution of &lt;b&gt;Register-complete&lt;/b&gt;.</description><display>init</display><name>init</name><text>( ( "A.started" \/ "A.cancelled" ) W  "A" )</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either:
&lt;ul&gt;
&lt;li&gt;none of the tasks in this instance were executed yet, or&lt;/li&gt;
&lt;li&gt;the first executed task is &lt;b&gt;Register-complete&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because the first executed task 
in this instance was not &lt;b&gt;Register-complete&lt;/b&gt;.  &lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Register-complete"/></branches></parameter></constraintparameters></constraint><constraint id="884" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="885" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="High Insurance Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Low claim join-complete"/></branches></parameter></constraintparameters></constraint><constraint id="886" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Skip response-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Receive response-complete"/></branches></parameter></constraintparameters></constraint><constraint id="887" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low Medical History Check-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="888" mandatory="true"><condition></condition><name>exclusive choice</name><template><description>A or B has to happen but not both.</description><display>exclusive choice</display><name>exclusive choice</name><text>(  ( &lt;&gt;( "A" ) \/ &lt;&gt;( "B" )  )  /\ !( (  &lt;&gt;( "A" ) /\ &lt;&gt;( "B" ) ) ) )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="true" style="9"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Low claim split-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="High Insurance Check-complete"/></branches></parameter></constraintparameters></constraint><constraint id="889" mandatory="true"><condition></condition><name>chain precedence</name><template><description>B can be executed only directly after A.</description><display>chain precedence</display><name>chain precedence</name><text>[]( ( X( "B" ) -&gt; "A") )/\  ! ("B" )</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="Notification sent-complete"/></branches></parameter><parameter templateparameter="2"><branches><branch name="Archive-complete"/></branches></parameter></constraintparameters></constraint></constraintdefinitions><graphical><activities><cell height="30.0" id="1" width="130.0" x="2750.1608455507726" y="315.1447251783253"/><cell height="30.0" id="2" width="190.0" x="3699.8669484236166" y="243.07517774354721"/><cell height="30.0" id="3" width="165.0" x="1228.4333635012258" y="613.2658529741309"/><cell height="30.0" id="4" width="180.0" x="1415.9971102681034" y="693.2658529741309"/><cell height="30.0" id="5" width="165.0" x="0.0" y="865.0230073748822"/><cell height="30.0" id="6" width="170.0" x="113.56864494108409" y="853.2658529741311"/><cell height="30.0" id="7" width="185.0" x="292.22454441398105" y="987.4628199689239"/><cell height="30.0" id="8" width="215.0" x="644.7970838436568" y="988.6492485637075"/><cell height="30.0" id="9" width="160.0" x="459.8595015591267" y="1071.1109090047498"/><cell height="30.0" id="10" width="190.0" x="2166.7279735028865" y="837.7929095311656"/><cell height="30.0" id="11" width="130.0" x="2167.470058544035" y="1246.263597550905"/><cell height="30.0" id="12" width="125.0" x="1727.0628136958342" y="885.3732993193212"/><cell height="30.0" id="13" width="175.0" x="1448.7895776490054" y="1522.6536771986325"/><cell height="30.0" id="14" width="125.0" x="2836.9870210881213" y="1316.5981962714334"/><cell height="30.0" id="15" width="190.0" x="1772.2660398321632" y="1694.6760873038616"/><cell height="30.0" id="16" width="155.0" x="1951.5334764860452" y="1772.9075229383664"/><cell height="30.0" id="17" width="220.0" x="2129.76491212055" y="1854.6760873038616"/><cell height="30.0" id="18" width="130.0" x="3409.5280888999873" y="1474.9971284595679"/><cell height="30.0" id="19" width="170.0" x="2834.9849201731645" y="2008.664882251247"/></activities><constraints><cell height="1.0" id="1" width="1.0" x="3322.810926043971" y="321.99139693478605"/><cell height="1.0" id="2" width="1.0" x="1998.1193479953636" y="423.6699884608066"/><cell height="1.0" id="3" width="1.0" x="1895.56801199717" y="591.5499390509922"/><cell height="1.0" id="4" width="1.0" x="1353.4587590586814" y="327.54716975229286"/><cell height="1.0" id="5" width="1.0" x="1317.34770511661" y="383.7018345047188"/><cell height="1.0" id="6" width="1.0" x="1498.7388840704932" y="413.44838686684585"/><cell height="1.0" id="7" width="1.0" x="4671.37634740423" y="438.26585297413095"/><cell height="1.0" id="8" width="1.0" x="4662.374091981004" y="438.26585297413095"/><cell height="1.0" id="9" width="1.0" x="4957.222429475893" y="438.26585297413095"/><cell height="1.0" id="10" width="1.0" x="4927.6573580264685" y="438.26585297413095"/><cell height="1.0" id="11" width="1.0" x="4705.688355509412" y="438.26585297413095"/><cell height="1.0" id="12" width="1.0" x="1836.8168925551859" y="715.2978221777096"/><cell height="1.0" id="13" width="1.0" x="3666.640475349143" y="438.2658529741311"/><cell height="1.0" id="14" width="1.0" x="4682.930900549463" y="438.26585297413095"/><cell height="1.0" id="15" width="1.0" x="3637.8023421324856" y="435.0830750462628"/><cell height="1.0" id="16" width="1.0" x="3989.345333576522" y="442.8628444643725"/><cell height="1.0" id="17" width="1.0" x="3932.6360922591466" y="438.2658529741311"/><cell height="1.0" id="18" width="1.0" x="3902.0556938309096" y="438.2658529741311"/><cell height="1.0" id="19" width="1.0" x="2467.637094287284" y="261.2609052266614"/><cell height="1.0" id="20" width="1.0" x="4934.587708497565" y="438.26585297413095"/><cell height="1.0" id="21" width="1.0" x="1852.3727625392976" y="2.5"/><cell height="1.0" id="22" width="1.0" x="1755.5780783586222" y="158.4524176976865"/><cell height="1.0" id="23" width="1.0" x="1787.727915413573" y="164.62531691886025"/><cell height="1.0" id="24" width="1.0" x="4753.660838451164" y="438.26585297413095"/><cell height="1.0" id="25" width="1.0" x="4711.556481711277" y="438.26585297413095"/><cell height="1.0" id="26" width="1.0" x="4980.537658406865" y="438.26585297413095"/><cell height="1.0" id="27" width="1.0" x="4989.922197199109" y="438.26585297413095"/><cell height="1.0" id="28" width="1.0" x="4871.121207913012" y="438.26585297413095"/><cell height="1.0" id="29" width="1.0" x="3603.650863309429" y="448.89973834696855"/><cell height="1.0" id="30" width="1.0" x="3881.328953882264" y="460.86948183150184"/><cell height="1.0" id="31" width="1.0" x="3599.916487239235" y="1092.2356626495234"/><cell height="1.0" id="32" width="1.0" x="3579.9277566039095" y="993.2143554149807"/><cell height="1.0" id="33" width="1.0" x="3588.1922282358328" y="1218.1399542942654"/><cell height="1.0" id="34" width="1.0" x="4888.062065926616" y="440.9636866156832"/><cell height="1.0" id="35" width="1.0" x="4306.843132240114" y="690.1122246271336"/><cell height="1.0" id="36" width="1.0" x="1405.145570885037" y="653.7994533562667"/><cell height="1.0" id="37" width="1.0" x="671.4729415192419" y="678.5442350095738"/><cell height="1.0" id="38" width="1.0" x="866.3369827037138" y="728.889508413481"/><cell height="1.0" id="39" width="1.0" x="886.9207998793368" y="755.1629239742299"/><cell height="1.0" id="40" width="1.0" x="1026.7282458456395" y="860.9120877487471"/><cell height="1.0" id="41" width="1.0" x="1052.4887787385371" y="739.8145695198407"/><cell height="1.0" id="42" width="1.0" x="3583.87790020086" y="438.26585297413095"/><cell height="1.0" id="43" width="1.0" x="3627.2978387317407" y="438.26585297413095"/><cell height="1.0" id="44" width="1.0" x="3543.324160998886" y="438.26585297413095"/><cell height="1.0" id="45" width="1.0" x="3555.9147827511465" y="438.26585297413095"/><cell height="1.0" id="46" width="1.0" x="4064.112677444474" y="78.47069401515967"/><cell height="1.0" id="47" width="1.0" x="3573.053225886746" y="438.26585297413095"/><cell height="1.0" id="48" width="1.0" x="3589.2568088721587" y="438.26585297413095"/><cell height="1.0" id="49" width="1.0" x="3996.312965575293" y="438.26585297413095"/><cell height="1.0" id="50" width="1.0" x="4814.5507394954375" y="438.26585297413095"/><cell height="1.0" id="51" width="1.0" x="4850.246496319811" y="438.26585297413095"/><cell height="1.0" id="52" width="1.0" x="717.116919743424" y="832.6792311729987"/><cell height="1.0" id="53" width="1.0" x="760.5659315155342" y="811.9098968699751"/><cell height="1.0" id="54" width="1.0" x="1145.8581356105244" y="798.7228745494094"/><cell height="1.0" id="55" width="1.0" x="1093.1037171674063" y="876.2532799161731"/><cell height="1.0" id="56" width="1.0" x="1149.6418037681979" y="939.1190718770399"/><cell height="1.0" id="57" width="1.0" x="3593.392996584532" y="438.26585297413095"/><cell height="1.0" id="58" width="1.0" x="3613.459195745568" y="438.26585297413095"/><cell height="1.0" id="59" width="1.0" x="3522.9154640335496" y="438.26585297413095"/><cell height="1.0" id="60" width="1.0" x="3455.372815025758" y="438.26585297413095"/><cell height="1.0" id="61" width="1.0" x="4719.935935767598" y="438.26585297413095"/><cell height="1.0" id="62" width="1.0" x="3598.217670898646" y="438.26585297413095"/><cell height="1.0" id="63" width="1.0" x="3549.6316067345083" y="438.26585297413095"/><cell height="1.0" id="64" width="1.0" x="4019.217419262614" y="438.26585297413095"/><cell height="1.0" id="65" width="1.0" x="4828.33533016722" y="438.26585297413095"/><cell height="1.0" id="66" width="1.0" x="4796.138304179308" y="438.26585297413095"/><cell height="1.0" id="67" width="1.0" x="602.5358728108323" y="1446.5773659201743"/><cell height="1.0" id="68" width="1.0" x="3492.568667005148" y="438.26585297413095"/><cell height="1.0" id="69" width="1.0" x="3416.099932010708" y="438.26585297413095"/><cell height="1.0" id="70" width="1.0" x="3451.068713302057" y="438.26585297413095"/><cell height="1.0" id="71" width="1.0" x="975.6824373717516" y="2921.535202789839"/><cell height="1.0" id="72" width="1.0" x="3429.0465065770886" y="438.26585297413095"/><cell height="1.0" id="73" width="1.0" x="3459.9430858433334" y="438.26585297413095"/><cell height="1.0" id="74" width="1.0" x="960.6891772925017" y="1820.1880015743982"/><cell height="1.0" id="75" width="1.0" x="3559.556614194291" y="438.26585297413095"/><cell height="1.0" id="76" width="1.0" x="1061.8450092774056" y="1778.4228885467035"/><cell height="1.0" id="77" width="1.0" x="3386.449445838447" y="438.26585297413095"/><cell height="1.0" id="78" width="1.0" x="3465.7462743003052" y="438.26585297413095"/><cell height="1.0" id="79" width="1.0" x="849.3803356982285" y="1320.3134335733416"/><cell height="1.0" id="80" width="1.0" x="1583.4515446496569" y="2414.648648414511"/><cell height="1.0" id="81" width="1.0" x="1150.570128942899" y="1703.496364058029"/><cell height="1.0" id="82" width="1.0" x="3516.2219626324027" y="438.26585297413095"/><cell height="1.0" id="83" width="1.0" x="1419.9052412414921" y="1208.560014912197"/><cell height="1.0" id="84" width="1.0" x="1154.9159678146427" y="1307.365419308573"/><cell height="1.0" id="85" width="1.0" x="1973.8372266514739" y="2085.8215297475463"/><cell height="1.0" id="86" width="1.0" x="1260.2425043044097" y="1517.0296423349362"/><cell height="1.0" id="87" width="1.0" x="3435.650341273277" y="438.26585297413095"/><cell height="1.0" id="88" width="1.0" x="1374.9704244649108" y="1244.3479660627945"/><cell height="1.0" id="89" width="1.0" x="1011.4916822379889" y="1359.106560476358"/><cell height="1.0" id="90" width="1.0" x="1628.6174742609094" y="2005.9177006372115"/><cell height="1.0" id="91" width="1.0" x="1171.5193035475759" y="1508.8483513886022"/><cell height="1.0" id="92" width="1.0" x="2194.4332718798573" y="1140.8497333417786"/><cell height="1.0" id="93" width="1.0" x="3577.6841580243167" y="438.26585297413095"/><cell height="1.0" id="94" width="1.0" x="1878.4363370155395" y="1168.5404627112432"/><cell height="1.0" id="95" width="1.0" x="4773.310868019026" y="438.26585297413095"/><cell height="1.0" id="96" width="1.0" x="4690.572731992608" y="438.26585297413095"/><cell height="1.0" id="97" width="1.0" x="2026.0928404077226" y="1418.9826018510887"/><cell height="1.0" id="98" width="1.0" x="2072.7954305932703" y="1412.822698247763"/><cell height="1.0" id="99" width="1.0" x="4942.92747919535" y="438.26585297413095"/><cell height="1.0" id="100" width="1.0" x="4908.123463336237" y="438.26585297413095"/><cell height="1.0" id="101" width="1.0" x="3546.7723104660395" y="438.26585297413095"/><cell height="1.0" id="102" width="1.0" x="2030.0254827206488" y="1307.633406799331"/><cell height="1.0" id="103" width="1.0" x="4760.734008283415" y="438.26585297413095"/><cell height="1.0" id="104" width="1.0" x="2060.401994502446" y="1391.5681790264462"/><cell height="1.0" id="105" width="1.0" x="2092.1491099197788" y="1586.8830204713554"/><cell height="1.0" id="106" width="1.0" x="2254.458710654046" y="1631.422901009142"/><cell height="1.0" id="107" width="1.0" x="5015.8891657875165" y="438.26585297413095"/><cell height="1.0" id="108" width="1.0" x="4892.126400041867" y="438.26585297413095"/><cell height="1.0" id="109" width="1.0" x="1687.948337932535" y="1218.5082379132482"/><cell height="1.0" id="110" width="1.0" x="3808.1071572548417" y="438.26585297413095"/><cell height="1.0" id="111" width="1.0" x="2355.724611939919" y="1416.1065568168967"/><cell height="1.0" id="112" width="1.0" x="1712.2286791616068" y="1628.2598330409376"/><cell height="1.0" id="113" width="1.0" x="1805.3460072320968" y="1588.098662308204"/><cell height="1.0" id="114" width="1.0" x="1924.1038995811582" y="1796.1869037072986"/><cell height="1.0" id="115" width="1.0" x="2212.6868505626103" y="2011.167070938343"/><cell height="1.0" id="116" width="1.0" x="2183.2136717901258" y="2027.7620914015597"/><cell height="1.0" id="117" width="1.0" x="2394.8672346447634" y="1508.605999951801"/><cell height="1.0" id="118" width="1.0" x="2308.700765437997" y="1638.5111556015465"/><cell height="1.0" id="119" width="1.0" x="2552.791662092039" y="1567.507209061772"/><cell height="1.0" id="120" width="1.0" x="3202.22704360172" y="1426.4949608431275"/><cell height="1.0" id="121" width="1.0" x="2896.081478563371" y="1645.6836393780277"/><cell height="1.0" id="130" width="1.0" x="3340.845343997209" y="296.05540321806166"/><cell height="1.0" id="131" width="1.0" x="2055.440888838805" y="438.26585297413123"/><cell height="1.0" id="132" width="1.0" x="2377.8684206314565" y="429.4262207967706"/><cell height="1.0" id="133" width="1.0" x="2556.3209784851965" y="579.988368828627"/><cell height="1.0" id="134" width="1.0" x="3831.485933265285" y="438.26585297413095"/><cell height="1.0" id="135" width="1.0" x="3700.403129279134" y="438.26585297413095"/><cell height="1.0" id="136" width="1.0" x="4523.297091981005" y="438.26585297413095"/><cell height="1.0" id="137" width="1.0" x="2602.99255989457" y="304.951938342502"/><cell height="1.0" id="138" width="1.0" x="4301.9765496926175" y="438.26585297413095"/><cell height="1.0" id="139" width="1.0" x="4184.088288981002" y="438.26585297413095"/><cell height="1.0" id="140" width="1.0" x="4219.430315102014" y="438.26585297413095"/><cell height="1.0" id="141" width="1.0" x="3962.178681305787" y="454.5309037664794"/><cell height="1.0" id="142" width="1.0" x="1465.0417987941282" y="643.820168557034"/><cell height="1.0" id="143" width="1.0" x="3475.5302449953333" y="438.26585297413095"/><cell height="1.0" id="144" width="1.0" x="3491.8241618821194" y="438.26585297413095"/><cell height="1.0" id="145" width="1.0" x="3401.9685191298645" y="438.26585297413095"/><cell height="1.0" id="146" width="1.0" x="3788.6273145454293" y="438.26585297413095"/><cell height="1.0" id="147" width="1.0" x="3487.7170965699966" y="438.26585297413095"/><cell height="1.0" id="148" width="1.0" x="3497.3309976240216" y="438.26585297413095"/><cell height="1.0" id="149" width="1.0" x="3412.8461674286946" y="438.26585297413095"/><cell height="1.0" id="150" width="1.0" x="3815.5980532454028" y="438.26585297413095"/><cell height="1.0" id="151" width="1.0" x="165.57643480865494" y="921.4395534818611"/><cell height="1.0" id="152" width="1.0" x="336.7819308323311" y="917.2276572915171"/><cell height="1.0" id="153" width="1.0" x="243.07533978183505" y="1027.8823534037017"/><cell height="1.0" id="154" width="1.0" x="626.4989429939715" y="1479.36270226699"/><cell height="1.0" id="155" width="1.0" x="3312.1097305390667" y="438.26585297413095"/><cell height="1.0" id="156" width="1.0" x="3332.987378837897" y="438.26585297413095"/><cell height="1.0" id="157" width="1.0" x="3503.7242018382303" y="438.26585297413095"/><cell height="1.0" id="158" width="1.0" x="902.6862808642409" y="1469.5311298792583"/><cell height="1.0" id="159" width="1.0" x="923.1726138578767" y="1504.3520397865514"/><cell height="1.0" id="160" width="1.0" x="3409.953285577685" y="438.26585297413095"/><cell height="1.0" id="161" width="1.0" x="448.64391521671416" y="1033.8803454209658"/><cell height="1.0" id="162" width="1.0" x="3371.3663068307424" y="438.26585297413095"/><cell height="1.0" id="163" width="1.0" x="1186.96262779555" y="1690.8037458397882"/><cell height="1.0" id="164" width="1.0" x="789.8604928335203" y="1329.8612563808945"/><cell height="1.0" id="165" width="1.0" x="3406.1735959902176" y="438.26585297413095"/><cell height="1.0" id="166" width="1.0" x="653.909041649948" y="1019.9181385080794"/><cell height="1.0" id="167" width="1.0" x="3380.1515243832955" y="438.26585297413095"/><cell height="1.0" id="168" width="1.0" x="3342.5877828481875" y="438.26585297413095"/><cell height="1.0" id="169" width="1.0" x="1121.960234841411" y="1241.5997940284362"/><cell height="1.0" id="170" width="1.0" x="3802.5847530464002" y="438.26585297413095"/><cell height="1.0" id="171" width="1.0" x="3346.684891137887" y="438.26585297413095"/><cell height="1.0" id="172" width="1.0" x="1370.4411298067655" y="1282.34379361762"/><cell height="1.0" id="173" width="1.0" x="1044.1487612423132" y="1305.1615330625125"/><cell height="1.0" id="174" width="1.0" x="1616.884089456263" y="2005.9177006372115"/><cell height="1.0" id="175" width="1.0" x="2198.6497686207563" y="1126.6450552232097"/><cell height="1.0" id="176" width="1.0" x="1850.4247801278489" y="1167.6487599380418"/><cell height="1.0" id="177" width="1.0" x="2607.036831953946" y="1133.0908257417527"/><cell height="1.0" id="178" width="1.0" x="1995.2308759927776" y="1389.117420951013"/><cell height="1.0" id="179" width="1.0" x="2121.9848067645194" y="1366.9018012976421"/><cell height="1.0" id="180" width="1.0" x="2141.7683358172926" y="1341.8001035813882"/><cell height="1.0" id="181" width="1.0" x="1996.6363415188011" y="1328.2724254006498"/><cell height="1.0" id="182" width="1.0" x="2592.116168144646" y="1268.120303497901"/><cell height="1.0" id="183" width="1.0" x="1987.5628633315303" y="1547.527574440881"/><cell height="1.0" id="184" width="1.0" x="2066.114777821758" y="1504.1411273965216"/><cell height="1.0" id="185" width="1.0" x="2227.1627081933575" y="1593.5978257013523"/><cell height="1.0" id="186" width="1.0" x="2597.8074388338346" y="1652.4948951726026"/><cell height="1.0" id="187" width="1.0" x="1656.2479348767015" y="1261.5444528873597"/><cell height="1.0" id="188" width="1.0" x="3794.4220467698706" y="438.26585297413095"/><cell height="1.0" id="189" width="1.0" x="2097.463093692718" y="1510.7518671361722"/><cell height="1.0" id="190" width="1.0" x="1768.6640848498723" y="1639.648498620306"/><cell height="1.0" id="191" width="1.0" x="1794.8226721925816" y="1609.0742621348477"/><cell height="1.0" id="192" width="1.0" x="1945.8596224811088" y="1814.5362089301536"/><cell height="1.0" id="193" width="1.0" x="2200.3749866919043" y="1998.0459621205396"/><cell height="1.0" id="194" width="1.0" x="2198.734515374642" y="2024.7968145707998"/><cell height="1.0" id="195" width="1.0" x="2458.642984038153" y="1479.445007175569"/><cell height="1.0" id="196" width="1.0" x="2415.729423393856" y="1539.8298842339807"/><cell height="1.0" id="197" width="1.0" x="2584.5019125084896" y="1568.8936577365168"/><cell height="1.0" id="198" width="1.0" x="3173.962042406917" y="1403.3202915076763"/><cell height="1.0" id="199" width="1.0" x="2874.434533625221" y="1697.203529413147"/><cell height="1.0" id="200" width="1.0" x="3344.0207673888526" y="353.16727539266753"/><cell height="1.0" id="201" width="1.0" x="2013.2580485713813" y="438.2658529741313"/><cell height="1.0" id="202" width="1.0" x="2313.6406421049633" y="427.7647252625181"/><cell height="1.0" id="203" width="1.0" x="1324.844761153526" y="322.569687709003"/><cell height="1.0" id="204" width="1.0" x="1382.9778588489514" y="333.5925121200487"/><cell height="1.0" id="205" width="1.0" x="1439.849176614067" y="395.84287631438497"/><cell height="1.0" id="206" width="1.0" x="1527.6640678081396" y="470.0899059022237"/><cell height="1.0" id="207" width="1.0" x="1490.4520972511534" y="424.0414008341975"/><cell height="1.0" id="208" width="1.0" x="3319.03984101367" y="438.26585297413095"/><cell height="1.0" id="209" width="1.0" x="3324.73735331366" y="438.26585297413095"/><cell height="1.0" id="210" width="1.0" x="3440.516091725188" y="438.26585297413095"/><cell height="1.0" id="211" width="1.0" x="1821.6083052564297" y="813.4547140315781"/><cell height="1.0" id="212" width="1.0" x="4083.7143463010034" y="438.26585297413095"/><cell height="1.0" id="213" width="1.0" x="2054.6751358930937" y="956.9764010195688"/><cell height="1.0" id="214" width="1.0" x="2454.170768669285" y="1059.596854842212"/><cell height="1.0" id="215" width="1.0" x="2573.0114438768505" y="1145.8293346472246"/><cell height="1.0" id="216" width="1.0" x="4092.9283829297015" y="438.3215954298804"/><cell height="1.0" id="217" width="1.0" x="4593.361794530753" y="438.26585297413095"/><cell height="1.0" id="218" width="1.0" x="2599.268441249616" y="290.89129356801294"/><cell height="1.0" id="219" width="1.0" x="1741.6243977863778" y="74.61795199859358"/><cell height="1.0" id="220" width="1.0" x="1777.051562842388" y="116.5184936312886"/><cell height="1.0" id="221" width="1.0" x="1761.2867803212775" y="187.39995814372438"/><cell height="1.0" id="222" width="1.0" x="1819.7318687100171" y="239.0050133774174"/><cell height="1.0" id="223" width="1.0" x="1775.7105591981854" y="225.51295279200951"/><cell height="1.0" id="224" width="1.0" x="3849.756560935474" y="438.26585297413095"/><cell height="1.0" id="225" width="1.0" x="3692.8697926679492" y="438.26585297413095"/><cell height="1.0" id="226" width="1.0" x="3424.674064720942" y="438.26585297413095"/><cell height="1.0" id="227" width="1.0" x="3857.782965575293" y="438.26585297413095"/><cell height="1.0" id="228" width="1.0" x="3913.7894119976822" y="438.2658529741311"/><cell height="1.0" id="229" width="1.0" x="4067.637841692426" y="438.26585297413095"/><cell height="1.0" id="230" width="1.0" x="3865.480477875283" y="438.26585297413095"/><cell height="1.0" id="231" width="1.0" x="3595.4794032098443" y="1161.8233593020177"/><cell height="1.0" id="232" width="1.0" x="4604.863446614049" y="438.26585297413095"/><cell height="1.0" id="233" width="1.0" x="4297.001196430411" y="698.726863858754"/><cell height="1.0" id="234" width="1.0" x="1410.6519644262878" y="660.810523452605"/><cell height="1.0" id="235" width="1.0" x="669.1650592837668" y="749.0053770948061"/><cell height="1.0" id="236" width="1.0" x="737.3049387458309" y="763.695526684808"/><cell height="1.0" id="237" width="1.0" x="896.7401944124847" y="736.3437440065593"/><cell height="1.0" id="238" width="1.0" x="1045.475337022391" y="886.0960385659262"/><cell height="1.0" id="239" width="1.0" x="983.5387122146196" y="807.5326687978849"/><cell height="1.0" id="240" width="1.0" x="3298.6814580119303" y="438.26585297413095"/><cell height="1.0" id="241" width="1.0" x="3179.909297350955" y="438.26585297413095"/><cell height="1.0" id="242" width="1.0" x="1539.8970623027988" y="767.1656553786188"/><cell height="1.0" id="243" width="1.0" x="3142.076347404227" y="438.26585297413095"/><cell height="1.0" id="244" width="1.0" x="3797.1010550570973" y="438.26585297413095"/><cell height="1.0" id="245" width="1.0" x="1474.7061112153651" y="1550.219402755876"/><cell height="1.0" id="246" width="1.0" x="1501.0199993121369" y="1583.681608148578"/><cell height="1.0" id="247" width="1.0" x="1488.3252456278938" y="1763.4116346176615"/><cell height="1.0" id="248" width="1.0" x="3528.58870622078" y="438.26585297413095"/><cell height="1.0" id="249" width="1.0" x="3999.6917023034644" y="438.26585297413095"/><cell height="1.0" id="250" width="1.0" x="1233.8668243768673" y="736.3437440065594"/><cell height="1.0" id="251" width="1.0" x="1346.5488047391975" y="736.3437440065593"/><cell height="1.0" id="252" width="1.0" x="1066.1728184957149" y="882.5026028936429"/><cell height="1.0" id="253" width="1.0" x="908.3154972966663" y="871.134843185689"/><cell height="1.0" id="254" width="1.0" x="1933.9581525248918" y="732.0734725297891"/><cell height="1.0" id="255" width="1.0" x="3282.8930271643053" y="438.26585297413095"/><cell height="1.0" id="256" width="1.0" x="1646.1467760877676" y="799.010817795477"/><cell height="1.0" id="257" width="1.0" x="1525.4807223934188" y="1168.932294492998"/><cell height="1.0" id="258" width="1.0" x="2257.092917478687" y="1012.3113313034426"/><cell height="1.0" id="259" width="1.0" x="1772.4179130703465" y="1325.0093798916544"/><cell height="1.0" id="260" width="1.0" x="1517.8988156150867" y="1758.6329775823885"/><cell height="1.0" id="261" width="1.0" x="2298.4365341468556" y="1532.3231556202406"/><cell height="1.0" id="262" width="1.0" x="1511.1375184170006" y="2121.267143257246"/><cell height="1.0" id="263" width="1.0" x="159.80929415809587" y="932.2371970289157"/><cell height="1.0" id="264" width="1.0" x="328.0247406194517" y="908.311716622566"/><cell height="1.0" id="265" width="1.0" x="317.6834586476134" y="1129.6479408806747"/><cell height="1.0" id="266" width="1.0" x="474.63844379083963" y="1038.920315664893"/><cell height="1.0" id="267" width="1.0" x="619.4226579876934" y="1060.2035826570636"/><cell height="1.0" id="268" width="1.0" x="2224.5982388435873" y="1077.8422292928476"/><cell height="1.0" id="269" width="1.0" x="2118.643435530281" y="855.3333427905194"/><cell height="1.0" id="270" width="1.0" x="1830.4988612205016" y="1155.6614617426267"/><cell height="1.0" id="271" width="1.0" x="2630.061963975939" y="1123.318504729391"/><cell height="1.0" id="272" width="1.0" x="3682.938212954828" y="438.26585297413095"/><cell height="1.0" id="273" width="1.0" x="2042.444727756761" y="1080.5584946155873"/><cell height="1.0" id="274" width="1.0" x="1644.188777148182" y="1494.7534615769116"/><cell height="1.0" id="275" width="1.0" x="2578.54816429689" y="1257.0224850017705"/><cell height="1.0" id="276" width="1.0" x="2840.7667148696887" y="1427.53915828772"/><cell height="1.0" id="277" width="1.0" x="2194.1204068900897" y="1530.957961941703"/><cell height="1.0" id="278" width="1.0" x="1956.501386792121" y="1763.8553349918388"/><cell height="1.0" id="279" width="1.0" x="2251.9154015124236" y="1987.9716860418034"/><cell height="1.0" id="280" width="1.0" x="2557.0425695518006" y="1912.0923568951291"/><cell height="1.0" id="281" width="1.0" x="2038.407424987778" y="1530.957961941703"/><cell height="1.0" id="282" width="1.0" x="3289.190022286672" y="289.3311236024"/><cell height="1.0" id="283" width="1.0" x="3320.1889392550547" y="283.67426935290763"/><cell height="1.0" id="284" width="1.0" x="2044.1378170303897" y="436.49728860863604"/><cell height="1.0" id="285" width="1.0" x="2024.7598854352902" y="433.6688614838898"/><cell height="1.0" id="286" width="1.0" x="2277.7656950853707" y="476.5423745064576"/><cell height="1.0" id="287" width="1.0" x="2319.8973735082595" y="433.764725262518"/><cell height="1.0" id="288" width="1.0" x="1335.3335255517147" y="310.8697555844418"/><cell height="1.0" id="289" width="1.0" x="1344.8007787035235" y="368.172878974435"/><cell height="1.0" id="290" width="1.0" x="1461.399437605523" y="409.9069502835632"/><cell height="1.0" id="291" width="1.0" x="1550.6944064051966" y="446.547674630382"/><cell height="1.0" id="292" width="1.0" x="1489.0470283070124" y="440.03441733962643"/><cell height="1.0" id="293" width="1.0" x="3352.0647448688264" y="438.26585297413095"/><cell height="1.0" id="294" width="1.0" x="3375.115108989776" y="438.26585297413095"/><cell height="1.0" id="295" width="1.0" x="3329.464622817515" y="438.26585297413095"/><cell height="1.0" id="296" width="1.0" x="3271.423285577685" y="438.26585297413095"/><cell height="1.0" id="297" width="1.0" x="2617.316596394537" y="438.26585297413095"/><cell height="1.0" id="298" width="1.0" x="3218.619268960069" y="438.26585297413095"/><cell height="1.0" id="299" width="1.0" x="3235.157146561113" y="438.26585297413095"/><cell height="1.0" id="300" width="1.0" x="3716.9040932249554" y="436.7010503331394"/><cell height="1.0" id="301" width="1.0" x="3709.607809140213" y="436.35134081477725"/><cell height="1.0" id="302" width="1.0" x="2117.571638278627" y="931.4111906327903"/><cell height="1.0" id="303" width="1.0" x="3285.93219667761" y="438.26585297413095"/><cell height="1.0" id="304" width="1.0" x="2607.631503309643" y="1087.5115894281446"/><cell height="1.0" id="305" width="1.0" x="4012.1942838495097" y="438.26585297413095"/><cell height="1.0" id="306" width="1.0" x="4533.224269231689" y="475.0375429664235"/><cell height="1.0" id="307" width="1.0" x="2455.928436912822" y="274.25640075007516"/><cell height="1.0" id="308" width="1.0" x="2477.1053716694983" y="264.49777520515624"/><cell height="1.0" id="309" width="1.0" x="2618.004983946156" y="291.91528850587235"/><cell height="1.0" id="310" width="1.0" x="2588.172066668768" y="285.4647381583318"/><cell height="1.0" id="311" width="1.0" x="1724.0479641790469" y="95.22525039130187"/><cell height="1.0" id="312" width="1.0" x="1751.0086149278704" y="134.99563677412834"/><cell height="1.0" id="313" width="1.0" x="1752.0312180495093" y="198.68552526026363"/><cell height="1.0" id="314" width="1.0" x="1816.1476004953806" y="230.62919441280607"/><cell height="1.0" id="315" width="1.0" x="1766.6034443754768" y="219.01080725669365"/><cell height="1.0" id="316" width="1.0" x="3659.5587593957716" y="438.26585297413095"/><cell height="1.0" id="317" width="1.0" x="3721.995471686287" y="438.26585297413095"/><cell height="1.0" id="318" width="1.0" x="3677.5691809570158" y="438.26585297413095"/><cell height="1.0" id="319" width="1.0" x="3669.720116409599" y="438.26585297413095"/><cell height="1.0" id="320" width="1.0" x="3294.6360700336" y="438.26585297413095"/><cell height="1.0" id="321" width="1.0" x="3821.819676182452" y="438.26585297413095"/><cell height="1.0" id="322" width="1.0" x="3507.8008365866604" y="438.26585297413095"/><cell height="1.0" id="323" width="1.0" x="4407.4483539996645" y="438.26585297413095"/><cell height="1.0" id="324" width="1.0" x="4368.767091981004" y="438.26585297413095"/><cell height="1.0" id="325" width="1.0" x="3223.285406743983" y="438.26585297413095"/><cell height="1.0" id="326" width="1.0" x="3837.517188482442" y="438.26585297413095"/><cell height="1.0" id="327" width="1.0" x="4430.206059694745" y="438.26585297413095"/><cell height="1.0" id="328" width="1.0" x="4436.808885825232" y="438.26585297413095"/><cell height="1.0" id="329" width="1.0" x="4557.697991851162" y="465.7114426027405"/><cell height="1.0" id="330" width="1.0" x="1397.4602561409672" y="643.7892909842847"/><cell height="1.0" id="331" width="1.0" x="1416.4237343764444" y="676.3423027878882"/><cell height="1.0" id="332" width="1.0" x="637.0586329757963" y="759.6665596549234"/><cell height="1.0" id="333" width="1.0" x="512.7708056062767" y="799.3647656136609"/><cell height="1.0" id="334" width="1.0" x="878.1700461422138" y="736.3437440065594"/><cell height="1.0" id="335" width="1.0" x="1008.6723825528354" y="862.0311917431795"/><cell height="1.0" id="336" width="1.0" x="973.4074094764476" y="798.6019348713023"/><cell height="1.0" id="337" width="1.0" x="2339.225471686287" y="438.26585297413095"/><cell height="1.0" id="338" width="1.0" x="2254.8818676906617" y="438.26585297413095"/><cell height="1.0" id="339" width="1.0" x="2396.8444538686654" y="438.26585297413095"/><cell height="1.0" id="340" width="1.0" x="2420.2578763277156" y="438.26585297413095"/><cell height="1.0" id="341" width="1.0" x="1572.68659841826" y="769.3877244627297"/><cell height="1.0" id="342" width="1.0" x="1374.4893290111306" y="902.9720662615263"/><cell height="1.0" id="343" width="1.0" x="1405.4637543500864" y="1089.305756038892"/><cell height="1.0" id="344" width="1.0" x="2852.8277919810002" y="438.26585297413095"/><cell height="1.0" id="345" width="1.0" x="3007.932032951754" y="438.26585297413095"/><cell height="1.0" id="346" width="1.0" x="2485.7704783139075" y="438.26585297413095"/><cell height="1.0" id="347" width="1.0" x="2557.22263508138" y="438.26585297413095"/><cell height="1.0" id="348" width="1.0" x="2651.740731313278" y="438.26585297413095"/><cell height="1.0" id="349" width="1.0" x="3510.8647803244703" y="438.26585297413095"/><cell height="1.0" id="350" width="1.0" x="1507.0551887028623" y="2125.1317991309697"/><cell height="1.0" id="351" width="1.0" x="786.4018948273053" y="836.8050950688018"/><cell height="1.0" id="352" width="1.0" x="1227.5857644766886" y="736.3437440065593"/><cell height="1.0" id="353" width="1.0" x="1034.9904461753345" y="822.5881498968223"/><cell height="1.0" id="354" width="1.0" x="1111.5553296290186" y="873.3942133862888"/><cell height="1.0" id="355" width="1.0" x="1116.5319576890463" y="939.4546679524105"/><cell height="1.0" id="356" width="1.0" x="1882.8543536398013" y="744.3177907974805"/><cell height="1.0" id="357" width="1.0" x="1908.1857536960483" y="799.2724684491413"/><cell height="1.0" id="358" width="1.0" x="2496.964152245948" y="438.26585297413095"/><cell height="1.0" id="359" width="1.0" x="2580.6382102086536" y="438.26585297413095"/><cell height="1.0" id="360" width="1.0" x="1740.3348276716963" y="848.0587278447451"/><cell height="1.0" id="361" width="1.0" x="1556.3843137975953" y="1141.702588413735"/><cell height="1.0" id="362" width="1.0" x="1584.260130649494" y="1146.7572678136723"/><cell height="1.0" id="363" width="1.0" x="2841.0783405622733" y="438.26585297413095"/><cell height="1.0" id="364" width="1.0" x="2788.6810605390665" y="438.26585297413095"/><cell height="1.0" id="365" width="1.0" x="2472.1259644928855" y="438.26585297413095"/><cell height="1.0" id="366" width="1.0" x="2715.7950552506795" y="438.26585297413095"/><cell height="1.0" id="367" width="1.0" x="1525.5751040755508" y="1630.5521906038127"/><cell height="1.0" id="368" width="1.0" x="3620.1052443631106" y="438.26585297413095"/><cell height="1.0" id="369" width="1.0" x="1517.2172524356824" y="2116.7062375418545"/><cell height="1.0" id="370" width="1.0" x="155.88388352598287" y="910.9204872533792"/><cell height="1.0" id="371" width="1.0" x="189.10895688157322" y="960.8343614955102"/><cell height="1.0" id="372" width="1.0" x="379.14877234719717" y="947.3113759070861"/><cell height="1.0" id="373" width="1.0" x="399.3234365005778" y="942.297052688705"/><cell height="1.0" id="374" width="1.0" x="262.04113852992725" y="1053.7546565362434"/><cell height="1.0" id="375" width="1.0" x="305.5154780991734" y="1113.6588058543682"/><cell height="1.0" id="376" width="1.0" x="1173.9077289158508" y="820.6943714402975"/><cell height="1.0" id="377" width="1.0" x="934.2320254710544" y="1861.0187924451404"/><cell height="1.0" id="378" width="1.0" x="655.3710153008549" y="1519.4547821955434"/><cell height="1.0" id="379" width="1.0" x="2061.9568088721585" y="438.26585297413095"/><cell height="1.0" id="380" width="1.0" x="786.5168062264199" y="1318.7162224531803"/><cell height="1.0" id="381" width="1.0" x="1129.437732298322" y="1729.0181940156654"/><cell height="1.0" id="382" width="1.0" x="813.8658239951055" y="1384.658195810423"/><cell height="1.0" id="383" width="1.0" x="1993.3306595977385" y="438.26585297413095"/><cell height="1.0" id="384" width="1.0" x="569.278269705463" y="1008.3704144654569"/><cell height="1.0" id="385" width="1.0" x="555.3065436685386" y="1016.642001684628"/><cell height="1.0" id="386" width="1.0" x="435.75986331537854" y="1031.8294646993922"/><cell height="1.0" id="387" width="1.0" x="450.48175183418937" y="1044.909954178502"/><cell height="1.0" id="388" width="1.0" x="1296.0353835709686" y="974.5491817181901"/><cell height="1.0" id="389" width="1.0" x="1182.228420479378" y="1694.1325316057903"/><cell height="1.0" id="390" width="1.0" x="796.3774103942781" y="1340.356833728065"/><cell height="1.0" id="391" width="1.0" x="2267.231310111831" y="438.26585297413095"/><cell height="1.0" id="392" width="1.0" x="603.9617344643216" y="1056.946900538954"/><cell height="1.0" id="393" width="1.0" x="629.1922853266929" y="1054.9764705476298"/><cell height="1.0" id="394" width="1.0" x="1475.845282240255" y="1005.335807089263"/><cell height="1.0" id="395" width="1.0" x="1492.5431786530235" y="1179.5926122837757"/><cell height="1.0" id="396" width="1.0" x="1172.4108699730355" y="1292.9061905037563"/><cell height="1.0" id="397" width="1.0" x="2534.492105708276" y="438.26585297413095"/><cell height="1.0" id="398" width="1.0" x="1488.2002683032333" y="1070.3834156961072"/><cell height="1.0" id="399" width="1.0" x="1404.073258908572" y="1271.628078133013"/><cell height="1.0" id="400" width="1.0" x="1070.0607449226577" y="1334.1510443933016"/><cell height="1.0" id="401" width="1.0" x="2597.972979103929" y="438.26585297413095"/><cell height="1.0" id="402" width="1.0" x="2204.4500103135542" y="1116.492682181783"/><cell height="1.0" id="403" width="1.0" x="2230.657519546857" y="1070.2658434938144"/><cell height="1.0" id="404" width="1.0" x="2010.4741134102387" y="880.5521604803766"/><cell height="1.0" id="405" width="1.0" x="1832.2313657776933" y="1171.8234377578945"/><cell height="1.0" id="406" width="1.0" x="1804.7041893932742" y="1165.3273910417035"/><cell height="1.0" id="407" width="1.0" x="3095.9032173118326" y="438.26585297413095"/><cell height="1.0" id="408" width="1.0" x="3064.814738644248" y="438.26585297413095"/><cell height="1.0" id="409" width="1.0" x="1996.998851298396" y="1404.6159574128862"/><cell height="1.0" id="410" width="1.0" x="2054.8444335211284" y="1371.6247580818124"/><cell height="1.0" id="411" width="1.0" x="2107.2938196417913" y="1384.5704511894633"/><cell height="1.0" id="412" width="1.0" x="3650.4509587791536" y="438.26585297413095"/><cell height="1.0" id="413" width="1.0" x="2550.486397115445" y="1422.5510017856611"/><cell height="1.0" id="414" width="1.0" x="2028.7204344760537" y="1104.9781159732552"/><cell height="1.0" id="415" width="1.0" x="1566.3855612791713" y="1530.9579619417032"/><cell height="1.0" id="416" width="1.0" x="1583.8148883826009" y="1523.5325433267155"/><cell height="1.0" id="417" width="1.0" x="2531.15988530824" y="1313.4284670409518"/><cell height="1.0" id="418" width="1.0" x="2618.2655058473097" y="1313.2825470309497"/><cell height="1.0" id="419" width="1.0" x="1982.5370738677489" y="1530.957961941703"/><cell height="1.0" id="420" width="1.0" x="2062.2860904001145" y="1694.30158912743"/><cell height="1.0" id="421" width="1.0" x="2215.867255417852" y="1530.957961941703"/><cell height="1.0" id="422" width="1.0" x="3744.7515978149627" y="438.26585297413095"/><cell height="1.0" id="423" width="1.0" x="2552.8921130243475" y="1689.144025219213"/><cell height="1.0" id="424" width="1.0" x="1712.0499305465066" y="1219.5829418354192"/><cell height="1.0" id="425" width="1.0" x="2248.7554565774467" y="1328.09451867549"/><cell height="1.0" id="426" width="1.0" x="2077.038930536097" y="1530.957961941703"/><cell height="1.0" id="427" width="1.0" x="2236.3434553054954" y="1530.957961941703"/><cell height="1.0" id="428" width="1.0" x="1804.510173145146" y="1637.9734742239498"/><cell height="1.0" id="429" width="1.0" x="1812.9224900998831" y="1606.2411323096026"/><cell height="1.0" id="430" width="1.0" x="1911.9241401844447" y="1780.801238338278"/><cell height="1.0" id="431" width="1.0" x="2187.312732970797" y="1979.3004620234383"/><cell height="1.0" id="432" width="1.0" x="2169.154167579953" y="2031.459066013833"/><cell height="1.0" id="433" width="1.0" x="2286.109079723893" y="1530.957961941703"/><cell height="1.0" id="434" width="1.0" x="2474.2901602858747" y="1530.957961941703"/><cell height="1.0" id="435" width="1.0" x="2566.601053029846" y="1570.7892676094707"/><cell height="1.0" id="436" width="1.0" x="3177.5378974061705" y="1435.8635589469668"/><cell height="1.0" id="437" width="1.0" x="2887.785073449701" y="1687.1034305473847"/><cell height="1.0" id="438" width="1.0" x="1969.1394558546529" y="1773.6582618883126"/><cell height="1.0" id="439" width="1.0" x="2214.754192997407" y="2020.8396358411915"/><cell height="1.0" id="440" width="1.0" x="2580.9248908424847" y="1904.9566513128448"/><cell height="1.0" id="441" width="1.0" x="3327.574763087097" y="291.28973732643834"/><cell height="1.0" id="442" width="1.0" x="1985.6751989982483" y="427.8760313226985"/><cell height="1.0" id="443" width="1.0" x="2309.374580197084" y="432.1774081832224"/><cell height="1.0" id="444" width="1.0" x="1423.7624097173082" y="254.73868608496642"/><cell height="1.0" id="445" width="1.0" x="1336.1722782879135" y="364.27579593117343"/><cell height="1.0" id="446" width="1.0" x="1451.6047060686124" y="384.13621964849835"/><cell height="1.0" id="447" width="1.0" x="1539.1138532814646" y="458.5710410220277"/><cell height="1.0" id="448" width="1.0" x="1494.8309678650858" y="427.6495226515826"/><cell height="1.0" id="449" width="1.0" x="2540.2294595349795" y="582.4529449185709"/><cell height="1.0" id="450" width="1.0" x="2508.8458125663415" y="886.1060359162477"/><cell height="1.0" id="451" width="1.0" x="2322.0625789813535" y="700.6202615411175"/><cell height="1.0" id="452" width="1.0" x="1838.0289808700206" y="745.3479548730555"/><cell height="1.0" id="453" width="1.0" x="3707.709322121647" y="437.4976282704407"/><cell height="1.0" id="454" width="1.0" x="2111.486117213145" y="921.1813564380802"/><cell height="1.0" id="455" width="1.0" x="2463.67227471836" y="1057.4827426266681"/><cell height="1.0" id="456" width="1.0" x="2516.6201375219052" y="1164.6521111031484"/><cell height="1.0" id="457" width="1.0" x="3735.3311866503686" y="438.26585297413095"/><cell height="1.0" id="458" width="1.0" x="3202.160308708544" y="438.26585297413095"/><cell height="1.0" id="459" width="1.0" x="2643.056935666396" y="306.46301264224996"/><cell height="1.0" id="460" width="1.0" x="1745.768246182814" y="97.21385961845363"/><cell height="1.0" id="461" width="1.0" x="1763.284890549666" y="151.71636631646192"/><cell height="1.0" id="462" width="1.0" x="1778.925376251427" y="173.19417971897732"/><cell height="1.0" id="463" width="1.0" x="1817.517226679352" y="245.0903367323692"/><cell height="1.0" id="464" width="1.0" x="1761.9817569527634" y="214.053743636738"/><cell height="1.0" id="465" width="1.0" x="2790.9577730506867" y="306.4810874023408"/><cell height="1.0" id="466" width="1.0" x="3654.4243052959064" y="438.26585297413095"/><cell height="1.0" id="467" width="1.0" x="3562.67056126975" y="438.26585297413095"/><cell height="1.0" id="468" width="1.0" x="3409.528037324039" y="818.1700067117747"/><cell height="1.0" id="469" width="1.0" x="3949.741174646382" y="453.4207166577789"/><cell height="1.0" id="470" width="1.0" x="3701.136783721979" y="517.0444766978643"/><cell height="1.0" id="471" width="1.0" x="3555.1449027901913" y="988.955094491236"/><cell height="1.0" id="472" width="1.0" x="3591.0291918528983" y="1149.531507092518"/><cell height="1.0" id="473" width="1.0" x="4250.20096830814" y="444.47824161758973"/><cell height="1.0" id="474" width="1.0" x="4549.827558301649" y="468.4115253572014"/><cell height="1.0" id="475" width="1.0" x="1451.5995540383997" y="648.3297025594512"/><cell height="1.0" id="476" width="1.0" x="697.1877163599006" y="708.4183706733061"/><cell height="1.0" id="477" width="1.0" x="682.8936976723858" y="780.6462653504655"/><cell height="1.0" id="478" width="1.0" x="643.7339681340504" y="879.244559276169"/><cell height="1.0" id="479" width="1.0" x="981.7349850667606" y="855.2463408114534"/><cell height="1.0" id="480" width="1.0" x="987.28810126506" y="785.8478432106491"/><cell height="1.0" id="481" width="1.0" x="1710.1540425460016" y="811.1215574613055"/><cell height="1.0" id="482" width="1.0" x="1713.2960028301693" y="1018.1336209885087"/><cell height="1.0" id="483" width="1.0" x="1532.7734036948202" y="754.4342495007147"/><cell height="1.0" id="484" width="1.0" x="1407.0709793759145" y="1061.941348826212"/><cell height="1.0" id="485" width="1.0" x="2067.277352285864" y="1121.7833887194147"/><cell height="1.0" id="486" width="1.0" x="1221.7834119498568" y="1410.2531342688844"/><cell height="1.0" id="487" width="1.0" x="1503.2235572733675" y="1615.178290740766"/><cell height="1.0" id="488" width="1.0" x="1495.3548226153664" y="1761.7633511403392"/><cell height="1.0" id="489" width="1.0" x="2158.6487085463164" y="2881.89031601224"/><cell height="1.0" id="490" width="1.0" x="1501.5193940310921" y="2131.3832886770947"/><cell height="1.0" id="491" width="1.0" x="910.6137979672058" y="786.420013069821"/><cell height="1.0" id="492" width="1.0" x="703.9610739622046" y="918.638722595106"/><cell height="1.0" id="493" width="1.0" x="1089.4607021849981" y="887.4445035772749"/><cell height="1.0" id="494" width="1.0" x="1018.9258208911483" y="845.5734307655125"/><cell height="1.0" id="495" width="1.0" x="1866.9614657189607" y="813.9908597652933"/><cell height="1.0" id="496" width="1.0" x="1880.781993472261" y="1052.7093757492892"/><cell height="1.0" id="497" width="1.0" x="1626.1595891842144" y="791.3047234994867"/><cell height="1.0" id="498" width="1.0" x="1514.889019936318" y="990.8278830320944"/><cell height="1.0" id="499" width="1.0" x="2262.8537636286037" y="1024.1088463659328"/><cell height="1.0" id="500" width="1.0" x="1730.0315442516448" y="1201.4069011220167"/><cell height="1.0" id="501" width="1.0" x="1522.3924892823845" y="1752.0603207039176"/><cell height="1.0" id="502" width="1.0" x="1521.533288161209" y="2102.5969182181893"/><cell height="1.0" id="503" width="1.0" x="3101.563303368308" y="438.26585297413095"/><cell height="1.0" id="504" width="1.0" x="134.09407886481648" y="876.1962460161542"/><cell height="1.0" id="505" width="1.0" x="205.64901461754746" y="979.9136855716106"/><cell height="1.0" id="506" width="1.0" x="626.7683399827774" y="898.2347469558342"/><cell height="1.0" id="507" width="1.0" x="225.41222236048387" y="1002.0307188464342"/><cell height="1.0" id="508" width="1.0" x="597.9384621120656" y="1436.5107237680506"/><cell height="1.0" id="509" width="1.0" x="933.3378992094729" y="1869.5020800053765"/><cell height="1.0" id="510" width="1.0" x="538.7349078020966" y="1367.2810879597969"/><cell height="1.0" id="511" width="1.0" x="645.0065863277631" y="1506.4442099570979"/><cell height="1.0" id="512" width="1.0" x="1419.4509506935" y="2565.5804451302274"/><cell height="1.0" id="513" width="1.0" x="859.8471356913319" y="1755.7553759756447"/><cell height="1.0" id="514" width="1.0" x="928.4150166786576" y="1888.1033890597098"/><cell height="1.0" id="515" width="1.0" x="925.2474304160123" y="1909.5732488465019"/><cell height="1.0" id="516" width="1.0" x="947.6578539439563" y="1942.570496093001"/><cell height="1.0" id="517" width="1.0" x="1087.5394202483649" y="2131.5633639339476"/><cell height="1.0" id="518" width="1.0" x="1416.4185239467565" y="2573.1085238396504"/><cell height="1.0" id="519" width="1.0" x="1417.2849811821236" y="2603.15984665203"/><cell height="1.0" id="520" width="1.0" x="1409.979058801069" y="2579.1559197542406"/><cell height="1.0" id="521" width="1.0" x="510.34686330250304" y="1019.0971217984911"/><cell height="1.0" id="522" width="1.0" x="1127.5910131963997" y="1734.4664848778978"/><cell height="1.0" id="523" width="1.0" x="895.0267996262176" y="1474.4978558713728"/><cell height="1.0" id="524" width="1.0" x="1575.8891597636036" y="2425.9343913775506"/><cell height="1.0" id="525" width="1.0" x="1090.387641090793" y="1739.4581419176984"/><cell height="1.0" id="526" width="1.0" x="1067.525854298488" y="1790.9954946813016"/><cell height="1.0" id="527" width="1.0" x="1071.9899161150176" y="1773.2828381606057"/><cell height="1.0" id="528" width="1.0" x="1580.5279946470018" y="2437.8507390480227"/><cell height="1.0" id="529" width="1.0" x="1388.8745122111375" y="2206.4821371262674"/><cell height="1.0" id="530" width="1.0" x="461.4109631378937" y="1036.5489808243851"/><cell height="1.0" id="531" width="1.0" x="1331.9121412800212" y="991.1374220573907"/><cell height="1.0" id="532" width="1.0" x="1315.7094253797989" y="1206.7509687712002"/><cell height="1.0" id="533" width="1.0" x="1071.6818738777902" y="913.3268907449049"/><cell height="1.0" id="534" width="1.0" x="839.9823183406493" y="1380.6933377954767"/><cell height="1.0" id="535" width="1.0" x="1586.255840454628" y="2408.7269534456814"/><cell height="1.0" id="536" width="1.0" x="1126.699535167239" y="1710.461813631874"/><cell height="1.0" id="537" width="1.0" x="1035.6197219130545" y="1555.7724819865111"/><cell height="1.0" id="538" width="1.0" x="1149.3581573521005" y="1785.7216012928193"/><cell height="1.0" id="539" width="1.0" x="1181.3557208005084" y="1762.6931465146083"/><cell height="1.0" id="540" width="1.0" x="2003.870502116" y="2924.421122049516"/><cell height="1.0" id="541" width="1.0" x="1475.885139951053" y="2168.023872296661"/><cell height="1.0" id="542" width="1.0" x="1482.139971008534" y="2162.1991630690395"/><cell height="1.0" id="543" width="1.0" x="693.9837860810039" y="1042.634294434116"/><cell height="1.0" id="544" width="1.0" x="1473.7889767644836" y="1031.8319178223499"/><cell height="1.0" id="545" width="1.0" x="1390.2627393662995" y="1097.1698542744614"/><cell height="1.0" id="546" width="1.0" x="1406.5568450628407" y="929.7278929007678"/><cell height="1.0" id="547" width="1.0" x="1129.119056698211" y="1275.555760958187"/><cell height="1.0" id="548" width="1.0" x="1692.1073563329858" y="1776.957858569255"/><cell height="1.0" id="549" width="1.0" x="1280.9031867640547" y="1517.128745096472"/><cell height="1.0" id="550" width="1.0" x="1331.774139402915" y="1455.0620146439246"/><cell height="1.0" id="551" width="1.0" x="1469.210161085947" y="1765.154018460956"/><cell height="1.0" id="552" width="1.0" x="1470.1304990842832" y="1771.1652235135705"/><cell height="1.0" id="553" width="1.0" x="1700.416570059152" y="2038.887364906787"/><cell height="1.0" id="554" width="1.0" x="1715.401965127443" y="2063.7221641721476"/><cell height="1.0" id="555" width="1.0" x="1495.428508253178" y="2134.939307995209"/><cell height="1.0" id="556" width="1.0" x="1480.8870337893552" y="1065.2358402266445"/><cell height="1.0" id="557" width="1.0" x="1358.6672051625683" y="1221.73781468538"/><cell height="1.0" id="558" width="1.0" x="1362.5889713727267" y="995.4419842300458"/><cell height="1.0" id="559" width="1.0" x="1087.3753856410842" y="1291.4373141712636"/><cell height="1.0" id="560" width="1.0" x="1594.335134273705" y="2397.5695085659536"/><cell height="1.0" id="561" width="1.0" x="1193.1878484381823" y="1563.2555917156571"/><cell height="1.0" id="562" width="1.0" x="1151.8703053507752" y="1560.9454025003156"/><cell height="1.0" id="563" width="1.0" x="1230.1295495692052" y="1634.9239969314926"/><cell height="1.0" id="564" width="1.0" x="1360.9481437216718" y="1766.7701791936054"/><cell height="1.0" id="565" width="1.0" x="1371.6350554209632" y="1763.1781187877684"/><cell height="1.0" id="566" width="1.0" x="2087.1004837429587" y="2830.37802323242"/><cell height="1.0" id="567" width="1.0" x="1488.2612599466734" y="2140.458612289869"/><cell height="1.0" id="568" width="1.0" x="1492.5123289965695" y="2155.7363092961546"/><cell height="1.0" id="569" width="1.0" x="2271.0037409802885" y="1004.8743413935997"/><cell height="1.0" id="570" width="1.0" x="2065.4046756789135" y="870.4069315752649"/><cell height="1.0" id="571" width="1.0" x="1881.580394825137" y="1152.6750477512726"/><cell height="1.0" id="572" width="1.0" x="2518.3442341268064" y="1026.5022025151516"/><cell height="1.0" id="573" width="1.0" x="1976.1006961579353" y="1392.7080002580783"/><cell height="1.0" id="574" width="1.0" x="2090.7715231653888" y="1384.239612742237"/><cell height="1.0" id="575" width="1.0" x="2855.6495238038137" y="1158.6963780858146"/><cell height="1.0" id="576" width="1.0" x="3525.90628649351" y="438.26585297413095"/><cell height="1.0" id="577" width="1.0" x="2079.2856963926306" y="1082.3648134631558"/><cell height="1.0" id="578" width="1.0" x="2023.6518527025958" y="1314.6646028578086"/><cell height="1.0" id="579" width="1.0" x="2515.39593392129" y="1320.0171724751738"/><cell height="1.0" id="580" width="1.0" x="2079.544815645551" y="1447.4907967383733"/><cell height="1.0" id="581" width="1.0" x="2094.254233060947" y="1568.5285675757532"/><cell height="1.0" id="582" width="1.0" x="2272.9756122049293" y="1619.4446723003964"/><cell height="1.0" id="583" width="1.0" x="2844.9447038877315" y="1500.1915487569993"/><cell height="1.0" id="584" width="1.0" x="2578.4057602065163" y="1665.41794179809"/><cell height="1.0" id="585" width="1.0" x="1566.8593592778384" y="1464.00965712149"/><cell height="1.0" id="586" width="1.0" x="2217.821572310871" y="1334.216827870084"/><cell height="1.0" id="587" width="1.0" x="1915.4089844783982" y="1377.3996829874507"/><cell height="1.0" id="588" width="1.0" x="1965.6017254392484" y="1766.1175637852557"/><cell height="1.0" id="589" width="1.0" x="1895.9391744680079" y="2052.429058779179"/><cell height="1.0" id="590" width="1.0" x="2212.0673067067837" y="1412.0444686286119"/><cell height="1.0" id="591" width="1.0" x="1739.619947411549" y="1633.3497588064342"/><cell height="1.0" id="592" width="1.0" x="1827.461788390774" y="1581.6855788186133"/><cell height="1.0" id="593" width="1.0" x="1918.0224369787918" y="1778.4812929216198"/><cell height="1.0" id="594" width="1.0" x="2191.988173115513" y="1988.2647164023572"/><cell height="1.0" id="595" width="1.0" x="2156.4875982911044" y="2035.2160803572467"/><cell height="1.0" id="596" width="1.0" x="2337.540265745619" y="1504.0681631791736"/><cell height="1.0" id="597" width="1.0" x="2694.4746407614166" y="1431.9895724154514"/><cell height="1.0" id="598" width="1.0" x="2542.8089095663286" y="1540.5850240186312"/><cell height="1.0" id="599" width="1.0" x="3211.6550702589357" y="1381.1209499468707"/><cell height="1.0" id="600" width="1.0" x="2903.3730956169134" y="1500.1915487569993"/><cell height="1.0" id="601" width="1.0" x="1934.6305072475618" y="1730.529587938982"/><cell height="1.0" id="602" width="1.0" x="2021.1837603401466" y="1807.0849921373456"/><cell height="1.0" id="603" width="1.0" x="2237.516013275486" y="1956.1769700258196"/><cell height="1.0" id="604" width="1.0" x="2266.2867211886414" y="2014.4203215803648"/><cell height="1.0" id="605" width="1.0" x="2756.457551420544" y="1638.194545763212"/><cell height="1.0" id="606" width="1.0" x="2477.659881519245" y="1962.99432375437"/><cell height="1.0" id="607" width="1.0" x="2834.2840762139967" y="1676.358345006395"/><cell height="1.0" id="608" width="1.0" x="2598.2908875655194" y="1963.4714834549843"/><cell height="1.0" id="609" width="1.0" x="3178.0150014818905" y="1737.911570087267"/><cell height="1.0" id="618" width="1.0" x="3308.650560374229" y="332.86200993896284"/><cell height="1.0" id="619" width="1.0" x="1976.8032293795807" y="436.8714367880632"/><cell height="1.0" id="620" width="1.0" x="2352.9797626054433" y="438.2658529741312"/><cell height="1.0" id="621" width="1.0" x="3355.98464432563" y="438.26585297413095"/><cell height="1.0" id="622" width="1.0" x="3366.9273393693493" y="438.26585297413095"/><cell height="1.0" id="623" width="1.0" x="3075.117908971672" y="438.26585297413095"/><cell height="1.0" id="624" width="1.0" x="3383.1864910867926" y="438.26585297413095"/><cell height="1.0" id="625" width="1.0" x="2611.2320912921277" y="297.88087053063646"/><cell height="1.0" id="626" width="1.0" x="3567.0884284222066" y="438.26585297413095"/><cell height="1.0" id="627" width="1.0" x="3604.638156158074" y="438.26585297413095"/><cell height="1.0" id="628" width="1.0" x="3390.9354704781945" y="438.26585297413095"/><cell height="1.0" id="629" width="1.0" x="4197.067091981002" y="438.26585297413095"/><cell height="1.0" id="630" width="1.0" x="1480.1598484607673" y="637.0461251094073"/><cell height="1.0" id="631" width="1.0" x="2301.4142690548993" y="438.26585297413095"/><cell height="1.0" id="632" width="1.0" x="2378.5495436796605" y="438.26585297413095"/><cell height="1.0" id="633" width="1.0" x="1463.9928441591453" y="1179.0993742899584"/><cell height="1.0" id="634" width="1.0" x="3082.7210301544583" y="438.26585297413095"/><cell height="1.0" id="635" width="1.0" x="1850.5852619883117" y="755.9827919539256"/><cell height="1.0" id="636" width="1.0" x="2459.309121291644" y="438.26585297413095"/><cell height="1.0" id="637" width="1.0" x="1569.0230022161898" y="1155.427597241307"/><cell height="1.0" id="638" width="1.0" x="2256.329110400852" y="1030.1031926336368"/><cell height="1.0" id="639" width="1.0" x="154.0656345821449" y="922.3993165914073"/><cell height="1.0" id="640" width="1.0" x="358.8255334425414" y="951.2107735871311"/><cell height="1.0" id="641" width="1.0" x="297.0361001113963" y="1100.5986651187732"/><cell height="1.0" id="642" width="1.0" x="1143.26389423498" y="831.2803778008002"/><cell height="1.0" id="643" width="1.0" x="932.756278387224" y="1846.6452454857633"/><cell height="1.0" id="644" width="1.0" x="641.9144317911807" y="1496.654827840859"/><cell height="1.0" id="645" width="1.0" x="1421.7357074580657" y="2562.788462462051"/><cell height="1.0" id="646" width="1.0" x="1134.815664535598" y="1723.1483465454207"/><cell height="1.0" id="647" width="1.0" x="822.2955483515768" y="1394.019862300912"/><cell height="1.0" id="648" width="1.0" x="1562.2526367993958" y="2441.147228135479"/><cell height="1.0" id="649" width="1.0" x="459.2560074889132" y="1056.1827260992304"/><cell height="1.0" id="650" width="1.0" x="1314.160305995012" y="983.2881310237394"/><cell height="1.0" id="651" width="1.0" x="1179.4447006229245" y="1700.1202924068498"/><cell height="1.0" id="652" width="1.0" x="781.0331251279699" y="1307.6364485101758"/><cell height="1.0" id="653" width="1.0" x="1583.5374097918564" y="2418.83820893786"/><cell height="1.0" id="654" width="1.0" x="619.39133963266" y="1042.634294434116"/><cell height="1.0" id="655" width="1.0" x="1536.1852124193417" y="1012.9863570013306"/><cell height="1.0" id="656" width="1.0" x="1460.356283448653" y="1188.188461593366"/><cell height="1.0" id="657" width="1.0" x="1170.8131709148545" y="1256.6164065586784"/><cell height="1.0" id="658" width="1.0" x="1694.71367539852" y="1772.3515395037211"/><cell height="1.0" id="659" width="1.0" x="1356.101909199007" y="1115.154792644251"/><cell height="1.0" id="660" width="1.0" x="1355.3092605188494" y="1251.0853091249585"/><cell height="1.0" id="661" width="1.0" x="1034.2455193463018" y="1353.3931981498538"/><cell height="1.0" id="662" width="1.0" x="1589.4853555441032" y="2402.011822967255"/><cell height="1.0" id="663" width="1.0" x="2242.7249166800043" y="992.1414141239227"/><cell height="1.0" id="664" width="1.0" x="1901.8378324284893" y="1158.1101348519978"/><cell height="1.0" id="665" width="1.0" x="2524.3642183278525" y="1060.1888230947143"/><cell height="1.0" id="666" width="1.0" x="2019.1787237285346" y="1375.8840253979943"/><cell height="1.0" id="667" width="1.0" x="2099.2406209548226" y="1375.912654168838"/><cell height="1.0" id="668" width="1.0" x="3276.149027912473" y="438.26585297413095"/><cell height="1.0" id="669" width="1.0" x="1993.4280502175309" y="1336.523792905363"/><cell height="1.0" id="670" width="1.0" x="2556.6319833428797" y="1294.7268429847345"/><cell height="1.0" id="671" width="1.0" x="1976.1671927857428" y="1549.9418020470027"/><cell height="1.0" id="672" width="1.0" x="2127.357561073166" y="1435.9065408452336"/><cell height="1.0" id="673" width="1.0" x="2203.3194560041006" y="1611.599292232184"/><cell height="1.0" id="674" width="1.0" x="2612.3055816415526" y="1647.1914349904393"/><cell height="1.0" id="675" width="1.0" x="1689.7052103836297" y="1245.436302989957"/><cell height="1.0" id="676" width="1.0" x="2211.388022437369" y="1346.2534750760133"/><cell height="1.0" id="677" width="1.0" x="2288.7094942444255" y="1385.3493444436506"/><cell height="1.0" id="678" width="1.0" x="1785.1067549500374" y="1638.6944288949533"/><cell height="1.0" id="679" width="1.0" x="1815.4123159275853" y="1631.6735158736053"/><cell height="1.0" id="680" width="1.0" x="1901.4937503394353" y="1780.4097169241777"/><cell height="1.0" id="681" width="1.0" x="2527.196630867916" y="2400.7271113499796"/><cell height="1.0" id="682" width="1.0" x="2141.910372719844" y="2041.2272854098612"/><cell height="1.0" id="683" width="1.0" x="2384.3022712752895" y="1516.049902923134"/><cell height="1.0" id="684" width="1.0" x="2428.9661830218424" y="1543.274418937725"/><cell height="1.0" id="685" width="1.0" x="2541.0143000555186" y="1558.1741591150887"/><cell height="1.0" id="686" width="1.0" x="3192.6524798289624" y="1392.0049129045344"/><cell height="1.0" id="687" width="1.0" x="2856.8956581149264" y="1654.6921078855098"/><cell height="1.0" id="688" width="1.0" x="3335.7938787929493" y="338.44961161371754"/><cell height="1.0" id="689" width="1.0" x="1963.3271493795137" y="438.26585297413123"/><cell height="1.0" id="690" width="1.0" x="2342.694118195206" y="429.42622079677045"/><cell height="1.0" id="691" width="1.0" x="3156.3587153120507" y="438.26585297413095"/><cell height="1.0" id="692" width="1.0" x="3243.876651320365" y="438.26585297413095"/><cell height="1.0" id="693" width="1.0" x="3025.5626353660605" y="438.26585297413095"/><cell height="1.0" id="694" width="1.0" x="3259.858253461295" y="438.26585297413095"/><cell height="1.0" id="695" width="1.0" x="3305.7131295508916" y="438.26585297413095"/><cell height="1.0" id="696" width="1.0" x="3726.4492424148216" y="438.26585297413095"/><cell height="1.0" id="697" width="1.0" x="3639.2780632889007" y="438.26585297413095"/><cell height="1.0" id="698" width="1.0" x="3431.8131187770246" y="438.26585297413095"/><cell height="1.0" id="699" width="1.0" x="4109.777695703056" y="438.26585297413095"/><cell height="1.0" id="700" width="1.0" x="1421.9888700202087" y="675.1073871410954"/><cell height="1.0" id="701" width="1.0" x="2152.7122236737314" y="438.26585297413095"/><cell height="1.0" id="702" width="1.0" x="2386.1966462411046" y="438.26585297413095"/><cell height="1.0" id="703" width="1.0" x="1453.1079294579242" y="1176.2351066608865"/><cell height="1.0" id="704" width="1.0" x="2983.378602827453" y="438.26585297413095"/><cell height="1.0" id="705" width="1.0" x="1904.6558985837626" y="737.2168564317975"/><cell height="1.0" id="706" width="1.0" x="2449.434307389019" y="438.26585297413095"/><cell height="1.0" id="707" width="1.0" x="1544.4276592537376" y="1165.6238083933902"/><cell height="1.0" id="708" width="1.0" x="3107.722828973286" y="438.26585297413095"/><cell height="1.0" id="709" width="1.0" x="192.33667095770818" y="917.6115125055242"/><cell height="1.0" id="710" width="1.0" x="426.59647920815206" y="900.0263392668667"/><cell height="1.0" id="711" width="1.0" x="233.47962904365704" y="1014.3563023209401"/><cell height="1.0" id="712" width="1.0" x="454.95757984791464" y="1041.6454050960504"/><cell height="1.0" id="713" width="1.0" x="609.4840116954631" y="1059.5050627173603"/><cell height="1.0" id="714" width="1.0" x="2218.296766232848" y="1085.9594308537294"/><cell height="1.0" id="715" width="1.0" x="1908.132204291482" y="1177.1848306611444"/><cell height="1.0" id="716" width="1.0" x="2589.9290780091164" y="1141.1047062793264"/><cell height="1.0" id="717" width="1.0" x="1846.4690318044302" y="1413.7466557762016"/><cell height="1.0" id="718" width="1.0" x="2543.3447362207844" y="1286.356964741743"/><cell height="1.0" id="719" width="1.0" x="2188.2864031482636" y="1460.5141134671467"/><cell height="1.0" id="720" width="1.0" x="3286.5534407706255" y="315.08705427890527"/><cell height="1.0" id="721" width="1.0" x="1950.8015783713408" y="438.26585297413123"/><cell height="1.0" id="722" width="1.0" x="2324.3865039471175" y="438.26585297413095"/><cell height="1.0" id="723" width="1.0" x="1352.513071050016" y="296.7833414672359"/><cell height="1.0" id="724" width="1.0" x="1356.6936552891977" y="350.3730730297739"/><cell height="1.0" id="725" width="1.0" x="1453.4585155528032" y="404.68662032258646"/><cell height="1.0" id="726" width="1.0" x="1558.2807893441843" y="438.265852974131"/><cell height="1.0" id="727" width="1.0" x="1489.7702091031792" y="434.92454885754086"/><cell height="1.0" id="728" width="1.0" x="3034.6512158623796" y="438.26585297413095"/><cell height="1.0" id="729" width="1.0" x="3042.413834920789" y="438.26585297413095"/><cell height="1.0" id="730" width="1.0" x="2626.9290585134077" y="438.26585297413095"/><cell height="1.0" id="731" width="1.0" x="2993.0616403153026" y="438.26585297413095"/><cell height="1.0" id="732" width="1.0" x="3290.082062774353" y="438.26585297413095"/><cell height="1.0" id="733" width="1.0" x="2927.633289726832" y="438.26585297413095"/><cell height="1.0" id="734" width="1.0" x="3049.636642129769" y="438.26585297413095"/><cell height="1.0" id="735" width="1.0" x="3190.898905005355" y="438.26585297413095"/><cell height="1.0" id="736" width="1.0" x="3749.540246037124" y="438.26585297413095"/><cell height="1.0" id="737" width="1.0" x="4586.636924704489" y="438.26585297413095"/><cell height="1.0" id="738" width="1.0" x="3208.317804345579" y="438.26585297413095"/><cell height="1.0" id="739" width="1.0" x="1838.7822691223737" y="23.263466406855855"/><cell height="1.0" id="740" width="1.0" x="1771.3138482839859" y="142.96158380578993"/><cell height="1.0" id="741" width="1.0" x="1746.7783628410757" y="205.6843192260674"/><cell height="1.0" id="742" width="1.0" x="1812.6053855887983" y="254.01823419246196"/><cell height="1.0" id="743" width="1.0" x="1756.6865947859094" y="209.24723458212196"/><cell height="1.0" id="744" width="1.0" x="3361.237627811783" y="438.26585297413095"/><cell height="1.0" id="745" width="1.0" x="3539.017686451502" y="438.26585297413095"/><cell height="1.0" id="746" width="1.0" x="3166.8474526223317" y="438.26585297413095"/><cell height="1.0" id="747" width="1.0" x="3532.094030160341" y="438.26585297413095"/><cell height="1.0" id="748" width="1.0" x="4125.475208003047" y="438.26585297413095"/><cell height="1.0" id="749" width="1.0" x="3446.4942041034587" y="438.26585297413095"/><cell height="1.0" id="750" width="1.0" x="3644.904893735005" y="438.26585297413095"/><cell height="1.0" id="751" width="1.0" x="4260.699928576618" y="438.26585297413095"/><cell height="1.0" id="752" width="1.0" x="4273.130063479211" y="438.26585297413095"/><cell height="1.0" id="753" width="1.0" x="4727.461798719986" y="438.26585297413095"/><cell height="1.0" id="754" width="1.0" x="1436.1466369540626" y="676.3423027878881"/><cell height="1.0" id="755" width="1.0" x="660.3058817013434" y="705.3299736980632"/><cell height="1.0" id="756" width="1.0" x="764.7801894025729" y="738.0347466489281"/><cell height="1.0" id="757" width="1.0" x="759.8427768953975" y="856.6479318217629"/><cell height="1.0" id="758" width="1.0" x="1054.5404373933136" y="855.8014369370956"/><cell height="1.0" id="759" width="1.0" x="894.5094913339503" y="856.4170598670155"/><cell height="1.0" id="760" width="1.0" x="2244.8598997272684" y="438.26585297413095"/><cell height="1.0" id="761" width="1.0" x="2291.516653677145" y="438.26585297413095"/><cell height="1.0" id="762" width="1.0" x="1621.1261426462215" y="821.7334494069574"/><cell height="1.0" id="763" width="1.0" x="1476.4488544935655" y="1198.6850280830809"/><cell height="1.0" id="764" width="1.0" x="2900.5374179913465" y="438.26585297413095"/><cell height="1.0" id="765" width="1.0" x="2521.663506473504" y="438.26585297413095"/><cell height="1.0" id="766" width="1.0" x="2639.0701782505844" y="438.26585297413095"/><cell height="1.0" id="767" width="1.0" x="2690.130047404227" y="438.26585297413095"/><cell height="1.0" id="768" width="1.0" x="3398.1776401255865" y="438.26585297413095"/><cell height="1.0" id="769" width="1.0" x="2887.858792521855" y="438.26585297413095"/><cell height="1.0" id="770" width="1.0" x="1202.6292159587617" y="438.26585297413095"/><cell height="1.0" id="771" width="1.0" x="1131.947115537674" y="795.6599212198513"/><cell height="1.0" id="772" width="1.0" x="1119.442633107397" y="882.4862299419257"/><cell height="1.0" id="773" width="1.0" x="883.4900367781838" y="874.707020842556"/><cell height="1.0" id="774" width="1.0" x="1809.4280499607016" y="758.4749714674549"/><cell height="1.0" id="775" width="1.0" x="2513.136330535462" y="438.26585297413095"/><cell height="1.0" id="776" width="1.0" x="1542.6061196363364" y="740.6610450749222"/><cell height="1.0" id="777" width="1.0" x="1537.712971586504" y="1151.0196126600097"/><cell height="1.0" id="778" width="1.0" x="3017.152086485566" y="438.26585297413095"/><cell height="1.0" id="779" width="1.0" x="2608.9810605390667" y="438.26585297413095"/><cell height="1.0" id="780" width="1.0" x="2766.333198262283" y="438.26585297413095"/><cell height="1.0" id="781" width="1.0" x="3130.515219344014" y="438.26585297413095"/><cell height="1.0" id="782" width="1.0" x="2953.4380828411854" y="438.26585297413095"/><cell height="1.0" id="783" width="1.0" x="281.9654076292005" y="937.4131532216318"/><cell height="1.0" id="784" width="1.0" x="412.16740596034265" y="906.7865429624669"/><cell height="1.0" id="785" width="1.0" x="274.43179529903114" y="1069.1827868443274"/><cell height="1.0" id="786" width="1.0" x="491.432042449163" y="1036.4978350492797"/><cell height="1.0" id="787" width="1.0" x="588.990090806488" y="1064.3423083720545"/><cell height="1.0" id="788" width="1.0" x="2237.8746464226865" y="1174.6514486668955"/><cell height="1.0" id="789" width="1.0" x="2055.778271821829" y="866.6384285953178"/><cell height="1.0" id="790" width="1.0" x="1795.9552816715427" y="1135.9555803761518"/><cell height="1.0" id="791" width="1.0" x="2426.813559900543" y="1075.9976871786012"/><cell height="1.0" id="792" width="1.0" x="2863.9056148859577" y="1146.0315772042857"/><cell height="1.0" id="793" width="1.0" x="2033.429398427732" y="1119.7175987997803"/><cell height="1.0" id="794" width="1.0" x="1813.575399684253" y="1430.07567684149"/><cell height="1.0" id="795" width="1.0" x="2630.1410473330566" y="1308.4296775262562"/><cell height="1.0" id="796" width="1.0" x="2856.085589102043" y="1411.3858386978632"/><cell height="1.0" id="797" width="1.0" x="2271.172266524204" y="1395.689794000885"/><cell height="1.0" id="798" width="1.0" x="2055.4108407293165" y="1803.7154183435646"/><cell height="1.0" id="799" width="1.0" x="2264.911319559955" y="2003.5826462997836"/><cell height="1.0" id="800" width="1.0" x="2600.7245070383406" y="1894.8242000156806"/><cell height="1.0" id="801" width="1.0" x="3320.9243549987536" y="346.2448065146255"/><cell height="1.0" id="802" width="1.0" x="2032.0528647325568" y="436.4972886086358"/><cell height="1.0" id="803" width="1.0" x="2435.2558708265938" y="438.26585297413095"/><cell height="1.0" id="804" width="1.0" x="2938.3994557463225" y="438.26585297413095"/><cell height="1.0" id="805" width="1.0" x="2813.6708387229173" y="438.26585297413095"/><cell height="1.0" id="806" width="1.0" x="3118.2927446128137" y="438.26585297413095"/><cell height="1.0" id="807" width="1.0" x="3420.0495875737765" y="438.26585297413095"/><cell height="1.0" id="808" width="1.0" x="3057.415576488638" y="438.26585297413095"/><cell height="1.0" id="809" width="1.0" x="3338.1852541498974" y="438.26585297413095"/><cell height="1.0" id="810" width="1.0" x="3394.134207078028" y="438.26585297413095"/><cell height="1.0" id="811" width="1.0" x="3500.7747626658484" y="438.26585297413095"/><cell height="1.0" id="812" width="1.0" x="4074.649468273886" y="438.26585297413095"/><cell height="1.0" id="813" width="1.0" x="2085.1305791101154" y="438.26585297413095"/><cell height="1.0" id="814" width="1.0" x="2074.557315472881" y="438.26585297413095"/><cell height="1.0" id="815" width="1.0" x="2478.9004293281455" y="438.26585297413095"/><cell height="1.0" id="816" width="1.0" x="1438.200886705991" y="1136.3230382802135"/><cell height="1.0" id="817" width="1.0" x="2822.975401261673" y="438.26585297413095"/><cell height="1.0" id="818" width="1.0" x="1887.1027185966234" y="806.7666213309958"/><cell height="1.0" id="819" width="1.0" x="2568.9981024734248" y="438.26585297413095"/><cell height="1.0" id="820" width="1.0" x="1532.4432119130965" y="1136.2426913644367"/><cell height="1.0" id="821" width="1.0" x="2974.7067303127033" y="438.26585297413095"/><cell height="1.0" id="822" width="1.0" x="288.9474950796687" y="934.8481710454605"/><cell height="1.0" id="823" width="1.0" x="595.0819262298598" y="915.6383468936235"/><cell height="1.0" id="824" width="1.0" x="284.3287639027993" y="1082.8635538653684"/><cell height="1.0" id="825" width="1.0" x="473.33784226379345" y="1031.4188574339564"/><cell height="1.0" id="826" width="1.0" x="582.2965518891372" y="1069.418154810518"/><cell height="1.0" id="827" width="1.0" x="2249.5019522033904" y="980.2424076521495"/><cell height="1.0" id="828" width="1.0" x="1890.6150244483815" y="1182.180278334702"/><cell height="1.0" id="829" width="1.0" x="2442.3902880880055" y="1065.0828245379303"/><cell height="1.0" id="830" width="1.0" x="1958.622578839228" y="1364.8965074383116"/><cell height="1.0" id="831" width="1.0" x="2578.984204624606" y="1283.2978682887178"/><cell height="1.0" id="832" width="1.0" x="2289.5361205707886" y="1454.8064953007156"/><cell height="1.0" id="833" width="1.0" x="920.9160076103578" y="1894.2731156355337"/><cell height="1.0" id="834" width="1.0" x="985.5650356781259" y="1995.9404260858385"/><cell height="1.0" id="835" width="1.0" x="1174.3649434002755" y="2245.6475976651936"/><cell height="1.0" id="836" width="1.0" x="1038.1253639693252" y="1793.961465944513"/><cell height="1.0" id="837" width="1.0" x="1030.1759939474814" y="1545.1976139083188"/><cell height="1.0" id="838" width="1.0" x="1173.8529389212079" y="1767.469531628557"/><cell height="1.0" id="839" width="1.0" x="1468.1718293846961" y="2174.0042128695723"/><cell height="1.0" id="840" width="1.0" x="1270.970685047047" y="1493.627869391185"/><cell height="1.0" id="841" width="1.0" x="1464.298400611894" y="1771.7173651200037"/><cell height="1.0" id="842" width="1.0" x="1740.6090683540897" y="2101.4251514369303"/><cell height="1.0" id="843" width="1.0" x="1245.0641419228807" y="1517.0725393991431"/><cell height="1.0" id="844" width="1.0" x="1355.8047989562465" y="1770.5072908833856"/><cell height="1.0" id="845" width="1.0" x="1490.4166244549367" y="2147.706735095156"/><cell height="1.0" id="846" width="1.0" x="1446.9964726534" y="1048.2148481831134"/><cell height="1.0" id="847" width="1.0" x="2133.8176585773267" y="1353.8203550758979"/><cell height="1.0" id="848" width="1.0" x="2275.0482555136305" y="1421.7369094410096"/><cell height="1.0" id="849" width="1.0" x="3375.22712177025" y="300.57681738211045"/><cell height="1.0" id="850" width="1.0" x="2128.636521234853" y="438.26585297413095"/><cell height="1.0" id="851" width="1.0" x="2364.423781958288" y="438.26585297413095"/><cell height="1.0" id="852" width="1.0" x="2737.7805766854144" y="438.26585297413095"/><cell height="1.0" id="853" width="1.0" x="2724.8295391075253" y="438.26585297413095"/><cell height="1.0" id="854" width="1.0" x="2709.581936673811" y="438.26585297413095"/><cell height="1.0" id="855" width="1.0" x="3302.535096992876" y="438.26585297413095"/><cell height="1.0" id="856" width="1.0" x="2445.8627059649234" y="281.80637198317487"/><cell height="1.0" id="857" width="1.0" x="3000.6852930975433" y="438.26585297413095"/><cell height="1.0" id="858" width="1.0" x="3249.3871692073544" y="438.26585297413095"/><cell height="1.0" id="859" width="1.0" x="3470.461824063796" y="438.26585297413095"/><cell height="1.0" id="860" width="1.0" x="3480.5734402763674" y="438.26585297413095"/><cell height="1.0" id="861" width="1.0" x="4006.7533159622926" y="438.26585297413095"/><cell height="1.0" id="862" width="1.0" x="2097.9979147166146" y="438.26585297413095"/><cell height="1.0" id="863" width="1.0" x="2111.062758165577" y="438.26585297413095"/><cell height="1.0" id="864" width="1.0" x="2404.485013854156" y="438.26585297413095"/><cell height="1.0" id="865" width="1.0" x="1397.4198351157072" y="1036.5505538233053"/><cell height="1.0" id="866" width="1.0" x="2797.1952743256597" y="438.26585297413095"/><cell height="1.0" id="867" width="1.0" x="1843.1714246678198" y="775.069598240791"/><cell height="1.0" id="868" width="1.0" x="2502.8453666906253" y="438.26585297413095"/><cell height="1.0" id="869" width="1.0" x="1518.7225376855936" y="1132.8321792526951"/><cell height="1.0" id="870" width="1.0" x="2961.4064250429615" y="438.26585297413095"/><cell height="1.0" id="871" width="1.0" x="171.61320580706348" y="941.4829710617207"/><cell height="1.0" id="872" width="1.0" x="360.4845258847797" y="906.1652688321162"/><cell height="1.0" id="873" width="1.0" x="253.18614363707331" y="1038.6674988058512"/><cell height="1.0" id="874" width="1.0" x="540.0841327544435" y="1029.355312324899"/><cell height="1.0" id="875" width="1.0" x="508.97474773431355" y="1035.5886259433144"/><cell height="1.0" id="876" width="1.0" x="597.058913318489" y="1057.059584288905"/><cell height="1.0" id="877" width="1.0" x="2210.0693334151274" y="1107.7562865556054"/><cell height="1.0" id="878" width="1.0" x="1800.7227332749633" y="1153.7721308525306"/><cell height="1.0" id="879" width="1.0" x="2539.357470056007" y="1004.2787884266509"/><cell height="1.0" id="880" width="1.0" x="1893.3308618859858" y="1380.6462416895354"/><cell height="1.0" id="881" width="1.0" x="2566.385441243077" y="1274.817497313234"/><cell height="1.0" id="882" width="1.0" x="2107.933512489225" y="1464.576145257532"/><cell height="1.0" id="884" width="1.0" x="1133.8745301269255" y="1707.635983389027"/><cell height="1.0" id="885" width="1.0" x="1217.687452961682" y="1559.4303834395137"/><cell height="1.0" id="886" width="1.0" x="1039.2012057991574" y="1804.7795211450775"/><cell height="1.0" id="887" width="1.0" x="1273.6360629726087" y="1476.2528058812202"/><cell height="1.0" id="888" width="1.0" x="925.7596427511648" y="1874.8183777890888"/><cell height="1.0" id="889" width="1.0" x="2194.9735279615747" y="1481.9283825115929"/></constraints></graphical></assignment></model>